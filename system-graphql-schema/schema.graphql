"Marks the field, argument, input field or enum value as deprecated"
directive @deprecated(
    "The reason for the deprecation"
    reason: String = "No longer supported"
  ) on FIELD_DEFINITION | ARGUMENT_DEFINITION | ENUM_VALUE | INPUT_FIELD_DEFINITION

"Directs the executor to include this field or fragment only when the `if` argument is true"
directive @include(
    "Included when true."
    if: Boolean!
  ) on FIELD | FRAGMENT_SPREAD | INLINE_FRAGMENT

"Directs the executor to skip this field or fragment when the `if` argument is true."
directive @skip(
    "Skipped when true."
    if: Boolean!
  ) on FIELD | FRAGMENT_SPREAD | INLINE_FRAGMENT

"Exposes a URL that specifies the behaviour of this scalar."
directive @specifiedBy(
    "The URL that specifies the behaviour of this scalar."
    url: String!
  ) on SCALAR

"Base StructureDefinition for BackboneElement Type: Base definition for all elements that are defined inside a resource - but not those in a data type."
interface BackboneElement implements Element {
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension(filter: [ExtensionLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [ExtensionSortOption!]): [Extension!]!
  "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
  id: String
  """
  May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.
  
  Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
  """
  modifierExtension(filter: [ExtensionLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [ExtensionSortOption!]): [Extension!]!
}

"Base StructureDefinition for DataType Type: The base class for all re-useable types defined as part of the FHIR Specification."
interface DataType implements Element {
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension(filter: [ExtensionLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [ExtensionSortOption!]): [Extension!]!
  "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
  id: String
}

"A resource that includes narrative, extensions, and contained resources."
interface DomainResource implements Resource {
  "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."
  contained(filter: [ResourceLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [ResourceSortOption!]): [Resource!]!
  "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension(filter: [ExtensionLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [ExtensionSortOption!]): [Extension!]!
  "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes."
  id: String
  "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc."
  implicitRules: uri
  "The base language in which the resource is written."
  language: code
  "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource."
  meta: Meta
  """
  May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.
  
  Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
  """
  modifierExtension(filter: [ExtensionLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [ExtensionSortOption!]): [Extension!]!
  "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety."
  text: Narrative
}

"Base StructureDefinition for Element Type: Base definition for all elements in a resource."
interface Element {
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension(filter: [ExtensionLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [ExtensionSortOption!]): [Extension!]!
  "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
  id: String
}

"This is the base resource type for everything."
interface Resource {
  "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes."
  id: String
  "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc."
  implicitRules: uri
  "The base language in which the resource is written."
  language: code
  "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource."
  meta: Meta
}

"High level Union type of all types in this schema."
union AnyNode = AggregateDefinition | BoxedBase64Binary | BoxedBoolean | BoxedCanonical | BoxedCode | BoxedDate | BoxedDateTime | BoxedDecimal | BoxedId | BoxedInstant | BoxedInteger | BoxedMarkdown | BoxedOid | BoxedPositiveInt | BoxedString | BoxedTime | BoxedUnsignedInt | BoxedUri | BoxedUrl | BoxedUuid | BoxedXhtml | CodeableConcept | CodeableReference | Coding | CommandHandlerDefinition | CommandHandlerDefinitionEventFactory | CommandHandlerDefinitionEventFactoryModification | ContactDetail | ContactPoint | DataRequirement | DataRequirementCodeFilter | DataRequirementDateFilter | DataRequirementSort | Duration | ElementDefinition | ElementDefinitionBase | ElementDefinitionBinding | ElementDefinitionConstraint | ElementDefinitionExample | ElementDefinitionMapping | ElementDefinitionSlicing | ElementDefinitionSlicingDiscriminator | ElementDefinitionType | EventMessageDefinition | Expression | Extension | Identifier | Meta | Narrative | OperationDefinition | OperationDefinitionOverload | OperationDefinitionParameter | OperationDefinitionParameterBinding | OperationDefinitionParameterReferencedFrom | OperationOutcome | OperationOutcomeIssue | ParameterDefinition | Parameters | ParametersParameter | Period | Quantity | Range | Reference | SimpleQuantity | StructureDefinition | StructureDefinitionContext | StructureDefinitionDifferential | StructureDefinitionMapping | StructureDefinitionSnapshot | Timing | TimingRepeat | TriggerDefinition | UsageContext | ValueSet | ValueSetCompose | ValueSetComposeInclude | ValueSetComposeIncludeConcept | ValueSetComposeIncludeConceptDesignation | ValueSetComposeIncludeFilter | ValueSetExpansion | ValueSetExpansionContains | ValueSetExpansionParameter

"Type for union type field contained in DataRequirementDateFilter"
union DataRequirementDateFilterValue = BoxedDateTime | Duration | Period

"Type for union type field contained in ElementDefinition"
union ElementDefinitionDefaultValue = BoxedBase64Binary | BoxedBoolean | BoxedCanonical | BoxedCode | BoxedDate | BoxedDateTime | BoxedDecimal | BoxedId | BoxedInstant | BoxedInteger | BoxedMarkdown | BoxedOid | BoxedPositiveInt | BoxedString | BoxedTime | BoxedUnsignedInt | BoxedUri | BoxedUrl | BoxedUuid | CodeableConcept | CodeableReference | Coding | DataRequirement | Expression | Identifier | ParameterDefinition | Reference | TriggerDefinition

"Type for union type field contained in ElementDefinitionExample"
union ElementDefinitionExampleValue = BoxedBase64Binary | BoxedBoolean | BoxedCanonical | BoxedCode | BoxedDate | BoxedDateTime | BoxedDecimal | BoxedId | BoxedInstant | BoxedInteger | BoxedMarkdown | BoxedOid | BoxedPositiveInt | BoxedString | BoxedTime | BoxedUnsignedInt | BoxedUri | BoxedUrl | BoxedUuid | CodeableConcept | CodeableReference | Coding | DataRequirement | Expression | Identifier | ParameterDefinition | Reference | TriggerDefinition

"Type for union type field contained in ElementDefinition"
union ElementDefinitionFixed = BoxedBase64Binary | BoxedBoolean | BoxedCanonical | BoxedCode | BoxedDate | BoxedDateTime | BoxedDecimal | BoxedId | BoxedInstant | BoxedInteger | BoxedMarkdown | BoxedOid | BoxedPositiveInt | BoxedString | BoxedTime | BoxedUnsignedInt | BoxedUri | BoxedUrl | BoxedUuid | CodeableConcept | CodeableReference | Coding | DataRequirement | Expression | Identifier | ParameterDefinition | Reference | TriggerDefinition

"Type for union type field contained in ElementDefinition"
union ElementDefinitionMaxValue = BoxedDate | BoxedDateTime | BoxedDecimal | BoxedInstant | BoxedInteger | BoxedPositiveInt | BoxedTime | BoxedUnsignedInt

"Type for union type field contained in ElementDefinition"
union ElementDefinitionMinValue = BoxedDate | BoxedDateTime | BoxedDecimal | BoxedInstant | BoxedInteger | BoxedPositiveInt | BoxedTime | BoxedUnsignedInt

"Type for union type field contained in ElementDefinition"
union ElementDefinitionPattern = BoxedBase64Binary | BoxedBoolean | BoxedCanonical | BoxedCode | BoxedDate | BoxedDateTime | BoxedDecimal | BoxedId | BoxedInstant | BoxedInteger | BoxedMarkdown | BoxedOid | BoxedPositiveInt | BoxedString | BoxedTime | BoxedUnsignedInt | BoxedUri | BoxedUrl | BoxedUuid | CodeableConcept | CodeableReference | Coding | DataRequirement | Expression | Identifier | ParameterDefinition | Reference | TriggerDefinition

"Type for union type field contained in Extension"
union ExtensionValue = BoxedBase64Binary | BoxedBoolean | BoxedCanonical | BoxedCode | BoxedDate | BoxedDateTime | BoxedDecimal | BoxedId | BoxedInstant | BoxedInteger | BoxedMarkdown | BoxedOid | BoxedPositiveInt | BoxedString | BoxedTime | BoxedUnsignedInt | BoxedUri | BoxedUrl | BoxedUuid | CodeableConcept | CodeableReference | Coding | DataRequirement | Expression | Identifier | ParameterDefinition | Period | Quantity | Reference | SimpleQuantity | TriggerDefinition

"Type for union type field contained in ParametersParameter"
union ParametersParameterValue = BoxedBase64Binary | BoxedBoolean | BoxedCanonical | BoxedCode | BoxedDate | BoxedDateTime | BoxedDecimal | BoxedId | BoxedInstant | BoxedInteger | BoxedMarkdown | BoxedOid | BoxedPositiveInt | BoxedString | BoxedTime | BoxedUnsignedInt | BoxedUri | BoxedUrl | BoxedUuid | CodeableConcept | Coding | DataRequirement | Expression | Identifier | ParameterDefinition | Reference | TriggerDefinition

"Type for union type field contained in TimingRepeat"
union TimingRepeatBounds = Duration | Period | Range

"Type for union type field contained in TriggerDefinition"
union TriggerDefinitionTiming = BoxedDate | BoxedDateTime | Timing

"Type for union type field contained in UsageContext"
union UsageContextValue = CodeableConcept | Quantity | Range

"Type for union type field contained in ValueSetExpansionParameter"
union ValueSetExpansionParameterValue = BoxedBoolean | BoxedCode | BoxedDateTime | BoxedDecimal | BoxedInteger | BoxedString | BoxedUri

type AggregateDefinition implements Resource {
  "Commands for this aggregate resource."
  command(filter: [CommandHandlerDefinitionLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [CommandHandlerDefinitionSortOption!]): [CommandHandlerDefinition!]!
  "A description of the aggregate resource."
  description: String
  "Unique id for inter-element referencing"
  id: String
  "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc."
  implicitRules: uri
  "The base language in which the resource is written."
  language: code
  "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource."
  meta: Meta
  "Name for this aggregate definition (computer friendly)."
  name: String
  "Structure Definition of state of this Aggregate"
  structure: StructureDefinition!
}

"Base StructureDefinition for base64Binary Type: A stream of bytes"
type BoxedBase64Binary implements Element {
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension(filter: [ExtensionLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [ExtensionSortOption!]): [Extension!]!
  "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
  id: String
  "Primitive value for BoxedBase64Binary"
  value: base64Binary
}

"Base StructureDefinition for boolean Type: Value of \"true\" or \"false\""
type BoxedBoolean implements Element {
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension(filter: [ExtensionLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [ExtensionSortOption!]): [Extension!]!
  "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
  id: String
  "Primitive value for BoxedBoolean"
  value: Boolean
}

"Base StructureDefinition for canonical type: A URI that is a reference to a canonical URL on a FHIR resource"
type BoxedCanonical implements Element {
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension(filter: [ExtensionLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [ExtensionSortOption!]): [Extension!]!
  "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
  id: String
  "Primitive value for BoxedCanonical"
  value: canonical
}

"Base StructureDefinition for code type: A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
type BoxedCode implements Element {
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension(filter: [ExtensionLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [ExtensionSortOption!]): [Extension!]!
  "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
  id: String
  "Primitive value for BoxedCode"
  value: code
}

"Base StructureDefinition for date Type: A date or partial date (e.g. just year or year + month). There is no time zone. The format is a union of the schema types gYear, gYearMonth and date.  Dates SHALL be valid dates."
type BoxedDate implements Element {
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension(filter: [ExtensionLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [ExtensionSortOption!]): [Extension!]!
  "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
  id: String
  "Primitive value for BoxedDate"
  value: date
}

"Base StructureDefinition for dateTime Type: A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates."
type BoxedDateTime implements Element {
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension(filter: [ExtensionLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [ExtensionSortOption!]): [Extension!]!
  "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
  id: String
  "Primitive value for BoxedDateTime"
  value: dateTime
}

"Base StructureDefinition for decimal Type: A rational number with implicit precision"
type BoxedDecimal implements Element {
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension(filter: [ExtensionLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [ExtensionSortOption!]): [Extension!]!
  "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
  id: String
  "Primitive value for BoxedDecimal"
  value: Float
}

"Base StructureDefinition for id type: Any combination of letters, numerals, \"-\" and \".\", with a length limit of 64 characters.  (This might be an integer, an unprefixed OID, UUID or any other identifier pattern that meets these constraints.)  Ids are case-insensitive."
type BoxedId implements Element {
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension(filter: [ExtensionLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [ExtensionSortOption!]): [Extension!]!
  "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
  id: String
  "Primitive value for BoxedId"
  value: ID
}

"Base StructureDefinition for instant Type: An instant in time - known at least to the second"
type BoxedInstant implements Element {
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension(filter: [ExtensionLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [ExtensionSortOption!]): [Extension!]!
  "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
  id: String
  "Primitive value for BoxedInstant"
  value: instant
}

"Base StructureDefinition for integer Type: A whole number"
type BoxedInteger implements Element {
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension(filter: [ExtensionLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [ExtensionSortOption!]): [Extension!]!
  "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
  id: String
  "Primitive value for BoxedInteger"
  value: Int
}

"Base StructureDefinition for markdown type: A string that may contain Github Flavored Markdown syntax for optional processing by a mark down presentation engine"
type BoxedMarkdown implements Element {
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension(filter: [ExtensionLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [ExtensionSortOption!]): [Extension!]!
  "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
  id: String
  "Primitive value for BoxedMarkdown"
  value: markdown
}

"Base StructureDefinition for oid type: An OID represented as a URI"
type BoxedOid implements Element {
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension(filter: [ExtensionLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [ExtensionSortOption!]): [Extension!]!
  "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
  id: String
  "Primitive value for BoxedOid"
  value: oid
}

"Base StructureDefinition for positiveInt type: An integer with a value that is positive (e.g. >0)"
type BoxedPositiveInt implements Element {
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension(filter: [ExtensionLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [ExtensionSortOption!]): [Extension!]!
  "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
  id: String
  "Primitive value for BoxedPositiveInt"
  value: positiveInt
}

"Base StructureDefinition for string Type: A sequence of Unicode characters"
type BoxedString implements Element {
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension(filter: [ExtensionLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [ExtensionSortOption!]): [Extension!]!
  "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
  id: String
  "Primitive value for BoxedString"
  value: String
}

"Base StructureDefinition for time Type: A time during the day, with no date specified"
type BoxedTime implements Element {
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension(filter: [ExtensionLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [ExtensionSortOption!]): [Extension!]!
  "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
  id: String
  "Primitive value for BoxedTime"
  value: time
}

"Base StructureDefinition for unsignedInt type: An integer with a value that is not negative (e.g. >= 0)"
type BoxedUnsignedInt implements Element {
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension(filter: [ExtensionLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [ExtensionSortOption!]): [Extension!]!
  "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
  id: String
  "Primitive value for BoxedUnsignedInt"
  value: unsignedInt
}

"Base StructureDefinition for uri Type: String of characters used to identify a name or a resource"
type BoxedUri implements Element {
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension(filter: [ExtensionLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [ExtensionSortOption!]): [Extension!]!
  "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
  id: String
  "Primitive value for BoxedUri"
  value: uri
}

"Base StructureDefinition for url type: A URI that is a literal reference"
type BoxedUrl implements Element {
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension(filter: [ExtensionLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [ExtensionSortOption!]): [Extension!]!
  "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
  id: String
  "Primitive value for BoxedUrl"
  value: url
}

"Base StructureDefinition for uuid type: A UUID, represented as a URI"
type BoxedUuid implements Element {
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension(filter: [ExtensionLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [ExtensionSortOption!]): [Extension!]!
  "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
  id: String
  "Primitive value for BoxedUuid"
  value: uuid
}

"Base StructureDefinition for xhtml Type"
type BoxedXhtml implements Element {
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension(filter: [ExtensionLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [ExtensionSortOption!]): [Extension!]!
  "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
  id: String
  "Primitive value for BoxedXhtml"
  value: xhtml
}

"Base StructureDefinition for CodeableConcept Type: A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text."
type CodeableConcept implements Element {
  "A reference to a code defined by a terminology system."
  coding(filter: [CodingLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [CodingSortOption!]): [Coding!]!
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension(filter: [ExtensionLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [ExtensionSortOption!]): [Extension!]!
  "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
  id: String
  "A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user."
  text: String
}

"Base StructureDefinition for CodeableReference Type: A reference to a resource (by instance), or instead, a reference to a concept defined in a terminology or ontology (by class)."
type CodeableReference implements Element {
  "A reference to a concept - e.g. the information is identified by its general class to the degree of precision found in the terminology."
  concept: CodeableConcept
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension(filter: [ExtensionLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [ExtensionSortOption!]): [Extension!]!
  "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
  id: String
  "A reference to a resource the provides exact details about the information being referenced."
  reference: Reference
}

"Base StructureDefinition for Coding Type: A reference to a code defined by a terminology system."
type Coding implements Element {
  "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination)."
  code: code
  "A representation of the meaning of the code in the system, following the rules of the system."
  display: String
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension(filter: [ExtensionLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [ExtensionSortOption!]): [Extension!]!
  "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
  id: String
  "The identification of the code system that defines the meaning of the symbol in the code."
  system: uri
  "Indicates that this coding was chosen by a user directly - e.g. off a pick list of available items (codes or displays)."
  userSelected: Boolean
  "The version of the code system which was used when choosing this code. Note that a well-maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
  version: String
}

type CommandHandlerDefinition implements Element {
  "The creational policy for the resource."
  creationalPolicy: code
  "Definition of events to fire."
  eventFactory(filter: [CommandHandlerDefinitionEventFactoryLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [CommandHandlerDefinitionEventFactorySortOption!]): [CommandHandlerDefinitionEventFactory!]!
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension(filter: [ExtensionLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [ExtensionSortOption!]): [Extension!]!
  "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
  id: String
  "The operation to be executed."
  operation: OperationDefinition
}

"Type for anonymous field contained in CommandHandlerDefinition"
type CommandHandlerDefinitionEventFactory implements BackboneElement & Element {
  "The event to fire."
  event: EventMessageDefinition
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension(filter: [ExtensionLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [ExtensionSortOption!]): [Extension!]!
  "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
  id: String
  "Specifies the modifications to be made to the aggregate."
  modification(filter: [CommandHandlerDefinitionEventFactoryModificationLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [CommandHandlerDefinitionEventFactoryModificationSortOption!]): [CommandHandlerDefinitionEventFactoryModification!]!
  """
  May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.
  
  Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
  """
  modifierExtension(filter: [ExtensionLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [ExtensionSortOption!]): [Extension!]!
}

"Type for anonymous field contained in CommandHandlerDefinition"
type CommandHandlerDefinitionEventFactoryModification implements BackboneElement & Element {
  "The parameter name on operation which will be used as destination index for insert and move"
  destinationIndexParameterName: String
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension(filter: [ExtensionLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [ExtensionSortOption!]): [Extension!]!
  "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
  id: String
  "The parameter name on operation which will be used as input value for modification."
  inputValueParameterName: String
  "The kind of modification to be made. add | replace | move | remove | insert"
  kind: code!
  "The path on aggregate structure where the modification will be applied."
  modificationPath: String!
  """
  May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.
  
  Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
  """
  modifierExtension(filter: [ExtensionLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [ExtensionSortOption!]): [Extension!]!
}

"Base StructureDefinition for ContactDetail Type: Specifies contact information for a person or organization."
type ContactDetail implements Element {
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension(filter: [ExtensionLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [ExtensionSortOption!]): [Extension!]!
  "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
  id: String
  "The name of an individual to contact."
  name: String
  "The contact details for the individual (if a name was provided) or the organization."
  telecom(filter: [ContactPointLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [ContactPointSortOption!]): [ContactPoint!]!
}

"Base StructureDefinition for ContactPoint Type: Details for all kinds of technology mediated contact points for a person or organization, including telephone, email, etc."
type ContactPoint implements Element {
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension(filter: [ExtensionLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [ExtensionSortOption!]): [Extension!]!
  "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
  id: String
  "Time period when the contact point was/is in use."
  period: Period
  "Specifies a preferred order in which to use a set of contacts. ContactPoints with lower rank values are more preferred than those with higher rank values."
  rank: positiveInt
  "Telecommunications form for contact point - what communications system is required to make use of the contact."
  system: code
  "Identifies the purpose for the contact point."
  use: code
  "The actual contact point details, in a form that is meaningful to the designated communication system (i.e. phone number or email address)."
  value: String
}

"Base StructureDefinition for DataRequirement Type: Describes a required data item for evaluation in terms of the type of data, and optional code or date-based filters of the data."
type DataRequirement implements Element {
  "Code filters specify additional constraints on the data, specifying the value set of interest for a particular element of the data. Each code filter defines an additional constraint on the data, i.e. code filters are AND'ed, not OR'ed."
  codeFilter(filter: [DataRequirementCodeFilterLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [DataRequirementCodeFilterSortOption!]): [DataRequirementCodeFilter!]!
  "Date filters specify additional constraints on the data in terms of the applicable date range for specific elements. Each date filter specifies an additional constraint on the data, i.e. date filters are AND'ed, not OR'ed."
  dateFilter(filter: [DataRequirementDateFilterLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [DataRequirementDateFilterSortOption!]): [DataRequirementDateFilter!]!
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension(filter: [ExtensionLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [ExtensionSortOption!]): [Extension!]!
  "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
  id: String
  "Specifies a maximum number of results that are required (uses the _count search parameter)."
  limit: positiveInt
  """
  Indicates that specific elements of the type are referenced by the knowledge module and must be supported by the consumer in order to obtain an effective evaluation. This does not mean that a value is required for this element, only that the consuming system must understand the element and be able to provide values for it if they are available. 
  
  The value of mustSupport SHALL be a FHIRPath resolveable on the type of the DataRequirement. The path SHALL consist only of identifiers, constant indexers, and .resolve() (see the [Simple FHIRPath Profile](fhirpath.html#simple) for full details).
  """
  mustSupport: [String!]!
  "The profile of the required data, specified as the uri of the profile definition."
  profile: [canonical!]!
  "Specifies the order of the results to be returned."
  sort(filter: [DataRequirementSortLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [DataRequirementSortSortOption!]): [DataRequirementSort!]!
  "The intended subjects of the data requirement. If this element is not provided, a Patient subject is assumed."
  subject: CodeableConcept
  "The type of the required data, specified as the type name of a resource. For profiles, this value is set to the type of the base resource of the profile."
  type: code!
}

"Type for anonymous field contained in DataRequirement"
type DataRequirementCodeFilter implements Element {
  "The codes for the code filter. If values are given, the filter will return only those data items for which the code-valued attribute specified by the path has a value that is one of the specified codes. If codes are specified in addition to a value set, the filter returns items matching a code in the value set or one of the specified codes."
  code(filter: [CodingLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [CodingSortOption!]): [Coding!]!
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension(filter: [ExtensionLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [ExtensionSortOption!]): [Extension!]!
  "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
  id: String
  "The code-valued attribute of the filter. The specified path SHALL be a FHIRPath resolveable on the specified type of the DataRequirement, and SHALL consist only of identifiers, constant indexers, and .resolve(). The path is allowed to contain qualifiers (.) to traverse sub-elements, as well as indexers ([x]) to traverse multiple-cardinality sub-elements (see the [Simple FHIRPath Profile](fhirpath.html#simple) for full details). Note that the index must be an integer constant. The path must resolve to an element of type code, Coding, or CodeableConcept."
  path: String
  "A token parameter that refers to a search parameter defined on the specified type of the DataRequirement, and which searches on elements of type code, Coding, or CodeableConcept."
  searchParam: String
  "The valueset for the code filter. The valueSet and code elements are additive. If valueSet is specified, the filter will return only those data items for which the value of the code-valued element specified in the path is a member of the specified valueset."
  valueSet: canonical
}

"Type for anonymous field contained in DataRequirement"
type DataRequirementDateFilter implements Element {
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension(filter: [ExtensionLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [ExtensionSortOption!]): [Extension!]!
  "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
  id: String
  "The date-valued attribute of the filter. The specified path SHALL be a FHIRPath resolveable on the specified type of the DataRequirement, and SHALL consist only of identifiers, constant indexers, and .resolve(). The path is allowed to contain qualifiers (.) to traverse sub-elements, as well as indexers ([x]) to traverse multiple-cardinality sub-elements (see the [Simple FHIRPath Profile](fhirpath.html#simple) for full details). Note that the index must be an integer constant. The path must resolve to an element of type date, dateTime, Period, Schedule, or Timing."
  path: String
  "A date parameter that refers to a search parameter defined on the specified type of the DataRequirement, and which searches on elements of type date, dateTime, Period, Schedule, or Timing."
  searchParam: String
  "The value of the filter. If period is specified, the filter will return only those data items that fall within the bounds determined by the Period, inclusive of the period boundaries. If dateTime is specified, the filter will return only those data items that are equal to the specified dateTime. If a Duration is specified, the filter will return only those data items that fall within Duration before now."
  value: DataRequirementDateFilterValue
}

"Type for anonymous field contained in DataRequirement"
type DataRequirementSort implements Element {
  "The direction of the sort, ascending or descending."
  direction: code!
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension(filter: [ExtensionLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [ExtensionSortOption!]): [Extension!]!
  "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
  id: String
  "The attribute of the sort. The specified path must be resolvable from the type of the required data. The path is allowed to contain qualifiers (.) to traverse sub-elements, as well as indexers ([x]) to traverse multiple-cardinality sub-elements. Note that the index must be an integer constant."
  path: String!
}

"Base StructureDefinition for Duration Type: A length of time."
type Duration implements Element {
  "A computer processable form of the unit in some unit representation system."
  code: code
  "How the value should be understood and represented - whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value."
  comparator: code
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension(filter: [ExtensionLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [ExtensionSortOption!]): [Extension!]!
  "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
  id: String
  "The identification of the system that provides the coded form of the unit."
  system: uri
  "A human-readable form of the unit."
  unit: String
  "The value of the measured amount. The value includes an implicit precision in the presentation of the value."
  value: Float
}

"Base StructureDefinition for ElementDefinition Type: Captures constraints on each element within the resource, profile, or extension."
type ElementDefinition implements BackboneElement & Element {
  "Identifies additional names by which this element might also be known."
  alias: [String!]!
  "Information about the base definition of the element, provided to make it unnecessary for tools to trace the deviation of the element through the derived and related profiles. When the element definition is not the original definition of an element - i.g. either in a constraint on another type, or for elements from a super type in a snap shot - then the information in provided in the element definition may be different to the base definition. On the original definition of the element, it will be same."
  base: ElementDefinitionBase
  "Binds to a value set if this element is coded (code, Coding, CodeableConcept, Quantity), or the data types (string, uri)."
  binding: ElementDefinitionBinding
  "A code that has the same meaning as the element in a particular terminology."
  code(filter: [CodingLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [CodingSortOption!]): [Coding!]!
  "Explanatory notes and implementation guidance about the data element, including notes about how to use the data properly, exceptions to proper use, etc. (Note: The text you are reading is specified in ElementDefinition.comment)."
  comment: markdown
  "A reference to an invariant that may make additional statements about the cardinality or value in the instance."
  condition: [ID!]!
  "Formal constraints such as co-occurrence and other constraints that can be computationally evaluated within the context of the instance."
  constraint(filter: [ElementDefinitionConstraintLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [ElementDefinitionConstraintSortOption!]): [ElementDefinitionConstraint!]!
  "Identifies an element defined elsewhere in the definition whose content rules should be applied to the current element. ContentReferences bring across all the rules that are in the ElementDefinition for the element, including definitions, cardinality constraints, bindings, invariants etc."
  contentReference: uri
  "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false')."
  defaultValue: ElementDefinitionDefaultValue
  "Provides a complete explanation of the meaning of the data element for human readability.  For the case of elements derived from existing elements (e.g. constraints), the definition SHALL be consistent with the base definition, but convey the meaning of the element in the particular context of use of the resource. (Note: The text you are reading is specified in ElementDefinition.definition)."
  definition: markdown
  "A sample value for this element demonstrating the type of information that would typically be found in the element."
  example(filter: [ElementDefinitionExampleLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [ElementDefinitionExampleSortOption!]): [ElementDefinitionExample!]!
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension(filter: [ExtensionLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [ExtensionSortOption!]): [Extension!]!
  "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing."
  fixed: ElementDefinitionFixed
  "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
  id: String
  "If true, the value of this element affects the interpretation of the element or resource that contains it, and the value of the element cannot be ignored. Typically, this is used for status, negation and qualification codes. The effect of this is that the element cannot be ignored by systems: they SHALL either recognize the element and process it, and/or a pre-determination has been made that it is not relevant to their particular system."
  isModifier: Boolean
  "Explains how that element affects the interpretation of the resource or element that contains it."
  isModifierReason: String
  "Whether the element should be included if a client requests a search with the parameter _summary=true."
  isSummary: Boolean
  "A single preferred label which is the text to display beside the element indicating its meaning or to use to prompt for the element in a user display or form."
  label: String
  "Identifies a concept from an external specification that roughly corresponds to this element."
  mapping(filter: [ElementDefinitionMappingLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [ElementDefinitionMappingSortOption!]): [ElementDefinitionMapping!]!
  "The maximum number of times this element is permitted to appear in the instance."
  max: String
  "Indicates the maximum length in characters that is permitted to be present in conformant instances and which is expected to be supported by conformant consumers that support the element."
  maxLength: Int
  "The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity."
  maxValue: ElementDefinitionMaxValue
  "The Implicit meaning that is to be understood when this element is missing (e.g. 'when this element is missing, the period is ongoing')."
  meaningWhenMissing: markdown
  "The minimum number of times this element SHALL appear in the instance."
  min: unsignedInt
  "The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity."
  minValue: ElementDefinitionMinValue
  """
  May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.
  
  Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
  """
  modifierExtension(filter: [ExtensionLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [ExtensionSortOption!]): [Extension!]!
  "If true, implementations that produce or consume resources SHALL provide \"support\" for the element in some meaningful way.  If false, the element may be ignored and not supported. If false, whether to populate or use the data element in any way is at the discretion of the implementation."
  mustSupport: Boolean
  "If present, indicates that the order of the repeating element has meaning and describes what that meaning is.  If absent, it means that the order of the element has no meaning."
  orderMeaning: String
  "The path identifies the element and is expressed as a \".\"-separated list of ancestor elements, beginning with the name of the resource or extension."
  path: String!
  """
  Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  
  
  When pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.
  
  When pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.
  
  When pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,
  
  1. If primitive: it must match exactly the pattern value
  2. If a complex object: it must match (recursively) the pattern value
  3. If an array: it must match (recursively) the pattern value.
  """
  pattern: ElementDefinitionPattern
  "Codes that define how this element is represented in instances, when the deviation varies from the normal case."
  representation: [code!]!
  "This element is for traceability of why the element was created and why the constraints exist as they do. This may be used to point to source materials or specifications that drove the structure of this element."
  requirements: markdown
  "A concise description of what this element means (e.g. for use in autogenerated summaries)."
  short: String
  "If true, indicates that this slice definition is constraining a slice definition with the same name in an inherited profile. If false, the slice is not overriding any slice in an inherited profile. If missing, the slice might or might not be overriding a slice in an inherited profile, depending on the sliceName."
  sliceIsConstraining: Boolean
  "The name of this element definition slice, when slicing is working. The name must be a token with no dots or spaces. This is a unique name referring to a specific set of constraints applied to this element, used to provide a name to different slices of the same element."
  sliceName: String
  "Indicates that the element is sliced into a set of alternative definitions (i.e. in a structure definition, there are multiple different constraints on a single element in the base resource). Slicing can be used in any resource that has cardinality ..* on the base resource, or any resource with a choice of types. The set of slices is any elements that come after this in the element sequence that have the same path, until a shorter path occurs (the shorter path terminates the set)."
  slicing: ElementDefinitionSlicing
  "The data type or resource that the value of this element is permitted to be."
  type(filter: [ElementDefinitionTypeLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [ElementDefinitionTypeSortOption!]): [ElementDefinitionType!]!
  "Reference to Data type or Resource that is a(or the) type used for this element. e.g. \"string\" is a reference to http://hl7.org/fhir/StructureDefinition/string. Absolute URLs are only allowed in logical models."
  typeReference: StructureDefinition
}

"Type for anonymous field contained in ElementDefinition"
type ElementDefinitionBase implements Element {
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension(filter: [ExtensionLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [ExtensionSortOption!]): [Extension!]!
  "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
  id: String
  "Maximum cardinality of the base element identified by the path."
  max: String!
  "Minimum cardinality of the base element identified by the path."
  min: unsignedInt!
  "The Path that identifies the base element - this matches the ElementDefinition.path for that element. Across FHIR, there is only one base definition of any element - that is, an element definition on a [StructureDefinition](structuredefinition.html#) without a StructureDefinition.base."
  path: String!
}

"Type for anonymous field contained in ElementDefinition"
type ElementDefinitionBinding implements Element {
  "Describes the intended use of this particular set of codes."
  description: String
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension(filter: [ExtensionLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [ExtensionSortOption!]): [Extension!]!
  "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
  id: String
  "Indicates the degree of conformance expectations associated with this binding - that is, the degree to which the provided value set must be adhered to in the instances."
  strength: code!
  "Refers to the value set that identifies the set of codes the binding refers to."
  valueSet: canonical
}

"Type for anonymous field contained in ElementDefinition"
type ElementDefinitionConstraint implements Element {
  "A [FHIRPath](fhirpath.html) expression of constraint that can be executed to see if this constraint is met."
  expression: String
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension(filter: [ExtensionLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [ExtensionSortOption!]): [Extension!]!
  "Text that can be used to describe the constraint in messages identifying that the constraint has been violated."
  human: String!
  "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
  id: String
  "Allows identification of which elements have their cardinalities impacted by the constraint.  Will not be referenced for constraints that do not affect cardinality."
  key: ID!
  "Description of why this constraint is necessary or appropriate."
  requirements: String
  "Identifies the impact constraint violation has on the conformance of the instance."
  severity: code!
  "A reference to the original source of the constraint, for traceability purposes."
  source: canonical
  "An XPath expression of constraint that can be executed to see if this constraint is met."
  xpath: String
}

"Type for anonymous field contained in ElementDefinition"
type ElementDefinitionExample implements Element {
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension(filter: [ExtensionLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [ExtensionSortOption!]): [Extension!]!
  "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
  id: String
  "Describes the purpose of this example amoung the set of examples."
  label: String!
  "The actual value for the element, which must be one of the types allowed for this element."
  value: ElementDefinitionExampleValue!
}

"Type for anonymous field contained in ElementDefinition"
type ElementDefinitionMapping implements Element {
  "Comments that provide information about the mapping or its use."
  comment: String
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension(filter: [ExtensionLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [ExtensionSortOption!]): [Extension!]!
  "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
  id: String
  "An internal reference to the definition of a mapping."
  identity: ID!
  "Identifies the computable language in which mapping.map is expressed."
  language: code
  "Expresses what part of the target specification corresponds to this element."
  map: String!
}

"Type for anonymous field contained in ElementDefinition"
type ElementDefinitionSlicing implements Element {
  "A human-readable text description of how the slicing works. If there is no discriminator, this is required to be present to provide whatever information is possible about how the slices can be differentiated."
  description: String
  "Designates which child elements are used to discriminate between the slices when processing an instance. If one or more discriminators are provided, the value of the child elements in the instance data SHALL completely distinguish which slice the element in the resource matches based on the allowed values for those elements in each of the slices."
  discriminator(filter: [ElementDefinitionSlicingDiscriminatorLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [ElementDefinitionSlicingDiscriminatorSortOption!]): [ElementDefinitionSlicingDiscriminator!]!
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension(filter: [ExtensionLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [ExtensionSortOption!]): [Extension!]!
  "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
  id: String
  "If the matching elements have to occur in the same order as defined in the profile."
  ordered: Boolean
  "Whether additional slices are allowed or not. When the slices are ordered, profile authors can also say that additional slices are only allowed at the end."
  rules: code!
}

"Type for anonymous field contained in ElementDefinition"
type ElementDefinitionSlicingDiscriminator implements Element {
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension(filter: [ExtensionLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [ExtensionSortOption!]): [Extension!]!
  "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
  id: String
  "A FHIRPath expression, using [the simple subset of FHIRPath](fhirpath.html#simple), that is used to identify the element on which discrimination is based."
  path: String!
  "How the element value is interpreted when discrimination is evaluated."
  type: code!
}

"Type for anonymous field contained in ElementDefinition"
type ElementDefinitionType implements Element {
  "If the type is a reference to another resource, how the resource is or can be aggregated - is it a contained resource, or a reference, and if the context is a bundle, is it included in the bundle."
  aggregation: [code!]!
  "URL of Data type or Resource that is a(or the) type used for this element. References are URLs that are relative to http://hl7.org/fhir/StructureDefinition e.g. \"string\" is a reference to http://hl7.org/fhir/StructureDefinition/string. Absolute URLs are only allowed in logical models."
  code: uri!
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension(filter: [ExtensionLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [ExtensionSortOption!]): [Extension!]!
  "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
  id: String
  "Identifies a profile structure or implementation Guide that applies to the datatype this element refers to. If any profiles are specified, then the content must conform to at least one of them. The URL can be a local reference - to a contained StructureDefinition, or a reference to another StructureDefinition or Implementation Guide by a canonical URL. When an implementation guide is specified, the type SHALL conform to at least one profile defined in the implementation guide."
  profile: [canonical!]!
  "Used when the type is \"Reference\" or \"canonical\", and identifies a profile structure or implementation Guide that applies to the target of the reference this element refers to. If any profiles are specified, then the content must conform to at least one of them. The URL can be a local reference - to a contained StructureDefinition, or a reference to another StructureDefinition or Implementation Guide by a canonical URL. When an implementation guide is specified, the target resource SHALL conform to at least one profile defined in the implementation guide."
  targetProfile: [canonical!]!
  "Whether this reference needs to be version specific or version independent, or whether either can be used."
  versioning: code
}

type EventMessageDefinition implements Resource {
  "A description of the event definition."
  description: String
  "Name/Type for this event definition (computer friendly)"
  id: String
  "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc."
  implicitRules: uri
  "The base language in which the resource is written."
  language: code
  "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource."
  meta: Meta
  "Name for this event definition (user friendly)"
  name: String
  "The type of event to fire."
  type: StructureDefinition
}

"Base StructureDefinition for Expression Type: A expression that is evaluated in a specified context and returns a value. The context of use of the expression must specify the context in which the expression is evaluated, and how the result of the expression is used."
type Expression implements Element {
  "A brief, natural language description of the condition that effectively communicates the intended semantics."
  description: String
  "An expression in the specified language that returns a value."
  expression: String
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension(filter: [ExtensionLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [ExtensionSortOption!]): [Extension!]!
  "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
  id: String
  "The media type of the language for the expression."
  language: code!
  "A short name assigned to the expression to allow for multiple reuse of the expression in the context where it is defined."
  name: ID
  "A URI that defines where the expression is found."
  reference: uri
}

"Base StructureDefinition for Extension Type: Optional Extension Element - found in all resources."
type Extension implements Element {
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension(filter: [ExtensionLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [ExtensionSortOption!]): [Extension!]!
  "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
  id: String
  "Source of the definition for the extension code - a logical name or a URL."
  url: String!
  "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
  value: ExtensionValue
}

"Base StructureDefinition for Identifier Type: An identifier - identifies some entity uniquely and unambiguously. Typically this is used for business identifiers."
type Identifier implements Element {
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension(filter: [ExtensionLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [ExtensionSortOption!]): [Extension!]!
  "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
  id: String
  "Time period during which identifier is/was valid for use."
  period: Period
  "Establishes the namespace for the value - that is, a URL that describes a set values that are unique."
  system: uri
  "A coded type for the identifier that can be used to determine which identifier to use for a specific purpose."
  type: CodeableConcept
  "The purpose of this identifier."
  use: code
  "The portion of the identifier typically relevant to the user and which is unique within the context of the system."
  value: String
}

"Base StructureDefinition for Meta Type: The metadata about a resource. This is content in the resource that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource."
type Meta implements Element {
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension(filter: [ExtensionLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [ExtensionSortOption!]): [Extension!]!
  "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
  id: String
  "When the resource last changed - e.g. when the version changed."
  lastUpdated: instant
  "A list of profiles (references to [StructureDefinition](structuredefinition.html#) resources) that this resource claims to conform to. The URL is a reference to [StructureDefinition.url](structuredefinition-definitions.html#StructureDefinition.url)."
  profile: [canonical!]!
  "Security labels applied to this resource. These tags connect specific resources to the overall security policy and infrastructure."
  security(filter: [CodingLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [CodingSortOption!]): [Coding!]!
  "A uri that identifies the source system of the resource. This provides a minimal amount of [Provenance](provenance.html#) information that can be used to track or differentiate the source of information in the resource. The source may identify another FHIR server, document, message, database, etc."
  source: uri
  "Tags applied to this resource. Tags are intended to be used to identify and relate resources to process and workflow, and applications are not required to consider the tags when interpreting the meaning of a resource."
  tag(filter: [CodingLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [CodingSortOption!]): [Coding!]!
  "The version specific identifier, as it appears in the version portion of the URL. This value changes when the resource is created, updated, or deleted."
  versionId: ID
}

type Mutation {
  addAggregationOnStructureDefinitionDifferentialElementType(id: ID, payload: AddAggregationOnStructureDefinitionDifferentialElementTypeCommandPayloadInput!): MutationResponse
  addAggregationOnStructureDefinitionSnapshotElementType(id: ID, payload: AddAggregationOnStructureDefinitionSnapshotElementTypeCommandPayloadInput!): MutationResponse
  addAliasOnStructureDefinitionDifferentialElement(id: ID, payload: AddAliasOnStructureDefinitionDifferentialElementCommandPayloadInput!): MutationResponse
  addAliasOnStructureDefinitionSnapshotElement(id: ID, payload: AddAliasOnStructureDefinitionSnapshotElementCommandPayloadInput!): MutationResponse
  addCodeFilterOnDomainResourceExtensionValue(id: ID, payload: AddCodeFilterOnDomainResourceExtensionValueCommandPayloadInput!): MutationResponse
  addCodeFilterOnDomainResourceExtensionValueData(id: ID, payload: AddCodeFilterOnDomainResourceExtensionValueDataCommandPayloadInput!): MutationResponse
  addCodeFilterOnDomainResourceModifierExtensionValue(id: ID, payload: AddCodeFilterOnDomainResourceModifierExtensionValueCommandPayloadInput!): MutationResponse
  addCodeFilterOnDomainResourceModifierExtensionValueData(id: ID, payload: AddCodeFilterOnDomainResourceModifierExtensionValueDataCommandPayloadInput!): MutationResponse
  addCodeFilterOnParametersParameterValue(id: ID, payload: AddCodeFilterOnParametersParameterValueCommandPayloadInput!): MutationResponse
  addCodeFilterOnParametersParameterValueData(id: ID, payload: AddCodeFilterOnParametersParameterValueDataCommandPayloadInput!): MutationResponse
  addCodeFilterOnStructureDefinitionDifferentialElementDefaultValue(id: ID, payload: AddCodeFilterOnStructureDefinitionDifferentialElementDefaultValueCommandPayloadInput!): MutationResponse
  addCodeFilterOnStructureDefinitionDifferentialElementDefaultValueData(id: ID, payload: AddCodeFilterOnStructureDefinitionDifferentialElementDefaultValueDataCommandPayloadInput!): MutationResponse
  addCodeFilterOnStructureDefinitionDifferentialElementExampleValue(id: ID, payload: AddCodeFilterOnStructureDefinitionDifferentialElementExampleValueCommandPayloadInput!): MutationResponse
  addCodeFilterOnStructureDefinitionDifferentialElementExampleValueData(id: ID, payload: AddCodeFilterOnStructureDefinitionDifferentialElementExampleValueDataCommandPayloadInput!): MutationResponse
  addCodeFilterOnStructureDefinitionDifferentialElementFixed(id: ID, payload: AddCodeFilterOnStructureDefinitionDifferentialElementFixedCommandPayloadInput!): MutationResponse
  addCodeFilterOnStructureDefinitionDifferentialElementFixedData(id: ID, payload: AddCodeFilterOnStructureDefinitionDifferentialElementFixedDataCommandPayloadInput!): MutationResponse
  addCodeFilterOnStructureDefinitionDifferentialElementPattern(id: ID, payload: AddCodeFilterOnStructureDefinitionDifferentialElementPatternCommandPayloadInput!): MutationResponse
  addCodeFilterOnStructureDefinitionDifferentialElementPatternData(id: ID, payload: AddCodeFilterOnStructureDefinitionDifferentialElementPatternDataCommandPayloadInput!): MutationResponse
  addCodeFilterOnStructureDefinitionSnapshotElementDefaultValue(id: ID, payload: AddCodeFilterOnStructureDefinitionSnapshotElementDefaultValueCommandPayloadInput!): MutationResponse
  addCodeFilterOnStructureDefinitionSnapshotElementDefaultValueData(id: ID, payload: AddCodeFilterOnStructureDefinitionSnapshotElementDefaultValueDataCommandPayloadInput!): MutationResponse
  addCodeFilterOnStructureDefinitionSnapshotElementExampleValue(id: ID, payload: AddCodeFilterOnStructureDefinitionSnapshotElementExampleValueCommandPayloadInput!): MutationResponse
  addCodeFilterOnStructureDefinitionSnapshotElementExampleValueData(id: ID, payload: AddCodeFilterOnStructureDefinitionSnapshotElementExampleValueDataCommandPayloadInput!): MutationResponse
  addCodeFilterOnStructureDefinitionSnapshotElementFixed(id: ID, payload: AddCodeFilterOnStructureDefinitionSnapshotElementFixedCommandPayloadInput!): MutationResponse
  addCodeFilterOnStructureDefinitionSnapshotElementFixedData(id: ID, payload: AddCodeFilterOnStructureDefinitionSnapshotElementFixedDataCommandPayloadInput!): MutationResponse
  addCodeFilterOnStructureDefinitionSnapshotElementPattern(id: ID, payload: AddCodeFilterOnStructureDefinitionSnapshotElementPatternCommandPayloadInput!): MutationResponse
  addCodeFilterOnStructureDefinitionSnapshotElementPatternData(id: ID, payload: AddCodeFilterOnStructureDefinitionSnapshotElementPatternDataCommandPayloadInput!): MutationResponse
  addCodeOnDomainResourceExtensionValueCodeFilter(id: ID, payload: AddCodeOnDomainResourceExtensionValueCodeFilterCommandPayloadInput!): MutationResponse
  addCodeOnDomainResourceExtensionValueDataCodeFilter(id: ID, payload: AddCodeOnDomainResourceExtensionValueDataCodeFilterCommandPayloadInput!): MutationResponse
  addCodeOnDomainResourceModifierExtensionValueCodeFilter(id: ID, payload: AddCodeOnDomainResourceModifierExtensionValueCodeFilterCommandPayloadInput!): MutationResponse
  addCodeOnDomainResourceModifierExtensionValueDataCodeFilter(id: ID, payload: AddCodeOnDomainResourceModifierExtensionValueDataCodeFilterCommandPayloadInput!): MutationResponse
  addCodeOnParametersParameterValueCodeFilter(id: ID, payload: AddCodeOnParametersParameterValueCodeFilterCommandPayloadInput!): MutationResponse
  addCodeOnParametersParameterValueDataCodeFilter(id: ID, payload: AddCodeOnParametersParameterValueDataCodeFilterCommandPayloadInput!): MutationResponse
  addCodeOnStructureDefinitionDifferentialElement(id: ID, payload: AddCodeOnStructureDefinitionDifferentialElementCommandPayloadInput!): MutationResponse
  addCodeOnStructureDefinitionDifferentialElementDefaultValueCodeFilter(id: ID, payload: AddCodeOnStructureDefinitionDifferentialElementDefaultValueCodeFilterCommandPayloadInput!): MutationResponse
  addCodeOnStructureDefinitionDifferentialElementDefaultValueDataCodeFilter(id: ID, payload: AddCodeOnStructureDefinitionDifferentialElementDefaultValueDataCodeFilterCommandPayloadInput!): MutationResponse
  addCodeOnStructureDefinitionDifferentialElementExampleValueCodeFilter(id: ID, payload: AddCodeOnStructureDefinitionDifferentialElementExampleValueCodeFilterCommandPayloadInput!): MutationResponse
  addCodeOnStructureDefinitionDifferentialElementExampleValueDataCodeFilter(id: ID, payload: AddCodeOnStructureDefinitionDifferentialElementExampleValueDataCodeFilterCommandPayloadInput!): MutationResponse
  addCodeOnStructureDefinitionDifferentialElementFixedCodeFilter(id: ID, payload: AddCodeOnStructureDefinitionDifferentialElementFixedCodeFilterCommandPayloadInput!): MutationResponse
  addCodeOnStructureDefinitionDifferentialElementFixedDataCodeFilter(id: ID, payload: AddCodeOnStructureDefinitionDifferentialElementFixedDataCodeFilterCommandPayloadInput!): MutationResponse
  addCodeOnStructureDefinitionDifferentialElementPatternCodeFilter(id: ID, payload: AddCodeOnStructureDefinitionDifferentialElementPatternCodeFilterCommandPayloadInput!): MutationResponse
  addCodeOnStructureDefinitionDifferentialElementPatternDataCodeFilter(id: ID, payload: AddCodeOnStructureDefinitionDifferentialElementPatternDataCodeFilterCommandPayloadInput!): MutationResponse
  addCodeOnStructureDefinitionSnapshotElement(id: ID, payload: AddCodeOnStructureDefinitionSnapshotElementCommandPayloadInput!): MutationResponse
  addCodeOnStructureDefinitionSnapshotElementDefaultValueCodeFilter(id: ID, payload: AddCodeOnStructureDefinitionSnapshotElementDefaultValueCodeFilterCommandPayloadInput!): MutationResponse
  addCodeOnStructureDefinitionSnapshotElementDefaultValueDataCodeFilter(id: ID, payload: AddCodeOnStructureDefinitionSnapshotElementDefaultValueDataCodeFilterCommandPayloadInput!): MutationResponse
  addCodeOnStructureDefinitionSnapshotElementExampleValueCodeFilter(id: ID, payload: AddCodeOnStructureDefinitionSnapshotElementExampleValueCodeFilterCommandPayloadInput!): MutationResponse
  addCodeOnStructureDefinitionSnapshotElementExampleValueDataCodeFilter(id: ID, payload: AddCodeOnStructureDefinitionSnapshotElementExampleValueDataCodeFilterCommandPayloadInput!): MutationResponse
  addCodeOnStructureDefinitionSnapshotElementFixedCodeFilter(id: ID, payload: AddCodeOnStructureDefinitionSnapshotElementFixedCodeFilterCommandPayloadInput!): MutationResponse
  addCodeOnStructureDefinitionSnapshotElementFixedDataCodeFilter(id: ID, payload: AddCodeOnStructureDefinitionSnapshotElementFixedDataCodeFilterCommandPayloadInput!): MutationResponse
  addCodeOnStructureDefinitionSnapshotElementPatternCodeFilter(id: ID, payload: AddCodeOnStructureDefinitionSnapshotElementPatternCodeFilterCommandPayloadInput!): MutationResponse
  addCodeOnStructureDefinitionSnapshotElementPatternDataCodeFilter(id: ID, payload: AddCodeOnStructureDefinitionSnapshotElementPatternDataCodeFilterCommandPayloadInput!): MutationResponse
  addCodingOnDomainResourceExtensionValue(id: ID, payload: AddCodingOnDomainResourceExtensionValueCommandPayloadInput!): MutationResponse
  addCodingOnDomainResourceExtensionValueConcept(id: ID, payload: AddCodingOnDomainResourceExtensionValueConceptCommandPayloadInput!): MutationResponse
  addCodingOnDomainResourceExtensionValueDataSubject(id: ID, payload: AddCodingOnDomainResourceExtensionValueDataSubjectCommandPayloadInput!): MutationResponse
  addCodingOnDomainResourceExtensionValueSubject(id: ID, payload: AddCodingOnDomainResourceExtensionValueSubjectCommandPayloadInput!): MutationResponse
  addCodingOnDomainResourceExtensionValueTimingCode(id: ID, payload: AddCodingOnDomainResourceExtensionValueTimingCodeCommandPayloadInput!): MutationResponse
  addCodingOnDomainResourceExtensionValueType(id: ID, payload: AddCodingOnDomainResourceExtensionValueTypeCommandPayloadInput!): MutationResponse
  addCodingOnDomainResourceModifierExtensionValue(id: ID, payload: AddCodingOnDomainResourceModifierExtensionValueCommandPayloadInput!): MutationResponse
  addCodingOnDomainResourceModifierExtensionValueConcept(id: ID, payload: AddCodingOnDomainResourceModifierExtensionValueConceptCommandPayloadInput!): MutationResponse
  addCodingOnDomainResourceModifierExtensionValueDataSubject(id: ID, payload: AddCodingOnDomainResourceModifierExtensionValueDataSubjectCommandPayloadInput!): MutationResponse
  addCodingOnDomainResourceModifierExtensionValueSubject(id: ID, payload: AddCodingOnDomainResourceModifierExtensionValueSubjectCommandPayloadInput!): MutationResponse
  addCodingOnDomainResourceModifierExtensionValueTimingCode(id: ID, payload: AddCodingOnDomainResourceModifierExtensionValueTimingCodeCommandPayloadInput!): MutationResponse
  addCodingOnDomainResourceModifierExtensionValueType(id: ID, payload: AddCodingOnDomainResourceModifierExtensionValueTypeCommandPayloadInput!): MutationResponse
  addCodingOnOperationDefinitionJurisdiction(id: ID, payload: AddCodingOnOperationDefinitionJurisdictionCommandPayloadInput!): MutationResponse
  addCodingOnOperationDefinitionUseContextValue(id: ID, payload: AddCodingOnOperationDefinitionUseContextValueCommandPayloadInput!): MutationResponse
  addCodingOnOperationOutcomeIssueDetails(id: ID, payload: AddCodingOnOperationOutcomeIssueDetailsCommandPayloadInput!): MutationResponse
  addCodingOnParametersParameterValue(id: ID, payload: AddCodingOnParametersParameterValueCommandPayloadInput!): MutationResponse
  addCodingOnParametersParameterValueDataSubject(id: ID, payload: AddCodingOnParametersParameterValueDataSubjectCommandPayloadInput!): MutationResponse
  addCodingOnParametersParameterValueSubject(id: ID, payload: AddCodingOnParametersParameterValueSubjectCommandPayloadInput!): MutationResponse
  addCodingOnParametersParameterValueTimingCode(id: ID, payload: AddCodingOnParametersParameterValueTimingCodeCommandPayloadInput!): MutationResponse
  addCodingOnParametersParameterValueType(id: ID, payload: AddCodingOnParametersParameterValueTypeCommandPayloadInput!): MutationResponse
  addCodingOnStructureDefinitionDifferentialElementDefaultValue(id: ID, payload: AddCodingOnStructureDefinitionDifferentialElementDefaultValueCommandPayloadInput!): MutationResponse
  addCodingOnStructureDefinitionDifferentialElementDefaultValueConcept(id: ID, payload: AddCodingOnStructureDefinitionDifferentialElementDefaultValueConceptCommandPayloadInput!): MutationResponse
  addCodingOnStructureDefinitionDifferentialElementDefaultValueDataSubject(id: ID, payload: AddCodingOnStructureDefinitionDifferentialElementDefaultValueDataSubjectCommandPayloadInput!): MutationResponse
  addCodingOnStructureDefinitionDifferentialElementDefaultValueSubject(id: ID, payload: AddCodingOnStructureDefinitionDifferentialElementDefaultValueSubjectCommandPayloadInput!): MutationResponse
  addCodingOnStructureDefinitionDifferentialElementDefaultValueTimingCode(id: ID, payload: AddCodingOnStructureDefinitionDifferentialElementDefaultValueTimingCodeCommandPayloadInput!): MutationResponse
  addCodingOnStructureDefinitionDifferentialElementDefaultValueType(id: ID, payload: AddCodingOnStructureDefinitionDifferentialElementDefaultValueTypeCommandPayloadInput!): MutationResponse
  addCodingOnStructureDefinitionDifferentialElementExampleValue(id: ID, payload: AddCodingOnStructureDefinitionDifferentialElementExampleValueCommandPayloadInput!): MutationResponse
  addCodingOnStructureDefinitionDifferentialElementExampleValueConcept(id: ID, payload: AddCodingOnStructureDefinitionDifferentialElementExampleValueConceptCommandPayloadInput!): MutationResponse
  addCodingOnStructureDefinitionDifferentialElementExampleValueDataSubject(id: ID, payload: AddCodingOnStructureDefinitionDifferentialElementExampleValueDataSubjectCommandPayloadInput!): MutationResponse
  addCodingOnStructureDefinitionDifferentialElementExampleValueSubject(id: ID, payload: AddCodingOnStructureDefinitionDifferentialElementExampleValueSubjectCommandPayloadInput!): MutationResponse
  addCodingOnStructureDefinitionDifferentialElementExampleValueTimingCode(id: ID, payload: AddCodingOnStructureDefinitionDifferentialElementExampleValueTimingCodeCommandPayloadInput!): MutationResponse
  addCodingOnStructureDefinitionDifferentialElementExampleValueType(id: ID, payload: AddCodingOnStructureDefinitionDifferentialElementExampleValueTypeCommandPayloadInput!): MutationResponse
  addCodingOnStructureDefinitionDifferentialElementFixed(id: ID, payload: AddCodingOnStructureDefinitionDifferentialElementFixedCommandPayloadInput!): MutationResponse
  addCodingOnStructureDefinitionDifferentialElementFixedConcept(id: ID, payload: AddCodingOnStructureDefinitionDifferentialElementFixedConceptCommandPayloadInput!): MutationResponse
  addCodingOnStructureDefinitionDifferentialElementFixedDataSubject(id: ID, payload: AddCodingOnStructureDefinitionDifferentialElementFixedDataSubjectCommandPayloadInput!): MutationResponse
  addCodingOnStructureDefinitionDifferentialElementFixedSubject(id: ID, payload: AddCodingOnStructureDefinitionDifferentialElementFixedSubjectCommandPayloadInput!): MutationResponse
  addCodingOnStructureDefinitionDifferentialElementFixedTimingCode(id: ID, payload: AddCodingOnStructureDefinitionDifferentialElementFixedTimingCodeCommandPayloadInput!): MutationResponse
  addCodingOnStructureDefinitionDifferentialElementFixedType(id: ID, payload: AddCodingOnStructureDefinitionDifferentialElementFixedTypeCommandPayloadInput!): MutationResponse
  addCodingOnStructureDefinitionDifferentialElementPattern(id: ID, payload: AddCodingOnStructureDefinitionDifferentialElementPatternCommandPayloadInput!): MutationResponse
  addCodingOnStructureDefinitionDifferentialElementPatternConcept(id: ID, payload: AddCodingOnStructureDefinitionDifferentialElementPatternConceptCommandPayloadInput!): MutationResponse
  addCodingOnStructureDefinitionDifferentialElementPatternDataSubject(id: ID, payload: AddCodingOnStructureDefinitionDifferentialElementPatternDataSubjectCommandPayloadInput!): MutationResponse
  addCodingOnStructureDefinitionDifferentialElementPatternSubject(id: ID, payload: AddCodingOnStructureDefinitionDifferentialElementPatternSubjectCommandPayloadInput!): MutationResponse
  addCodingOnStructureDefinitionDifferentialElementPatternTimingCode(id: ID, payload: AddCodingOnStructureDefinitionDifferentialElementPatternTimingCodeCommandPayloadInput!): MutationResponse
  addCodingOnStructureDefinitionDifferentialElementPatternType(id: ID, payload: AddCodingOnStructureDefinitionDifferentialElementPatternTypeCommandPayloadInput!): MutationResponse
  addCodingOnStructureDefinitionIdentifierType(id: ID, payload: AddCodingOnStructureDefinitionIdentifierTypeCommandPayloadInput!): MutationResponse
  addCodingOnStructureDefinitionJurisdiction(id: ID, payload: AddCodingOnStructureDefinitionJurisdictionCommandPayloadInput!): MutationResponse
  addCodingOnStructureDefinitionSnapshotElementDefaultValue(id: ID, payload: AddCodingOnStructureDefinitionSnapshotElementDefaultValueCommandPayloadInput!): MutationResponse
  addCodingOnStructureDefinitionSnapshotElementDefaultValueConcept(id: ID, payload: AddCodingOnStructureDefinitionSnapshotElementDefaultValueConceptCommandPayloadInput!): MutationResponse
  addCodingOnStructureDefinitionSnapshotElementDefaultValueDataSubject(id: ID, payload: AddCodingOnStructureDefinitionSnapshotElementDefaultValueDataSubjectCommandPayloadInput!): MutationResponse
  addCodingOnStructureDefinitionSnapshotElementDefaultValueSubject(id: ID, payload: AddCodingOnStructureDefinitionSnapshotElementDefaultValueSubjectCommandPayloadInput!): MutationResponse
  addCodingOnStructureDefinitionSnapshotElementDefaultValueTimingCode(id: ID, payload: AddCodingOnStructureDefinitionSnapshotElementDefaultValueTimingCodeCommandPayloadInput!): MutationResponse
  addCodingOnStructureDefinitionSnapshotElementDefaultValueType(id: ID, payload: AddCodingOnStructureDefinitionSnapshotElementDefaultValueTypeCommandPayloadInput!): MutationResponse
  addCodingOnStructureDefinitionSnapshotElementExampleValue(id: ID, payload: AddCodingOnStructureDefinitionSnapshotElementExampleValueCommandPayloadInput!): MutationResponse
  addCodingOnStructureDefinitionSnapshotElementExampleValueConcept(id: ID, payload: AddCodingOnStructureDefinitionSnapshotElementExampleValueConceptCommandPayloadInput!): MutationResponse
  addCodingOnStructureDefinitionSnapshotElementExampleValueDataSubject(id: ID, payload: AddCodingOnStructureDefinitionSnapshotElementExampleValueDataSubjectCommandPayloadInput!): MutationResponse
  addCodingOnStructureDefinitionSnapshotElementExampleValueSubject(id: ID, payload: AddCodingOnStructureDefinitionSnapshotElementExampleValueSubjectCommandPayloadInput!): MutationResponse
  addCodingOnStructureDefinitionSnapshotElementExampleValueTimingCode(id: ID, payload: AddCodingOnStructureDefinitionSnapshotElementExampleValueTimingCodeCommandPayloadInput!): MutationResponse
  addCodingOnStructureDefinitionSnapshotElementExampleValueType(id: ID, payload: AddCodingOnStructureDefinitionSnapshotElementExampleValueTypeCommandPayloadInput!): MutationResponse
  addCodingOnStructureDefinitionSnapshotElementFixed(id: ID, payload: AddCodingOnStructureDefinitionSnapshotElementFixedCommandPayloadInput!): MutationResponse
  addCodingOnStructureDefinitionSnapshotElementFixedConcept(id: ID, payload: AddCodingOnStructureDefinitionSnapshotElementFixedConceptCommandPayloadInput!): MutationResponse
  addCodingOnStructureDefinitionSnapshotElementFixedDataSubject(id: ID, payload: AddCodingOnStructureDefinitionSnapshotElementFixedDataSubjectCommandPayloadInput!): MutationResponse
  addCodingOnStructureDefinitionSnapshotElementFixedSubject(id: ID, payload: AddCodingOnStructureDefinitionSnapshotElementFixedSubjectCommandPayloadInput!): MutationResponse
  addCodingOnStructureDefinitionSnapshotElementFixedTimingCode(id: ID, payload: AddCodingOnStructureDefinitionSnapshotElementFixedTimingCodeCommandPayloadInput!): MutationResponse
  addCodingOnStructureDefinitionSnapshotElementFixedType(id: ID, payload: AddCodingOnStructureDefinitionSnapshotElementFixedTypeCommandPayloadInput!): MutationResponse
  addCodingOnStructureDefinitionSnapshotElementPattern(id: ID, payload: AddCodingOnStructureDefinitionSnapshotElementPatternCommandPayloadInput!): MutationResponse
  addCodingOnStructureDefinitionSnapshotElementPatternConcept(id: ID, payload: AddCodingOnStructureDefinitionSnapshotElementPatternConceptCommandPayloadInput!): MutationResponse
  addCodingOnStructureDefinitionSnapshotElementPatternDataSubject(id: ID, payload: AddCodingOnStructureDefinitionSnapshotElementPatternDataSubjectCommandPayloadInput!): MutationResponse
  addCodingOnStructureDefinitionSnapshotElementPatternSubject(id: ID, payload: AddCodingOnStructureDefinitionSnapshotElementPatternSubjectCommandPayloadInput!): MutationResponse
  addCodingOnStructureDefinitionSnapshotElementPatternTimingCode(id: ID, payload: AddCodingOnStructureDefinitionSnapshotElementPatternTimingCodeCommandPayloadInput!): MutationResponse
  addCodingOnStructureDefinitionSnapshotElementPatternType(id: ID, payload: AddCodingOnStructureDefinitionSnapshotElementPatternTypeCommandPayloadInput!): MutationResponse
  addCodingOnStructureDefinitionUseContextValue(id: ID, payload: AddCodingOnStructureDefinitionUseContextValueCommandPayloadInput!): MutationResponse
  addCodingOnValueSetIdentifierType(id: ID, payload: AddCodingOnValueSetIdentifierTypeCommandPayloadInput!): MutationResponse
  addCodingOnValueSetJurisdiction(id: ID, payload: AddCodingOnValueSetJurisdictionCommandPayloadInput!): MutationResponse
  addCodingOnValueSetUseContextValue(id: ID, payload: AddCodingOnValueSetUseContextValueCommandPayloadInput!): MutationResponse
  addCommandOnAggregateDefinition(id: ID, payload: AddCommandOnAggregateDefinitionCommandPayloadInput!): MutationResponse
  addConceptOnValueSetComposeInclude(id: ID, payload: AddConceptOnValueSetComposeIncludeCommandPayloadInput!): MutationResponse
  addConditionOnStructureDefinitionDifferentialElement(id: ID, payload: AddConditionOnStructureDefinitionDifferentialElementCommandPayloadInput!): MutationResponse
  addConditionOnStructureDefinitionSnapshotElement(id: ID, payload: AddConditionOnStructureDefinitionSnapshotElementCommandPayloadInput!): MutationResponse
  addConstraintOnStructureDefinitionDifferentialElement(id: ID, payload: AddConstraintOnStructureDefinitionDifferentialElementCommandPayloadInput!): MutationResponse
  addConstraintOnStructureDefinitionSnapshotElement(id: ID, payload: AddConstraintOnStructureDefinitionSnapshotElementCommandPayloadInput!): MutationResponse
  addContactOnOperationDefinition(id: ID, payload: AddContactOnOperationDefinitionCommandPayloadInput!): MutationResponse
  addContactOnValueSet(id: ID, payload: AddContactOnValueSetCommandPayloadInput!): MutationResponse
  addContainedOnDomainResource(id: ID, payload: AddContainedOnDomainResourceCommandPayloadInput!): MutationResponse
  addContainsOnValueSetExpansion(id: ID, payload: AddContainsOnValueSetExpansionCommandPayloadInput!): MutationResponse
  addContextInvariantOnStructureDefinition(id: ID, payload: AddContextInvariantOnStructureDefinitionCommandPayloadInput!): MutationResponse
  addContextOnStructureDefinition(id: ID, payload: AddContextOnStructureDefinitionCommandPayloadInput!): MutationResponse
  addDataOnDomainResourceExtensionValue(id: ID, payload: AddDataOnDomainResourceExtensionValueCommandPayloadInput!): MutationResponse
  addDataOnDomainResourceModifierExtensionValue(id: ID, payload: AddDataOnDomainResourceModifierExtensionValueCommandPayloadInput!): MutationResponse
  addDataOnParametersParameterValue(id: ID, payload: AddDataOnParametersParameterValueCommandPayloadInput!): MutationResponse
  addDataOnStructureDefinitionDifferentialElementDefaultValue(id: ID, payload: AddDataOnStructureDefinitionDifferentialElementDefaultValueCommandPayloadInput!): MutationResponse
  addDataOnStructureDefinitionDifferentialElementExampleValue(id: ID, payload: AddDataOnStructureDefinitionDifferentialElementExampleValueCommandPayloadInput!): MutationResponse
  addDataOnStructureDefinitionDifferentialElementFixed(id: ID, payload: AddDataOnStructureDefinitionDifferentialElementFixedCommandPayloadInput!): MutationResponse
  addDataOnStructureDefinitionDifferentialElementPattern(id: ID, payload: AddDataOnStructureDefinitionDifferentialElementPatternCommandPayloadInput!): MutationResponse
  addDataOnStructureDefinitionSnapshotElementDefaultValue(id: ID, payload: AddDataOnStructureDefinitionSnapshotElementDefaultValueCommandPayloadInput!): MutationResponse
  addDataOnStructureDefinitionSnapshotElementExampleValue(id: ID, payload: AddDataOnStructureDefinitionSnapshotElementExampleValueCommandPayloadInput!): MutationResponse
  addDataOnStructureDefinitionSnapshotElementFixed(id: ID, payload: AddDataOnStructureDefinitionSnapshotElementFixedCommandPayloadInput!): MutationResponse
  addDataOnStructureDefinitionSnapshotElementPattern(id: ID, payload: AddDataOnStructureDefinitionSnapshotElementPatternCommandPayloadInput!): MutationResponse
  addDateFilterOnDomainResourceExtensionValue(id: ID, payload: AddDateFilterOnDomainResourceExtensionValueCommandPayloadInput!): MutationResponse
  addDateFilterOnDomainResourceExtensionValueData(id: ID, payload: AddDateFilterOnDomainResourceExtensionValueDataCommandPayloadInput!): MutationResponse
  addDateFilterOnDomainResourceModifierExtensionValue(id: ID, payload: AddDateFilterOnDomainResourceModifierExtensionValueCommandPayloadInput!): MutationResponse
  addDateFilterOnDomainResourceModifierExtensionValueData(id: ID, payload: AddDateFilterOnDomainResourceModifierExtensionValueDataCommandPayloadInput!): MutationResponse
  addDateFilterOnParametersParameterValue(id: ID, payload: AddDateFilterOnParametersParameterValueCommandPayloadInput!): MutationResponse
  addDateFilterOnParametersParameterValueData(id: ID, payload: AddDateFilterOnParametersParameterValueDataCommandPayloadInput!): MutationResponse
  addDateFilterOnStructureDefinitionDifferentialElementDefaultValue(id: ID, payload: AddDateFilterOnStructureDefinitionDifferentialElementDefaultValueCommandPayloadInput!): MutationResponse
  addDateFilterOnStructureDefinitionDifferentialElementDefaultValueData(id: ID, payload: AddDateFilterOnStructureDefinitionDifferentialElementDefaultValueDataCommandPayloadInput!): MutationResponse
  addDateFilterOnStructureDefinitionDifferentialElementExampleValue(id: ID, payload: AddDateFilterOnStructureDefinitionDifferentialElementExampleValueCommandPayloadInput!): MutationResponse
  addDateFilterOnStructureDefinitionDifferentialElementExampleValueData(id: ID, payload: AddDateFilterOnStructureDefinitionDifferentialElementExampleValueDataCommandPayloadInput!): MutationResponse
  addDateFilterOnStructureDefinitionDifferentialElementFixed(id: ID, payload: AddDateFilterOnStructureDefinitionDifferentialElementFixedCommandPayloadInput!): MutationResponse
  addDateFilterOnStructureDefinitionDifferentialElementFixedData(id: ID, payload: AddDateFilterOnStructureDefinitionDifferentialElementFixedDataCommandPayloadInput!): MutationResponse
  addDateFilterOnStructureDefinitionDifferentialElementPattern(id: ID, payload: AddDateFilterOnStructureDefinitionDifferentialElementPatternCommandPayloadInput!): MutationResponse
  addDateFilterOnStructureDefinitionDifferentialElementPatternData(id: ID, payload: AddDateFilterOnStructureDefinitionDifferentialElementPatternDataCommandPayloadInput!): MutationResponse
  addDateFilterOnStructureDefinitionSnapshotElementDefaultValue(id: ID, payload: AddDateFilterOnStructureDefinitionSnapshotElementDefaultValueCommandPayloadInput!): MutationResponse
  addDateFilterOnStructureDefinitionSnapshotElementDefaultValueData(id: ID, payload: AddDateFilterOnStructureDefinitionSnapshotElementDefaultValueDataCommandPayloadInput!): MutationResponse
  addDateFilterOnStructureDefinitionSnapshotElementExampleValue(id: ID, payload: AddDateFilterOnStructureDefinitionSnapshotElementExampleValueCommandPayloadInput!): MutationResponse
  addDateFilterOnStructureDefinitionSnapshotElementExampleValueData(id: ID, payload: AddDateFilterOnStructureDefinitionSnapshotElementExampleValueDataCommandPayloadInput!): MutationResponse
  addDateFilterOnStructureDefinitionSnapshotElementFixed(id: ID, payload: AddDateFilterOnStructureDefinitionSnapshotElementFixedCommandPayloadInput!): MutationResponse
  addDateFilterOnStructureDefinitionSnapshotElementFixedData(id: ID, payload: AddDateFilterOnStructureDefinitionSnapshotElementFixedDataCommandPayloadInput!): MutationResponse
  addDateFilterOnStructureDefinitionSnapshotElementPattern(id: ID, payload: AddDateFilterOnStructureDefinitionSnapshotElementPatternCommandPayloadInput!): MutationResponse
  addDateFilterOnStructureDefinitionSnapshotElementPatternData(id: ID, payload: AddDateFilterOnStructureDefinitionSnapshotElementPatternDataCommandPayloadInput!): MutationResponse
  addDayOfWeekOnDomainResourceExtensionValueTimingRepeat(id: ID, payload: AddDayOfWeekOnDomainResourceExtensionValueTimingRepeatCommandPayloadInput!): MutationResponse
  addDayOfWeekOnDomainResourceModifierExtensionValueTimingRepeat(id: ID, payload: AddDayOfWeekOnDomainResourceModifierExtensionValueTimingRepeatCommandPayloadInput!): MutationResponse
  addDayOfWeekOnParametersParameterValueTimingRepeat(id: ID, payload: AddDayOfWeekOnParametersParameterValueTimingRepeatCommandPayloadInput!): MutationResponse
  addDayOfWeekOnStructureDefinitionDifferentialElementDefaultValueTimingRepeat(id: ID, payload: AddDayOfWeekOnStructureDefinitionDifferentialElementDefaultValueTimingRepeatCommandPayloadInput!): MutationResponse
  addDayOfWeekOnStructureDefinitionDifferentialElementExampleValueTimingRepeat(id: ID, payload: AddDayOfWeekOnStructureDefinitionDifferentialElementExampleValueTimingRepeatCommandPayloadInput!): MutationResponse
  addDayOfWeekOnStructureDefinitionDifferentialElementFixedTimingRepeat(id: ID, payload: AddDayOfWeekOnStructureDefinitionDifferentialElementFixedTimingRepeatCommandPayloadInput!): MutationResponse
  addDayOfWeekOnStructureDefinitionDifferentialElementPatternTimingRepeat(id: ID, payload: AddDayOfWeekOnStructureDefinitionDifferentialElementPatternTimingRepeatCommandPayloadInput!): MutationResponse
  addDayOfWeekOnStructureDefinitionSnapshotElementDefaultValueTimingRepeat(id: ID, payload: AddDayOfWeekOnStructureDefinitionSnapshotElementDefaultValueTimingRepeatCommandPayloadInput!): MutationResponse
  addDayOfWeekOnStructureDefinitionSnapshotElementExampleValueTimingRepeat(id: ID, payload: AddDayOfWeekOnStructureDefinitionSnapshotElementExampleValueTimingRepeatCommandPayloadInput!): MutationResponse
  addDayOfWeekOnStructureDefinitionSnapshotElementFixedTimingRepeat(id: ID, payload: AddDayOfWeekOnStructureDefinitionSnapshotElementFixedTimingRepeatCommandPayloadInput!): MutationResponse
  addDayOfWeekOnStructureDefinitionSnapshotElementPatternTimingRepeat(id: ID, payload: AddDayOfWeekOnStructureDefinitionSnapshotElementPatternTimingRepeatCommandPayloadInput!): MutationResponse
  addDesignationOnValueSetComposeIncludeConcept(id: ID, payload: AddDesignationOnValueSetComposeIncludeConceptCommandPayloadInput!): MutationResponse
  addDesignationOnValueSetExpansionContains(id: ID, payload: AddDesignationOnValueSetExpansionContainsCommandPayloadInput!): MutationResponse
  addDiscriminatorOnStructureDefinitionDifferentialElementSlicing(id: ID, payload: AddDiscriminatorOnStructureDefinitionDifferentialElementSlicingCommandPayloadInput!): MutationResponse
  addDiscriminatorOnStructureDefinitionSnapshotElementSlicing(id: ID, payload: AddDiscriminatorOnStructureDefinitionSnapshotElementSlicingCommandPayloadInput!): MutationResponse
  addElementOnStructureDefinitionDifferential(id: ID, payload: AddElementOnStructureDefinitionDifferentialCommandPayloadInput!): MutationResponse
  addElementOnStructureDefinitionSnapshot(id: ID, payload: AddElementOnStructureDefinitionSnapshotCommandPayloadInput!): MutationResponse
  addEventFactoryOnAggregateDefinitionCommand(id: ID, payload: AddEventFactoryOnAggregateDefinitionCommandCommandPayloadInput!): MutationResponse
  addEventOnDomainResourceExtensionValueTiming(id: ID, payload: AddEventOnDomainResourceExtensionValueTimingCommandPayloadInput!): MutationResponse
  addEventOnDomainResourceModifierExtensionValueTiming(id: ID, payload: AddEventOnDomainResourceModifierExtensionValueTimingCommandPayloadInput!): MutationResponse
  addEventOnParametersParameterValueTiming(id: ID, payload: AddEventOnParametersParameterValueTimingCommandPayloadInput!): MutationResponse
  addEventOnStructureDefinitionDifferentialElementDefaultValueTiming(id: ID, payload: AddEventOnStructureDefinitionDifferentialElementDefaultValueTimingCommandPayloadInput!): MutationResponse
  addEventOnStructureDefinitionDifferentialElementExampleValueTiming(id: ID, payload: AddEventOnStructureDefinitionDifferentialElementExampleValueTimingCommandPayloadInput!): MutationResponse
  addEventOnStructureDefinitionDifferentialElementFixedTiming(id: ID, payload: AddEventOnStructureDefinitionDifferentialElementFixedTimingCommandPayloadInput!): MutationResponse
  addEventOnStructureDefinitionDifferentialElementPatternTiming(id: ID, payload: AddEventOnStructureDefinitionDifferentialElementPatternTimingCommandPayloadInput!): MutationResponse
  addEventOnStructureDefinitionSnapshotElementDefaultValueTiming(id: ID, payload: AddEventOnStructureDefinitionSnapshotElementDefaultValueTimingCommandPayloadInput!): MutationResponse
  addEventOnStructureDefinitionSnapshotElementExampleValueTiming(id: ID, payload: AddEventOnStructureDefinitionSnapshotElementExampleValueTimingCommandPayloadInput!): MutationResponse
  addEventOnStructureDefinitionSnapshotElementFixedTiming(id: ID, payload: AddEventOnStructureDefinitionSnapshotElementFixedTimingCommandPayloadInput!): MutationResponse
  addEventOnStructureDefinitionSnapshotElementPatternTiming(id: ID, payload: AddEventOnStructureDefinitionSnapshotElementPatternTimingCommandPayloadInput!): MutationResponse
  addExampleOnStructureDefinitionDifferentialElement(id: ID, payload: AddExampleOnStructureDefinitionDifferentialElementCommandPayloadInput!): MutationResponse
  addExampleOnStructureDefinitionSnapshotElement(id: ID, payload: AddExampleOnStructureDefinitionSnapshotElementCommandPayloadInput!): MutationResponse
  addExcludeOnValueSetCompose(id: ID, payload: AddExcludeOnValueSetComposeCommandPayloadInput!): MutationResponse
  addExpressionOnOperationOutcomeIssue(id: ID, payload: AddExpressionOnOperationOutcomeIssueCommandPayloadInput!): MutationResponse
  addExtensionOnDomainResource(id: ID, payload: AddExtensionOnDomainResourceCommandPayloadInput!): MutationResponse
  addFilterOnValueSetComposeInclude(id: ID, payload: AddFilterOnValueSetComposeIncludeCommandPayloadInput!): MutationResponse
  addIdentifierOnStructureDefinition(id: ID, payload: AddIdentifierOnStructureDefinitionCommandPayloadInput!): MutationResponse
  addIdentifierOnValueSet(id: ID, payload: AddIdentifierOnValueSetCommandPayloadInput!): MutationResponse
  addIncludeOnValueSetCompose(id: ID, payload: AddIncludeOnValueSetComposeCommandPayloadInput!): MutationResponse
  addIssueOnOperationOutcome(id: ID, payload: AddIssueOnOperationOutcomeCommandPayloadInput!): MutationResponse
  addJurisdictionOnOperationDefinition(id: ID, payload: AddJurisdictionOnOperationDefinitionCommandPayloadInput!): MutationResponse
  addJurisdictionOnStructureDefinition(id: ID, payload: AddJurisdictionOnStructureDefinitionCommandPayloadInput!): MutationResponse
  addJurisdictionOnValueSet(id: ID, payload: AddJurisdictionOnValueSetCommandPayloadInput!): MutationResponse
  addKeywordOnStructureDefinition(id: ID, payload: AddKeywordOnStructureDefinitionCommandPayloadInput!): MutationResponse
  addLocationOnOperationOutcomeIssue(id: ID, payload: AddLocationOnOperationOutcomeIssueCommandPayloadInput!): MutationResponse
  addMappingOnStructureDefinition(id: ID, payload: AddMappingOnStructureDefinitionCommandPayloadInput!): MutationResponse
  addMappingOnStructureDefinitionDifferentialElement(id: ID, payload: AddMappingOnStructureDefinitionDifferentialElementCommandPayloadInput!): MutationResponse
  addMappingOnStructureDefinitionSnapshotElement(id: ID, payload: AddMappingOnStructureDefinitionSnapshotElementCommandPayloadInput!): MutationResponse
  addModificationOnAggregateDefinitionCommandEventFactory(id: ID, payload: AddModificationOnAggregateDefinitionCommandEventFactoryCommandPayloadInput!): MutationResponse
  addModifierExtensionOnDomainResource(id: ID, payload: AddModifierExtensionOnDomainResourceCommandPayloadInput!): MutationResponse
  addMustSupportOnDomainResourceExtensionValue(id: ID, payload: AddMustSupportOnDomainResourceExtensionValueCommandPayloadInput!): MutationResponse
  addMustSupportOnDomainResourceExtensionValueData(id: ID, payload: AddMustSupportOnDomainResourceExtensionValueDataCommandPayloadInput!): MutationResponse
  addMustSupportOnDomainResourceModifierExtensionValue(id: ID, payload: AddMustSupportOnDomainResourceModifierExtensionValueCommandPayloadInput!): MutationResponse
  addMustSupportOnDomainResourceModifierExtensionValueData(id: ID, payload: AddMustSupportOnDomainResourceModifierExtensionValueDataCommandPayloadInput!): MutationResponse
  addMustSupportOnParametersParameterValue(id: ID, payload: AddMustSupportOnParametersParameterValueCommandPayloadInput!): MutationResponse
  addMustSupportOnParametersParameterValueData(id: ID, payload: AddMustSupportOnParametersParameterValueDataCommandPayloadInput!): MutationResponse
  addMustSupportOnStructureDefinitionDifferentialElementDefaultValue(id: ID, payload: AddMustSupportOnStructureDefinitionDifferentialElementDefaultValueCommandPayloadInput!): MutationResponse
  addMustSupportOnStructureDefinitionDifferentialElementDefaultValueData(id: ID, payload: AddMustSupportOnStructureDefinitionDifferentialElementDefaultValueDataCommandPayloadInput!): MutationResponse
  addMustSupportOnStructureDefinitionDifferentialElementExampleValue(id: ID, payload: AddMustSupportOnStructureDefinitionDifferentialElementExampleValueCommandPayloadInput!): MutationResponse
  addMustSupportOnStructureDefinitionDifferentialElementExampleValueData(id: ID, payload: AddMustSupportOnStructureDefinitionDifferentialElementExampleValueDataCommandPayloadInput!): MutationResponse
  addMustSupportOnStructureDefinitionDifferentialElementFixed(id: ID, payload: AddMustSupportOnStructureDefinitionDifferentialElementFixedCommandPayloadInput!): MutationResponse
  addMustSupportOnStructureDefinitionDifferentialElementFixedData(id: ID, payload: AddMustSupportOnStructureDefinitionDifferentialElementFixedDataCommandPayloadInput!): MutationResponse
  addMustSupportOnStructureDefinitionDifferentialElementPattern(id: ID, payload: AddMustSupportOnStructureDefinitionDifferentialElementPatternCommandPayloadInput!): MutationResponse
  addMustSupportOnStructureDefinitionDifferentialElementPatternData(id: ID, payload: AddMustSupportOnStructureDefinitionDifferentialElementPatternDataCommandPayloadInput!): MutationResponse
  addMustSupportOnStructureDefinitionSnapshotElementDefaultValue(id: ID, payload: AddMustSupportOnStructureDefinitionSnapshotElementDefaultValueCommandPayloadInput!): MutationResponse
  addMustSupportOnStructureDefinitionSnapshotElementDefaultValueData(id: ID, payload: AddMustSupportOnStructureDefinitionSnapshotElementDefaultValueDataCommandPayloadInput!): MutationResponse
  addMustSupportOnStructureDefinitionSnapshotElementExampleValue(id: ID, payload: AddMustSupportOnStructureDefinitionSnapshotElementExampleValueCommandPayloadInput!): MutationResponse
  addMustSupportOnStructureDefinitionSnapshotElementExampleValueData(id: ID, payload: AddMustSupportOnStructureDefinitionSnapshotElementExampleValueDataCommandPayloadInput!): MutationResponse
  addMustSupportOnStructureDefinitionSnapshotElementFixed(id: ID, payload: AddMustSupportOnStructureDefinitionSnapshotElementFixedCommandPayloadInput!): MutationResponse
  addMustSupportOnStructureDefinitionSnapshotElementFixedData(id: ID, payload: AddMustSupportOnStructureDefinitionSnapshotElementFixedDataCommandPayloadInput!): MutationResponse
  addMustSupportOnStructureDefinitionSnapshotElementPattern(id: ID, payload: AddMustSupportOnStructureDefinitionSnapshotElementPatternCommandPayloadInput!): MutationResponse
  addMustSupportOnStructureDefinitionSnapshotElementPatternData(id: ID, payload: AddMustSupportOnStructureDefinitionSnapshotElementPatternDataCommandPayloadInput!): MutationResponse
  addOverloadOnOperationDefinition(id: ID, payload: AddOverloadOnOperationDefinitionCommandPayloadInput!): MutationResponse
  addParameterNameOnOperationDefinitionOverload(id: ID, payload: AddParameterNameOnOperationDefinitionOverloadCommandPayloadInput!): MutationResponse
  addParameterOnOperationDefinition(id: ID, payload: AddParameterOnOperationDefinitionCommandPayloadInput!): MutationResponse
  addParameterOnParameters(id: ID, payload: AddParameterOnParametersCommandPayloadInput!): MutationResponse
  addParameterOnValueSetExpansion(id: ID, payload: AddParameterOnValueSetExpansionCommandPayloadInput!): MutationResponse
  addPartOnOperationDefinitionParameter(id: ID, payload: AddPartOnOperationDefinitionParameterCommandPayloadInput!): MutationResponse
  addPartOnParametersParameter(id: ID, payload: AddPartOnParametersParameterCommandPayloadInput!): MutationResponse
  addProfileOnDomainResourceContainedMeta(id: ID, payload: AddProfileOnDomainResourceContainedMetaCommandPayloadInput!): MutationResponse
  addProfileOnDomainResourceExtensionValue(id: ID, payload: AddProfileOnDomainResourceExtensionValueCommandPayloadInput!): MutationResponse
  addProfileOnDomainResourceExtensionValueData(id: ID, payload: AddProfileOnDomainResourceExtensionValueDataCommandPayloadInput!): MutationResponse
  addProfileOnDomainResourceModifierExtensionValue(id: ID, payload: AddProfileOnDomainResourceModifierExtensionValueCommandPayloadInput!): MutationResponse
  addProfileOnDomainResourceModifierExtensionValueData(id: ID, payload: AddProfileOnDomainResourceModifierExtensionValueDataCommandPayloadInput!): MutationResponse
  addProfileOnParametersParameterResourceMeta(id: ID, payload: AddProfileOnParametersParameterResourceMetaCommandPayloadInput!): MutationResponse
  addProfileOnParametersParameterValue(id: ID, payload: AddProfileOnParametersParameterValueCommandPayloadInput!): MutationResponse
  addProfileOnParametersParameterValueData(id: ID, payload: AddProfileOnParametersParameterValueDataCommandPayloadInput!): MutationResponse
  addProfileOnResourceMeta(id: ID, payload: AddProfileOnResourceMetaCommandPayloadInput!): MutationResponse
  addProfileOnStructureDefinitionDifferentialElementDefaultValue(id: ID, payload: AddProfileOnStructureDefinitionDifferentialElementDefaultValueCommandPayloadInput!): MutationResponse
  addProfileOnStructureDefinitionDifferentialElementDefaultValueData(id: ID, payload: AddProfileOnStructureDefinitionDifferentialElementDefaultValueDataCommandPayloadInput!): MutationResponse
  addProfileOnStructureDefinitionDifferentialElementExampleValue(id: ID, payload: AddProfileOnStructureDefinitionDifferentialElementExampleValueCommandPayloadInput!): MutationResponse
  addProfileOnStructureDefinitionDifferentialElementExampleValueData(id: ID, payload: AddProfileOnStructureDefinitionDifferentialElementExampleValueDataCommandPayloadInput!): MutationResponse
  addProfileOnStructureDefinitionDifferentialElementFixed(id: ID, payload: AddProfileOnStructureDefinitionDifferentialElementFixedCommandPayloadInput!): MutationResponse
  addProfileOnStructureDefinitionDifferentialElementFixedData(id: ID, payload: AddProfileOnStructureDefinitionDifferentialElementFixedDataCommandPayloadInput!): MutationResponse
  addProfileOnStructureDefinitionDifferentialElementPattern(id: ID, payload: AddProfileOnStructureDefinitionDifferentialElementPatternCommandPayloadInput!): MutationResponse
  addProfileOnStructureDefinitionDifferentialElementPatternData(id: ID, payload: AddProfileOnStructureDefinitionDifferentialElementPatternDataCommandPayloadInput!): MutationResponse
  addProfileOnStructureDefinitionDifferentialElementType(id: ID, payload: AddProfileOnStructureDefinitionDifferentialElementTypeCommandPayloadInput!): MutationResponse
  addProfileOnStructureDefinitionSnapshotElementDefaultValue(id: ID, payload: AddProfileOnStructureDefinitionSnapshotElementDefaultValueCommandPayloadInput!): MutationResponse
  addProfileOnStructureDefinitionSnapshotElementDefaultValueData(id: ID, payload: AddProfileOnStructureDefinitionSnapshotElementDefaultValueDataCommandPayloadInput!): MutationResponse
  addProfileOnStructureDefinitionSnapshotElementExampleValue(id: ID, payload: AddProfileOnStructureDefinitionSnapshotElementExampleValueCommandPayloadInput!): MutationResponse
  addProfileOnStructureDefinitionSnapshotElementExampleValueData(id: ID, payload: AddProfileOnStructureDefinitionSnapshotElementExampleValueDataCommandPayloadInput!): MutationResponse
  addProfileOnStructureDefinitionSnapshotElementFixed(id: ID, payload: AddProfileOnStructureDefinitionSnapshotElementFixedCommandPayloadInput!): MutationResponse
  addProfileOnStructureDefinitionSnapshotElementFixedData(id: ID, payload: AddProfileOnStructureDefinitionSnapshotElementFixedDataCommandPayloadInput!): MutationResponse
  addProfileOnStructureDefinitionSnapshotElementPattern(id: ID, payload: AddProfileOnStructureDefinitionSnapshotElementPatternCommandPayloadInput!): MutationResponse
  addProfileOnStructureDefinitionSnapshotElementPatternData(id: ID, payload: AddProfileOnStructureDefinitionSnapshotElementPatternDataCommandPayloadInput!): MutationResponse
  addProfileOnStructureDefinitionSnapshotElementType(id: ID, payload: AddProfileOnStructureDefinitionSnapshotElementTypeCommandPayloadInput!): MutationResponse
  addReferencedFromOnOperationDefinitionParameter(id: ID, payload: AddReferencedFromOnOperationDefinitionParameterCommandPayloadInput!): MutationResponse
  addRepresentationOnStructureDefinitionDifferentialElement(id: ID, payload: AddRepresentationOnStructureDefinitionDifferentialElementCommandPayloadInput!): MutationResponse
  addRepresentationOnStructureDefinitionSnapshotElement(id: ID, payload: AddRepresentationOnStructureDefinitionSnapshotElementCommandPayloadInput!): MutationResponse
  addResourceOnOperationDefinition(id: ID, payload: AddResourceOnOperationDefinitionCommandPayloadInput!): MutationResponse
  addSecurityOnDomainResourceContainedMeta(id: ID, payload: AddSecurityOnDomainResourceContainedMetaCommandPayloadInput!): MutationResponse
  addSecurityOnParametersParameterResourceMeta(id: ID, payload: AddSecurityOnParametersParameterResourceMetaCommandPayloadInput!): MutationResponse
  addSecurityOnResourceMeta(id: ID, payload: AddSecurityOnResourceMetaCommandPayloadInput!): MutationResponse
  addSortOnDomainResourceExtensionValue(id: ID, payload: AddSortOnDomainResourceExtensionValueCommandPayloadInput!): MutationResponse
  addSortOnDomainResourceExtensionValueData(id: ID, payload: AddSortOnDomainResourceExtensionValueDataCommandPayloadInput!): MutationResponse
  addSortOnDomainResourceModifierExtensionValue(id: ID, payload: AddSortOnDomainResourceModifierExtensionValueCommandPayloadInput!): MutationResponse
  addSortOnDomainResourceModifierExtensionValueData(id: ID, payload: AddSortOnDomainResourceModifierExtensionValueDataCommandPayloadInput!): MutationResponse
  addSortOnParametersParameterValue(id: ID, payload: AddSortOnParametersParameterValueCommandPayloadInput!): MutationResponse
  addSortOnParametersParameterValueData(id: ID, payload: AddSortOnParametersParameterValueDataCommandPayloadInput!): MutationResponse
  addSortOnStructureDefinitionDifferentialElementDefaultValue(id: ID, payload: AddSortOnStructureDefinitionDifferentialElementDefaultValueCommandPayloadInput!): MutationResponse
  addSortOnStructureDefinitionDifferentialElementDefaultValueData(id: ID, payload: AddSortOnStructureDefinitionDifferentialElementDefaultValueDataCommandPayloadInput!): MutationResponse
  addSortOnStructureDefinitionDifferentialElementExampleValue(id: ID, payload: AddSortOnStructureDefinitionDifferentialElementExampleValueCommandPayloadInput!): MutationResponse
  addSortOnStructureDefinitionDifferentialElementExampleValueData(id: ID, payload: AddSortOnStructureDefinitionDifferentialElementExampleValueDataCommandPayloadInput!): MutationResponse
  addSortOnStructureDefinitionDifferentialElementFixed(id: ID, payload: AddSortOnStructureDefinitionDifferentialElementFixedCommandPayloadInput!): MutationResponse
  addSortOnStructureDefinitionDifferentialElementFixedData(id: ID, payload: AddSortOnStructureDefinitionDifferentialElementFixedDataCommandPayloadInput!): MutationResponse
  addSortOnStructureDefinitionDifferentialElementPattern(id: ID, payload: AddSortOnStructureDefinitionDifferentialElementPatternCommandPayloadInput!): MutationResponse
  addSortOnStructureDefinitionDifferentialElementPatternData(id: ID, payload: AddSortOnStructureDefinitionDifferentialElementPatternDataCommandPayloadInput!): MutationResponse
  addSortOnStructureDefinitionSnapshotElementDefaultValue(id: ID, payload: AddSortOnStructureDefinitionSnapshotElementDefaultValueCommandPayloadInput!): MutationResponse
  addSortOnStructureDefinitionSnapshotElementDefaultValueData(id: ID, payload: AddSortOnStructureDefinitionSnapshotElementDefaultValueDataCommandPayloadInput!): MutationResponse
  addSortOnStructureDefinitionSnapshotElementExampleValue(id: ID, payload: AddSortOnStructureDefinitionSnapshotElementExampleValueCommandPayloadInput!): MutationResponse
  addSortOnStructureDefinitionSnapshotElementExampleValueData(id: ID, payload: AddSortOnStructureDefinitionSnapshotElementExampleValueDataCommandPayloadInput!): MutationResponse
  addSortOnStructureDefinitionSnapshotElementFixed(id: ID, payload: AddSortOnStructureDefinitionSnapshotElementFixedCommandPayloadInput!): MutationResponse
  addSortOnStructureDefinitionSnapshotElementFixedData(id: ID, payload: AddSortOnStructureDefinitionSnapshotElementFixedDataCommandPayloadInput!): MutationResponse
  addSortOnStructureDefinitionSnapshotElementPattern(id: ID, payload: AddSortOnStructureDefinitionSnapshotElementPatternCommandPayloadInput!): MutationResponse
  addSortOnStructureDefinitionSnapshotElementPatternData(id: ID, payload: AddSortOnStructureDefinitionSnapshotElementPatternDataCommandPayloadInput!): MutationResponse
  addTagOnDomainResourceContainedMeta(id: ID, payload: AddTagOnDomainResourceContainedMetaCommandPayloadInput!): MutationResponse
  addTagOnParametersParameterResourceMeta(id: ID, payload: AddTagOnParametersParameterResourceMetaCommandPayloadInput!): MutationResponse
  addTagOnResourceMeta(id: ID, payload: AddTagOnResourceMetaCommandPayloadInput!): MutationResponse
  addTargetProfileOnOperationDefinitionParameter(id: ID, payload: AddTargetProfileOnOperationDefinitionParameterCommandPayloadInput!): MutationResponse
  addTargetProfileOnStructureDefinitionDifferentialElementType(id: ID, payload: AddTargetProfileOnStructureDefinitionDifferentialElementTypeCommandPayloadInput!): MutationResponse
  addTargetProfileOnStructureDefinitionSnapshotElementType(id: ID, payload: AddTargetProfileOnStructureDefinitionSnapshotElementTypeCommandPayloadInput!): MutationResponse
  addTargetProfileReferenceOnOperationDefinitionParameter(id: ID, payload: AddTargetProfileReferenceOnOperationDefinitionParameterCommandPayloadInput!): MutationResponse
  addTelecomOnValueSetContact(id: ID, payload: AddTelecomOnValueSetContactCommandPayloadInput!): MutationResponse
  addTimeOfDayOnDomainResourceExtensionValueTimingRepeat(id: ID, payload: AddTimeOfDayOnDomainResourceExtensionValueTimingRepeatCommandPayloadInput!): MutationResponse
  addTimeOfDayOnDomainResourceModifierExtensionValueTimingRepeat(id: ID, payload: AddTimeOfDayOnDomainResourceModifierExtensionValueTimingRepeatCommandPayloadInput!): MutationResponse
  addTimeOfDayOnParametersParameterValueTimingRepeat(id: ID, payload: AddTimeOfDayOnParametersParameterValueTimingRepeatCommandPayloadInput!): MutationResponse
  addTimeOfDayOnStructureDefinitionDifferentialElementDefaultValueTimingRepeat(id: ID, payload: AddTimeOfDayOnStructureDefinitionDifferentialElementDefaultValueTimingRepeatCommandPayloadInput!): MutationResponse
  addTimeOfDayOnStructureDefinitionDifferentialElementExampleValueTimingRepeat(id: ID, payload: AddTimeOfDayOnStructureDefinitionDifferentialElementExampleValueTimingRepeatCommandPayloadInput!): MutationResponse
  addTimeOfDayOnStructureDefinitionDifferentialElementFixedTimingRepeat(id: ID, payload: AddTimeOfDayOnStructureDefinitionDifferentialElementFixedTimingRepeatCommandPayloadInput!): MutationResponse
  addTimeOfDayOnStructureDefinitionDifferentialElementPatternTimingRepeat(id: ID, payload: AddTimeOfDayOnStructureDefinitionDifferentialElementPatternTimingRepeatCommandPayloadInput!): MutationResponse
  addTimeOfDayOnStructureDefinitionSnapshotElementDefaultValueTimingRepeat(id: ID, payload: AddTimeOfDayOnStructureDefinitionSnapshotElementDefaultValueTimingRepeatCommandPayloadInput!): MutationResponse
  addTimeOfDayOnStructureDefinitionSnapshotElementExampleValueTimingRepeat(id: ID, payload: AddTimeOfDayOnStructureDefinitionSnapshotElementExampleValueTimingRepeatCommandPayloadInput!): MutationResponse
  addTimeOfDayOnStructureDefinitionSnapshotElementFixedTimingRepeat(id: ID, payload: AddTimeOfDayOnStructureDefinitionSnapshotElementFixedTimingRepeatCommandPayloadInput!): MutationResponse
  addTimeOfDayOnStructureDefinitionSnapshotElementPatternTimingRepeat(id: ID, payload: AddTimeOfDayOnStructureDefinitionSnapshotElementPatternTimingRepeatCommandPayloadInput!): MutationResponse
  addTypeOnStructureDefinitionDifferentialElement(id: ID, payload: AddTypeOnStructureDefinitionDifferentialElementCommandPayloadInput!): MutationResponse
  addTypeOnStructureDefinitionSnapshotElement(id: ID, payload: AddTypeOnStructureDefinitionSnapshotElementCommandPayloadInput!): MutationResponse
  addUseContextOnOperationDefinition(id: ID, payload: AddUseContextOnOperationDefinitionCommandPayloadInput!): MutationResponse
  addUseContextOnStructureDefinition(id: ID, payload: AddUseContextOnStructureDefinitionCommandPayloadInput!): MutationResponse
  addUseContextOnValueSet(id: ID, payload: AddUseContextOnValueSetCommandPayloadInput!): MutationResponse
  addValueSetOnValueSetComposeInclude(id: ID, payload: AddValueSetOnValueSetComposeIncludeCommandPayloadInput!): MutationResponse
  addWhenOnDomainResourceExtensionValueTimingRepeat(id: ID, payload: AddWhenOnDomainResourceExtensionValueTimingRepeatCommandPayloadInput!): MutationResponse
  addWhenOnDomainResourceModifierExtensionValueTimingRepeat(id: ID, payload: AddWhenOnDomainResourceModifierExtensionValueTimingRepeatCommandPayloadInput!): MutationResponse
  addWhenOnParametersParameterValueTimingRepeat(id: ID, payload: AddWhenOnParametersParameterValueTimingRepeatCommandPayloadInput!): MutationResponse
  addWhenOnStructureDefinitionDifferentialElementDefaultValueTimingRepeat(id: ID, payload: AddWhenOnStructureDefinitionDifferentialElementDefaultValueTimingRepeatCommandPayloadInput!): MutationResponse
  addWhenOnStructureDefinitionDifferentialElementExampleValueTimingRepeat(id: ID, payload: AddWhenOnStructureDefinitionDifferentialElementExampleValueTimingRepeatCommandPayloadInput!): MutationResponse
  addWhenOnStructureDefinitionDifferentialElementFixedTimingRepeat(id: ID, payload: AddWhenOnStructureDefinitionDifferentialElementFixedTimingRepeatCommandPayloadInput!): MutationResponse
  addWhenOnStructureDefinitionDifferentialElementPatternTimingRepeat(id: ID, payload: AddWhenOnStructureDefinitionDifferentialElementPatternTimingRepeatCommandPayloadInput!): MutationResponse
  addWhenOnStructureDefinitionSnapshotElementDefaultValueTimingRepeat(id: ID, payload: AddWhenOnStructureDefinitionSnapshotElementDefaultValueTimingRepeatCommandPayloadInput!): MutationResponse
  addWhenOnStructureDefinitionSnapshotElementExampleValueTimingRepeat(id: ID, payload: AddWhenOnStructureDefinitionSnapshotElementExampleValueTimingRepeatCommandPayloadInput!): MutationResponse
  addWhenOnStructureDefinitionSnapshotElementFixedTimingRepeat(id: ID, payload: AddWhenOnStructureDefinitionSnapshotElementFixedTimingRepeatCommandPayloadInput!): MutationResponse
  addWhenOnStructureDefinitionSnapshotElementPatternTimingRepeat(id: ID, payload: AddWhenOnStructureDefinitionSnapshotElementPatternTimingRepeatCommandPayloadInput!): MutationResponse
  createAggregateDefinition(id: ID, payload: CreateAggregateDefinitionCommandPayloadInput!): MutationResponse
  createEventMessageDefinition(id: ID, payload: CreateEventMessageDefinitionCommandPayloadInput!): MutationResponse
  createOperationDefinition(id: ID, payload: CreateOperationDefinitionCommandPayloadInput!): MutationResponse
  createOperationOutcome(id: ID, payload: CreateOperationOutcomeCommandPayloadInput!): MutationResponse
  createParameters(id: ID, payload: CreateParametersCommandPayloadInput!): MutationResponse
  createStructureDefinition(id: ID, payload: CreateStructureDefinitionCommandPayloadInput!): MutationResponse
  createValueSet(id: ID, payload: CreateValueSetCommandPayloadInput!): MutationResponse
}

type MutationResponse {
  successes: Boolean
}

"Base StructureDefinition for Narrative Type: A human-readable summary of the resource conveying the essential clinical and business information for the resource."
type Narrative implements Element {
  "The actual narrative content, a stripped down version of XHTML."
  div: xhtml!
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension(filter: [ExtensionLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [ExtensionSortOption!]): [Extension!]!
  "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
  id: String
  "The status of the narrative - whether it's entirely generated (from just the defined data or the extensions too), or whether a human authored it and it may contain additional data."
  status: code!
}

"A formal computable definition of an operation (on the RESTful interface) or a named query (using the search interaction)."
type OperationDefinition implements DomainResource & Resource {
  "Whether the operation affects state. Side effects such as producing audit trail entries do not count as 'affecting  state'."
  affectsState: Boolean
  "Indicates that this operation definition is a constraining profile on the base."
  base: canonical
  "The name used to invoke the operation."
  code: code!
  "Additional information about how to use this operation or named query."
  comment: markdown
  "Contact details to assist a user in finding and communicating with the publisher."
  contact: [String!]!
  "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."
  contained(filter: [ResourceLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [ResourceSortOption!]): [Resource!]!
  "The date  (and optionally time) when the operation definition was published. The date must change when the business version changes and it must change if the status code changes. In addition, it should change when the substantive content of the operation definition changes."
  date: dateTime
  "A free text natural language description of the operation definition from a consumer's perspective."
  description: markdown
  "A Boolean value to indicate that this operation definition is authored for testing purposes (or education/evaluation/marketing) and is not intended to be used for genuine usage."
  experimental: Boolean
  "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension(filter: [ExtensionLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [ExtensionSortOption!]): [Extension!]!
  "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes."
  id: String
  "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc."
  implicitRules: uri
  "Additional validation information for the in parameters - a single profile that covers all the parameters. The profile is a constraint on the parameters resource as a whole."
  inputProfile: canonical
  "Indicates whether this operation can be invoked on a particular instance of one of the given types."
  instance: Boolean!
  "A legal or geographic region in which the operation definition is intended to be used."
  jurisdiction(filter: [CodeableConceptLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [CodeableConceptSortOption!]): [CodeableConcept!]!
  "Whether this is an operation or a named query."
  kind: code!
  "The base language in which the resource is written."
  language: code
  "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource."
  meta: Meta
  """
  May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.
  
  Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
  """
  modifierExtension(filter: [ExtensionLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [ExtensionSortOption!]): [Extension!]!
  "A natural language name identifying the operation definition. This name should be usable as an identifier for the module by machine processing applications such as code generation."
  name: String!
  "Additional validation information for the out parameters - a single profile that covers all the parameters. The profile is a constraint on the parameters resource."
  outputProfile: canonical
  "Defines an appropriate combination of parameters to use when invoking this operation, to help code generators when generating overloaded parameter sets for this operation."
  overload(filter: [OperationDefinitionOverloadLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [OperationDefinitionOverloadSortOption!]): [OperationDefinitionOverload!]!
  "The parameters for the operation/query."
  parameter(filter: [OperationDefinitionParameterLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [OperationDefinitionParameterSortOption!]): [OperationDefinitionParameter!]!
  "The name of the organization or individual that published the operation definition."
  publisher: String
  "Explanation of why this operation definition is needed and why it has been designed as it has."
  purpose: markdown
  "The types on which this operation can be executed."
  resource: [code!]!
  "The status of this operation definition. Enables tracking the life-cycle of the content."
  status: code!
  "Indicates whether this operation or named query can be invoked at the system level (e.g. without needing to choose a resource type for the context)."
  system: Boolean!
  "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety."
  text: Narrative
  "A short, descriptive, user-friendly title for the operation definition."
  title: String
  "Indicates whether this operation or named query can be invoked at the resource type level for any given resource type level (e.g. without needing to choose a specific resource id for the context)."
  type: Boolean!
  "An absolute URI that is used to identify this operation definition when it is referenced in a specification, model, design or an instance; also called its canonical identifier. This SHOULD be globally unique and SHOULD be a literal address at which at which an authoritative instance of this operation definition is (or will be) published. This URL can be the target of a canonical reference. It SHALL remain the same when the operation definition is stored on different servers."
  url: uri
  "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate operation definition instances."
  useContext(filter: [UsageContextLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [UsageContextSortOption!]): [UsageContext!]!
  "The identifier that is used to identify this version of the operation definition when it is referenced in a specification, model, design or instance. This is an arbitrary value managed by the operation definition author and is not expected to be globally unique. For example, it might be a timestamp (e.g. yyyymmdd) if a managed version is not available. There is also no expectation that versions can be placed in a lexicographical sequence."
  version: String
}

"Type for anonymous field contained in OperationDefinition"
type OperationDefinitionOverload implements BackboneElement & Element {
  "Comments to go on overload."
  comment: String
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension(filter: [ExtensionLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [ExtensionSortOption!]): [Extension!]!
  "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
  id: String
  """
  May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.
  
  Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
  """
  modifierExtension(filter: [ExtensionLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [ExtensionSortOption!]): [Extension!]!
  "Name of parameter to include in overload."
  parameterName: [String!]!
}

"Type for anonymous field contained in OperationDefinition"
type OperationDefinitionParameter implements BackboneElement & Element {
  "Binds to a value set if this parameter is coded (code, Coding, CodeableConcept)."
  binding: OperationDefinitionParameterBinding
  "Describes the meaning or use of this parameter."
  documentation: String
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension(filter: [ExtensionLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [ExtensionSortOption!]): [Extension!]!
  "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
  id: String
  "The maximum number of times this element is permitted to appear in the request or response."
  max: String!
  "The minimum number of times this parameter SHALL appear in the request or response."
  min: Int!
  """
  May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.
  
  Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
  """
  modifierExtension(filter: [ExtensionLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [ExtensionSortOption!]): [Extension!]!
  "The name of used to identify the parameter."
  name: code!
  "The parts of a nested Parameter."
  part(filter: [OperationDefinitionParameterLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [OperationDefinitionParameterSortOption!]): [OperationDefinitionParameter!]!
  "Identifies other resource parameters within the operation invocation that are expected to resolve to this resource."
  referencedFrom(filter: [OperationDefinitionParameterReferencedFromLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [OperationDefinitionParameterReferencedFromSortOption!]): [OperationDefinitionParameterReferencedFrom!]!
  "How the parameter is understood as a search parameter. This is only used if the parameter type is 'string'."
  searchType: code
  "Used when the type is \"Reference\" or \"canonical\", and identifies a profile structure or implementation Guide that applies to the target of the reference this parameter refers to. If any profiles are specified, then the content must conform to at least one of them. The URL can be a local reference - to a contained StructureDefinition, or a reference to another StructureDefinition or Implementation Guide by a canonical URL. When an implementation guide is specified, the target resource SHALL conform to at least one profile defined in the implementation guide."
  targetProfile: [canonical!]!
  "If type is Reference | canonical, allowed targets. If type is 'Resource', then this constrains the allowed resource types"
  targetProfileReference(filter: [StructureDefinitionLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [StructureDefinitionSortOption!]): [StructureDefinition!]!
  "The type for this parameter."
  type: code
  "Whether this is an input or an output parameter."
  use: code!
}

"Type for anonymous field contained in OperationDefinition"
type OperationDefinitionParameterBinding implements BackboneElement & Element {
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension(filter: [ExtensionLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [ExtensionSortOption!]): [Extension!]!
  "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
  id: String
  """
  May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.
  
  Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
  """
  modifierExtension(filter: [ExtensionLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [ExtensionSortOption!]): [Extension!]!
  "Indicates the degree of conformance expectations associated with this binding - that is, the degree to which the provided value set must be adhered to in the instances."
  strength: code!
  "Points to the value set or external definition (e.g. implicit value set) that identifies the set of codes to be used."
  valueSet: canonical!
}

"Type for anonymous field contained in OperationDefinition"
type OperationDefinitionParameterReferencedFrom implements BackboneElement & Element {
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension(filter: [ExtensionLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [ExtensionSortOption!]): [Extension!]!
  "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
  id: String
  """
  May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.
  
  Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
  """
  modifierExtension(filter: [ExtensionLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [ExtensionSortOption!]): [Extension!]!
  "The name of the parameter or dot-separated path of parameter names pointing to the resource parameter that is expected to contain a reference to this resource."
  source: String!
  "The id of the element in the referencing resource that is expected to resolve to this resource."
  sourceId: String
}

"A collection of error, warning, or information messages that result from a system action."
type OperationOutcome implements DomainResource & Resource {
  "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."
  contained(filter: [ResourceLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [ResourceSortOption!]): [Resource!]!
  "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension(filter: [ExtensionLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [ExtensionSortOption!]): [Extension!]!
  "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes."
  id: String
  "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc."
  implicitRules: uri
  "An error, warning, or information message that results from a system action."
  issue(filter: [OperationOutcomeIssueLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [OperationOutcomeIssueSortOption!]): [OperationOutcomeIssue!]!
  "The base language in which the resource is written."
  language: code
  "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource."
  meta: Meta
  """
  May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.
  
  Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
  """
  modifierExtension(filter: [ExtensionLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [ExtensionSortOption!]): [Extension!]!
  "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety."
  text: Narrative
}

"Type for anonymous field contained in OperationOutcome"
type OperationOutcomeIssue implements BackboneElement & Element {
  "Describes the type of the issue. The system that creates an OperationOutcome SHALL choose the most applicable code from the IssueType value set, and may additional provide its own code for the error in the details element."
  code: code!
  "Additional details about the error. This may be a text description of the error or a system code that identifies the error."
  details: CodeableConcept
  "Additional diagnostic information about the issue."
  diagnostics: String
  "A [simple subset of FHIRPath](fhirpath.html#simple) limited to element names, repetition indicators and the default child accessor that identifies one of the elements in the resource that caused this issue to be raised."
  expression: [String!]!
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension(filter: [ExtensionLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [ExtensionSortOption!]): [Extension!]!
  "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
  id: String
  """
  This element is deprecated because it is XML specific. It is replaced by issue.expression, which is format independent, and simpler to parse. 
  
  For resource issues, this will be a simple XPath limited to element names, repetition indicators and the default child accessor that identifies one of the elements in the resource that caused this issue to be raised.  For HTTP errors, will be "http." + the parameter name.
  """
  location: [String!]!
  """
  May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.
  
  Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
  """
  modifierExtension(filter: [ExtensionLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [ExtensionSortOption!]): [Extension!]!
  "Indicates whether the issue indicates a variation from successful processing."
  severity: code!
}

"Base StructureDefinition for ParameterDefinition Type: The parameters to the module. This collection specifies both the input and output parameters. Input parameters are provided by the caller as part of the $evaluate operation. Output parameters are included in the GuidanceResponse."
type ParameterDefinition implements Element {
  "A brief discussion of what the parameter is for and how it is used by the module."
  documentation: String
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension(filter: [ExtensionLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [ExtensionSortOption!]): [Extension!]!
  "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
  id: String
  "The maximum number of times this element is permitted to appear in the request or response."
  max: String
  "The minimum number of times this parameter SHALL appear in the request or response."
  min: Int
  "The name of the parameter used to allow access to the value of the parameter in evaluation contexts."
  name: code
  "If specified, this indicates a profile that the input data must conform to, or that the output data will conform to."
  profile: canonical
  "The type of the parameter."
  type: code!
  "Whether the parameter is input or output for the module."
  use: code!
}

"This resource is a non-persisted resource used to pass information into and back from an [operation](operations.html). It has no other use, and there is no RESTful endpoint associated with it."
type Parameters implements Resource {
  "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes."
  id: String
  "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc."
  implicitRules: uri
  "The base language in which the resource is written."
  language: code
  "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource."
  meta: Meta
  "A parameter passed to or received from the operation."
  parameter(filter: [ParametersParameterLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [ParametersParameterSortOption!]): [ParametersParameter!]!
}

"Type for anonymous field contained in Parameters"
type ParametersParameter implements BackboneElement & Element {
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension(filter: [ExtensionLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [ExtensionSortOption!]): [Extension!]!
  "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
  id: String
  """
  May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.
  
  Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
  """
  modifierExtension(filter: [ExtensionLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [ExtensionSortOption!]): [Extension!]!
  "The name of the parameter (reference to the operation definition)."
  name: String!
  "A named part of a multi-part parameter."
  part(filter: [ParametersParameterLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [ParametersParameterSortOption!]): [ParametersParameter!]!
  "If the parameter is a whole resource."
  resource: Resource
  "Conveys the content if the parameter is a data type."
  value: ParametersParameterValue
}

"Base StructureDefinition for Period Type: A time period defined by a start and end date and optionally time."
type Period implements Element {
  "The end of the period. If the end of the period is missing, it means no end was known or planned at the time the instance was created. The start may be in the past, and the end date in the future, which means that period is expected/planned to end at that time."
  end: dateTime
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension(filter: [ExtensionLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [ExtensionSortOption!]): [Extension!]!
  "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
  id: String
  "The start of the period. The boundary is inclusive."
  start: dateTime
}

"Base StructureDefinition for Quantity Type: A measured amount (or an amount that can potentially be measured). Note that measured amounts include amounts that are not precisely quantified, including amounts involving arbitrary units and floating currencies."
type Quantity implements Element {
  "A computer processable form of the unit in some unit representation system."
  code: code
  "How the value should be understood and represented - whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value."
  comparator: code
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension(filter: [ExtensionLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [ExtensionSortOption!]): [Extension!]!
  "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
  id: String
  "The identification of the system that provides the coded form of the unit."
  system: uri
  "A human-readable form of the unit."
  unit: String
  "The value of the measured amount. The value includes an implicit precision in the presentation of the value."
  value: Float
}

type Query {
  findAggregateDefinitionList(filter: [AggregateDefinitionLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [AggregateDefinitionSortOption!]): [AggregateDefinition!]!
  findDomainResourceList(filter: [DomainResourceLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [DomainResourceSortOption!]): [DomainResource!]!
  findEventMessageDefinitionList(filter: [EventMessageDefinitionLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [EventMessageDefinitionSortOption!]): [EventMessageDefinition!]!
  findOperationDefinitionList(filter: [OperationDefinitionLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [OperationDefinitionSortOption!]): [OperationDefinition!]!
  findOperationOutcomeList(filter: [OperationOutcomeLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [OperationOutcomeSortOption!]): [OperationOutcome!]!
  findParametersList(filter: [ParametersLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [ParametersSortOption!]): [Parameters!]!
  findResourceList(filter: [ResourceLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [ResourceSortOption!]): [Resource!]!
  findStructureDefinitionList(filter: [StructureDefinitionLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [StructureDefinitionSortOption!]): [StructureDefinition!]!
  findValueSetList(filter: [ValueSetLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [ValueSetSortOption!]): [ValueSet!]!
  getAggregateDefinition(id: String!): AggregateDefinition!
  getDomainResource(id: String!): DomainResource!
  getEventMessageDefinition(id: String!): EventMessageDefinition!
  getOperationDefinition(id: String!): OperationDefinition!
  getOperationOutcome(id: String!): OperationOutcome!
  getParameters(id: String!): Parameters!
  getResource(id: String!): Resource!
  getStructureDefinition(id: String!): StructureDefinition!
  getValueSet(id: String!): ValueSet!
}

"Base StructureDefinition for Range Type: A set of ordered Quantities defined by a low and high limit."
type Range implements Element {
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension(filter: [ExtensionLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [ExtensionSortOption!]): [Extension!]!
  "The high limit. The boundary is inclusive."
  high: Quantity
  "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
  id: String
  "The low limit. The boundary is inclusive."
  low: Quantity
}

"Base StructureDefinition for Reference Type: A reference from one resource to another."
type Reference implements Element {
  "Plain text narrative that identifies the resource in addition to the resource reference."
  display: String
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension(filter: [ExtensionLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [ExtensionSortOption!]): [Extension!]!
  "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
  id: String
  "An identifier for the target resource. This is used when there is no way to reference the other resource directly, either because the entity it represents is not available through a FHIR server, or because there is no way for the author of the resource to convert a known identifier to an actual location. There is no requirement that a Reference.identifier point to something that is actually exposed as a FHIR instance, but it SHALL point to a business concept that would be expected to be exposed as a FHIR instance, and that instance would need to be of a FHIR resource type allowed by the reference."
  identifier: Identifier
  "A reference to a location at which the other resource is found. The reference may be a relative reference, in which case it is relative to the service base URL, or an absolute URL that resolves to the location where the resource is found. The reference may be version specific or not. If the reference is not to a FHIR RESTful server, then it should be assumed to be version specific. Internal fragment references (start with '#') refer to contained resources."
  reference: String
  """
  The expected type of the target of the reference. If both Reference.type and Reference.reference are populated and Reference.reference is a FHIR URL, both SHALL be consistent.
  
  The type is the Canonical URL of Resource Definition that is the type this reference refers to. References are URLs that are relative to http://hl7.org/fhir/StructureDefinition/ e.g. "Patient" is a reference to http://hl7.org/fhir/StructureDefinition/Patient. Absolute URLs are only allowed for logical models (and can only be used in references in logical models, not resources).
  """
  type: uri
}

"A fixed quantity (no comparator)"
type SimpleQuantity implements Element {
  "A computer processable form of the unit in some unit representation system."
  code: code
  "Not allowed to be used in this context"
  comparator(pagination: OffsetPaginationOption): AnyNode
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension(filter: [ExtensionLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [ExtensionSortOption!]): [Extension!]!
  "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
  id: String
  "The identification of the system that provides the coded form of the unit."
  system: uri
  "A human-readable form of the unit."
  unit: String
  "The value of the measured amount. The value includes an implicit precision in the presentation of the value."
  value: Float
}

"A definition of a FHIR structure. This resource is used to describe the underlying resources, data types defined in FHIR, and also for describing extensions and constraints on resources and data types."
type StructureDefinition implements DomainResource & Resource {
  "Whether structure this definition describes is abstract or not  - that is, whether the structure is not intended to be instantiated. For Resources and Data types, abstract types will never be exchanged  between systems."
  abstract: Boolean!
  "An absolute URI that is the base structure from which this type is derived, either by specialization or constraint."
  baseDefinition: canonical
  "A Reference to StructureDefinition that is the base structure from which this type is derived, either by specialization or constraint."
  baseDefinitionReference: StructureDefinition
  "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."
  contained(filter: [ResourceLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [ResourceSortOption!]): [Resource!]!
  "Identifies the types of resource or data type elements to which the extension can be applied."
  context(filter: [StructureDefinitionContextLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [StructureDefinitionContextSortOption!]): [StructureDefinitionContext!]!
  "A set of rules as FHIRPath Invariants about when the extension can be used (e.g. co-occurrence variants for the extension). All the rules must be true."
  contextInvariant: [String!]!
  "A copyright statement relating to the structure definition and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the structure definition."
  copyright: markdown
  "The date  (and optionally time) when the structure definition was published. The date must change when the business version changes and it must change if the status code changes. In addition, it should change when the substantive content of the structure definition changes."
  date: dateTime
  "How the type relates to the baseDefinition."
  derivation: code
  "A free text natural language description of the structure definition from a consumer's perspective."
  description: markdown
  "A differential view is expressed relative to the base StructureDefinition - a statement of differences that it applies."
  differential: StructureDefinitionDifferential
  "A Boolean value to indicate that this structure definition is authored for testing purposes (or education/evaluation/marketing) and is not intended to be used for genuine usage."
  experimental: Boolean
  "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension(filter: [ExtensionLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [ExtensionSortOption!]): [Extension!]!
  "The version of the FHIR specification on which this StructureDefinition is based - this is the formal version of the specification, without the revision number, e.g. [publication].[major].[minor], which is 4.3.0 for this version."
  fhirVersion: code
  "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes."
  id: String
  "A formal identifier that is used to identify this structure definition when it is represented in other formats, or referenced in a specification, model, design or an instance."
  identifier(filter: [IdentifierLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [IdentifierSortOption!]): [Identifier!]!
  "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc."
  implicitRules: uri
  "A legal or geographic region in which the structure definition is intended to be used."
  jurisdiction(filter: [CodeableConceptLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [CodeableConceptSortOption!]): [CodeableConcept!]!
  "A set of key words or terms from external terminologies that may be used to assist with indexing and searching of templates nby describing the use of this structure definition, or the content it describes."
  keyword(filter: [CodingLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [CodingSortOption!]): [Coding!]!
  "Defines the kind of structure that this definition is describing."
  kind: code!
  "The base language in which the resource is written."
  language: code
  "An external specification that the content is mapped to."
  mapping(filter: [StructureDefinitionMappingLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [StructureDefinitionMappingSortOption!]): [StructureDefinitionMapping!]!
  "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource."
  meta: Meta
  """
  May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.
  
  Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
  """
  modifierExtension(filter: [ExtensionLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [ExtensionSortOption!]): [Extension!]!
  "A natural language name identifying the structure definition. This name should be usable as an identifier for the module by machine processing applications such as code generation."
  name: String!
  "The name of the organization or individual that published the structure definition."
  publisher: String
  "Explanation of why this structure definition is needed and why it has been designed as it has."
  purpose: markdown
  "A snapshot view is expressed in a standalone form that can be used and interpreted without considering the base StructureDefinition."
  snapshot: StructureDefinitionSnapshot
  "The status of this structure definition. Enables tracking the life-cycle of the content."
  status: code!
  "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety."
  text: Narrative
  "A short, descriptive, user-friendly title for the structure definition."
  title: String
  "The type this structure describes. If the derivation kind is 'specialization' then this is the master definition for a type, and there is always one of these (a data type, an extension, a resource, including abstract ones). Otherwise the structure definition is a constraint on the stated type (and in this case, the type cannot be an abstract type).  References are URLs that are relative to http://hl7.org/fhir/StructureDefinition e.g. \"string\" is a reference to http://hl7.org/fhir/StructureDefinition/string. Absolute URLs are only allowed in logical models."
  type: uri!
  "An absolute URI that is used to identify this structure definition when it is referenced in a specification, model, design or an instance; also called its canonical identifier. This SHOULD be globally unique and SHOULD be a literal address at which at which an authoritative instance of this structure definition is (or will be) published. This URL can be the target of a canonical reference. It SHALL remain the same when the structure definition is stored on different servers."
  url: uri!
  "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate structure definition instances."
  useContext(filter: [UsageContextLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [UsageContextSortOption!]): [UsageContext!]!
  "The identifier that is used to identify this version of the structure definition when it is referenced in a specification, model, design or instance. This is an arbitrary value managed by the structure definition author and is not expected to be globally unique. For example, it might be a timestamp (e.g. yyyymmdd) if a managed version is not available. There is also no expectation that versions can be placed in a lexicographical sequence."
  version: String
}

"Type for anonymous field contained in StructureDefinition"
type StructureDefinitionContext implements BackboneElement & Element {
  "An expression that defines where an extension can be used in resources."
  expression: String!
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension(filter: [ExtensionLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [ExtensionSortOption!]): [Extension!]!
  "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
  id: String
  """
  May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.
  
  Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
  """
  modifierExtension(filter: [ExtensionLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [ExtensionSortOption!]): [Extension!]!
  "Defines how to interpret the expression that defines what the context of the extension is."
  type: code!
}

"Type for anonymous field contained in StructureDefinition"
type StructureDefinitionDifferential implements BackboneElement & Element {
  "Captures constraints on each element within the resource."
  element(filter: [ElementDefinitionLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [ElementDefinitionSortOption!]): [ElementDefinition!]!
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension(filter: [ExtensionLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [ExtensionSortOption!]): [Extension!]!
  "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
  id: String
  """
  May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.
  
  Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
  """
  modifierExtension(filter: [ExtensionLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [ExtensionSortOption!]): [Extension!]!
  "The id of the parent StructureDefinition of this Differential."
  parent: String!
}

"Type for anonymous field contained in StructureDefinition"
type StructureDefinitionMapping implements BackboneElement & Element {
  "Comments about this mapping, including version notes, issues, scope limitations, and other important notes for usage."
  comment: String
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension(filter: [ExtensionLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [ExtensionSortOption!]): [Extension!]!
  "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
  id: String
  "An Internal id that is used to identify this mapping set when specific mappings are made."
  identity: ID!
  """
  May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.
  
  Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
  """
  modifierExtension(filter: [ExtensionLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [ExtensionSortOption!]): [Extension!]!
  "A name for the specification that is being mapped to."
  name: String
  "An absolute URI that identifies the specification that this mapping is expressed to."
  uri: uri
}

"Type for anonymous field contained in StructureDefinition"
type StructureDefinitionSnapshot implements BackboneElement & Element {
  "Captures constraints on each element within the resource."
  element(filter: [ElementDefinitionLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [ElementDefinitionSortOption!]): [ElementDefinition!]!
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension(filter: [ExtensionLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [ExtensionSortOption!]): [Extension!]!
  "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
  id: String
  """
  May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.
  
  Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
  """
  modifierExtension(filter: [ExtensionLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [ExtensionSortOption!]): [Extension!]!
}

"Base StructureDefinition for Timing Type: Specifies an event that may occur multiple times. Timing schedules are used to record when things are planned, expected or requested to occur. The most common usage is in dosage instructions for medications. They are also used when planning care of various kinds, and may be used for reporting the schedule to which past regular activities were carried out."
type Timing implements BackboneElement & Element {
  "A code for the timing schedule (or just text in code.text). Some codes such as BID are ubiquitous, but many institutions define their own additional codes. If a code is provided, the code is understood to be a complete statement of whatever is specified in the structured timing data, and either the code or the data may be used to interpret the Timing, with the exception that .repeat.bounds still applies over the code (and is not contained in the code)."
  code: CodeableConcept
  "Identifies specific times when the event occurs."
  event: [dateTime!]!
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension(filter: [ExtensionLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [ExtensionSortOption!]): [Extension!]!
  "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
  id: String
  """
  May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.
  
  Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
  """
  modifierExtension(filter: [ExtensionLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [ExtensionSortOption!]): [Extension!]!
  "A set of rules that describe when the event is scheduled."
  repeat: TimingRepeat
}

"Type for anonymous field contained in Timing"
type TimingRepeat implements Element {
  "Either a duration for the length of the timing schedule, a range of possible length, or outer bounds for start and/or end limits of the timing schedule."
  bounds: TimingRepeatBounds
  "A total count of the desired number of repetitions across the duration of the entire timing specification. If countMax is present, this element indicates the lower bound of the allowed range of count values."
  count: positiveInt
  "If present, indicates that the count is a range - so to perform the action between [count] and [countMax] times."
  countMax: positiveInt
  "If one or more days of week is provided, then the action happens only on the specified day(s)."
  dayOfWeek: [code!]!
  "How long this thing happens for when it happens. If durationMax is present, this element indicates the lower bound of the allowed range of the duration."
  duration: Float
  "If present, indicates that the duration is a range - so to perform the action between [duration] and [durationMax] time length."
  durationMax: Float
  "The units of time for the duration, in UCUM units."
  durationUnit: code
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension(filter: [ExtensionLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [ExtensionSortOption!]): [Extension!]!
  "The number of times to repeat the action within the specified period. If frequencyMax is present, this element indicates the lower bound of the allowed range of the frequency."
  frequency: positiveInt
  "If present, indicates that the frequency is a range - so to repeat between [frequency] and [frequencyMax] times within the period or period range."
  frequencyMax: positiveInt
  "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
  id: String
  "The number of minutes from the event. If the event code does not indicate whether the minutes is before or after the event, then the offset is assumed to be after the event."
  offset: unsignedInt
  "Indicates the duration of time over which repetitions are to occur; e.g. to express \"3 times per day\", 3 would be the frequency and \"1 day\" would be the period. If periodMax is present, this element indicates the lower bound of the allowed range of the period length."
  period: Float
  "If present, indicates that the period is a range from [period] to [periodMax], allowing expressing concepts such as \"do this once every 3-5 days."
  periodMax: Float
  "The units of time for the period in UCUM units."
  periodUnit: code
  "Specified time of day for action to take place."
  timeOfDay: [time!]!
  "An approximate time period during the day, potentially linked to an event of daily living that indicates when the action should occur."
  when: [code!]!
}

"Base StructureDefinition for TriggerDefinition Type: A description of a triggering event. Triggering events can be named events, data events, or periodic, as determined by the type element."
type TriggerDefinition implements Element {
  "A boolean-valued expression that is evaluated in the context of the container of the trigger definition and returns whether or not the trigger fires."
  condition: Expression
  "The triggering data of the event (if this is a data trigger). If more than one data is requirement is specified, then all the data requirements must be true."
  data(filter: [DataRequirementLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [DataRequirementSortOption!]): [DataRequirement!]!
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension(filter: [ExtensionLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [ExtensionSortOption!]): [Extension!]!
  "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
  id: String
  "A formal name for the event. This may be an absolute URI that identifies the event formally (e.g. from a trigger registry), or a simple relative URI that identifies the event in a local context."
  name: String
  "The timing of the event (if this is a periodic trigger)."
  timing: TriggerDefinitionTiming
  "The type of triggering event."
  type: code!
}

"Base StructureDefinition for UsageContext Type: Specifies clinical/business/etc. metadata that can be used to retrieve, index and/or categorize an artifact. This metadata can either be specific to the applicable population (e.g., age category, DRG) or the specific context of care (e.g., venue, care setting, provider of care)."
type UsageContext implements Element {
  "A code that identifies the type of context being specified by this usage context."
  code: Coding!
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension(filter: [ExtensionLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [ExtensionSortOption!]): [Extension!]!
  "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
  id: String
  "A value that defines the context specified in this context of use. The interpretation of the value is defined by the code."
  value: UsageContextValue!
}

"A ValueSet resource instance specifies a set of codes drawn from one or more code systems, intended for use in a particular context. Value sets link between [[[CodeSystem]]] definitions and their use in [coded elements](terminologies.html)."
type ValueSet implements DomainResource & Resource {
  "A set of criteria that define the contents of the value set by including or excluding codes selected from the specified code system(s) that the value set draws from. This is also known as the Content Logical Definition (CLD)."
  compose: ValueSetCompose
  "Contact details to assist a user in finding and communicating with the publisher."
  contact(filter: [ContactDetailLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [ContactDetailSortOption!]): [ContactDetail!]!
  "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."
  contained(filter: [ResourceLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [ResourceSortOption!]): [Resource!]!
  "A copyright statement relating to the value set and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the value set."
  copyright: markdown
  "The date (and optionally time) when the value set was created or revised (e.g. the 'content logical definition')."
  date: dateTime
  "A free text natural language description of the value set from a consumer's perspective. The textual description specifies the span of meanings for concepts to be included within the Value Set Expansion, and also may specify the intended use and limitations of the Value Set."
  description: markdown
  "A value set can also be \"expanded\", where the value set is turned into a simple collection of enumerated codes. This element holds the expansion, if it has been performed."
  expansion: ValueSetExpansion
  "A Boolean value to indicate that this value set is authored for testing purposes (or education/evaluation/marketing) and is not intended to be used for genuine usage."
  experimental: Boolean
  "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension(filter: [ExtensionLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [ExtensionSortOption!]): [Extension!]!
  "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes."
  id: String
  "A formal identifier that is used to identify this value set when it is represented in other formats, or referenced in a specification, model, design or an instance."
  identifier(filter: [IdentifierLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [IdentifierSortOption!]): [Identifier!]!
  "If this is set to 'true', then no new versions of the content logical definition can be created.  Note: Other metadata might still change."
  immutable: Boolean
  "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc."
  implicitRules: uri
  "A legal or geographic region in which the value set is intended to be used."
  jurisdiction(filter: [CodeableConceptLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [CodeableConceptSortOption!]): [CodeableConcept!]!
  "The base language in which the resource is written."
  language: code
  "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource."
  meta: Meta
  """
  May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.
  
  Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
  """
  modifierExtension(filter: [ExtensionLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [ExtensionSortOption!]): [Extension!]!
  "A natural language name identifying the value set. This name should be usable as an identifier for the module by machine processing applications such as code generation."
  name: String
  "The name of the organization or individual that published the value set."
  publisher: String
  "Explanation of why this value set is needed and why it has been designed as it has."
  purpose: markdown
  "The status of this value set. Enables tracking the life-cycle of the content. The status of the value set applies to the value set definition (ValueSet.compose) and the associated ValueSet metadata. Expansions do not have a state."
  status: code!
  "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety."
  text: Narrative
  "A short, descriptive, user-friendly title for the value set."
  title: String
  "An absolute URI that is used to identify this value set when it is referenced in a specification, model, design or an instance; also called its canonical identifier. This SHOULD be globally unique and SHOULD be a literal address at which at which an authoritative instance of this value set is (or will be) published. This URL can be the target of a canonical reference. It SHALL remain the same when the value set is stored on different servers."
  url: uri
  "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate value set instances."
  useContext(filter: [UsageContextLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [UsageContextSortOption!]): [UsageContext!]!
  "The identifier that is used to identify this version of the value set when it is referenced in a specification, model, design or instance. This is an arbitrary value managed by the value set author and is not expected to be globally unique. For example, it might be a timestamp (e.g. yyyymmdd) if a managed version is not available. There is also no expectation that versions can be placed in a lexicographical sequence."
  version: String
}

"Type for anonymous field contained in ValueSet"
type ValueSetCompose implements BackboneElement & Element {
  "Exclude one or more codes from the value set based on code system filters and/or other value sets."
  exclude(filter: [ValueSetComposeIncludeLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [ValueSetComposeIncludeSortOption!]): [ValueSetComposeInclude!]!
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension(filter: [ExtensionLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [ExtensionSortOption!]): [Extension!]!
  "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
  id: String
  "Whether inactive codes - codes that are not approved for current use - are in the value set. If inactive = true, inactive codes are to be included in the expansion, if inactive = false, the inactive codes will not be included in the expansion. If absent, the behavior is determined by the implementation, or by the applicable $expand parameters (but generally, inactive codes would be expected to be included)."
  inactive: Boolean
  "Include one or more codes from a code system or other value set(s)."
  include(filter: [ValueSetComposeIncludeLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [ValueSetComposeIncludeSortOption!]): [ValueSetComposeInclude!]!
  "The Locked Date is  the effective date that is used to determine the version of all referenced Code Systems and Value Set Definitions included in the compose that are not already tied to a specific version."
  lockedDate: date
  """
  May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.
  
  Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
  """
  modifierExtension(filter: [ExtensionLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [ExtensionSortOption!]): [Extension!]!
}

"Type for anonymous field contained in ValueSet"
type ValueSetComposeInclude implements BackboneElement & Element {
  "Specifies a concept to be included or excluded."
  concept(filter: [ValueSetComposeIncludeConceptLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [ValueSetComposeIncludeConceptSortOption!]): [ValueSetComposeIncludeConcept!]!
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension(filter: [ExtensionLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [ExtensionSortOption!]): [Extension!]!
  "Select concepts by specify a matching criterion based on the properties (including relationships) defined by the system, or on filters defined by the system. If multiple filters are specified, they SHALL all be true."
  filter(filter: [ValueSetComposeIncludeFilterLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [ValueSetComposeIncludeFilterSortOption!]): [ValueSetComposeIncludeFilter!]!
  "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
  id: String
  """
  May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.
  
  Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
  """
  modifierExtension(filter: [ExtensionLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [ExtensionSortOption!]): [Extension!]!
  "An absolute URI which is the code system from which the selected codes come from."
  system: uri
  "Selects the concepts found in this value set (based on its value set definition). This is an absolute URI that is a reference to ValueSet.url.  If multiple value sets are specified this includes the union of the contents of all of the referenced value sets."
  valueSet: [canonical!]!
  "The version of the code system that the codes are selected from, or the special version '*' for all versions."
  version: String
}

"Type for anonymous field contained in ValueSet"
type ValueSetComposeIncludeConcept implements BackboneElement & Element {
  "Specifies a code for the concept to be included or excluded."
  code: code!
  "Additional representations for this concept when used in this value set - other languages, aliases, specialized purposes, used for particular purposes, etc."
  designation(filter: [ValueSetComposeIncludeConceptDesignationLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [ValueSetComposeIncludeConceptDesignationSortOption!]): [ValueSetComposeIncludeConceptDesignation!]!
  "The text to display to the user for this concept in the context of this valueset. If no display is provided, then applications using the value set use the display specified for the code by the system."
  display: String
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension(filter: [ExtensionLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [ExtensionSortOption!]): [Extension!]!
  "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
  id: String
  """
  May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.
  
  Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
  """
  modifierExtension(filter: [ExtensionLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [ExtensionSortOption!]): [Extension!]!
}

"Type for anonymous field contained in ValueSet"
type ValueSetComposeIncludeConceptDesignation implements BackboneElement & Element {
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension(filter: [ExtensionLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [ExtensionSortOption!]): [Extension!]!
  "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
  id: String
  "The language this designation is defined for."
  language: code
  """
  May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.
  
  Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
  """
  modifierExtension(filter: [ExtensionLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [ExtensionSortOption!]): [Extension!]!
  "A code that represents types of uses of designations."
  use: Coding
  "The text value for this designation."
  value: String!
}

"Type for anonymous field contained in ValueSet"
type ValueSetComposeIncludeFilter implements BackboneElement & Element {
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension(filter: [ExtensionLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [ExtensionSortOption!]): [Extension!]!
  "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
  id: String
  """
  May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.
  
  Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
  """
  modifierExtension(filter: [ExtensionLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [ExtensionSortOption!]): [Extension!]!
  "The kind of operation to perform as a part of the filter criteria."
  op: code!
  "A code that identifies a property or a filter defined in the code system."
  property: code!
  "The match value may be either a code defined by the system, or a string value, which is a regex match on the literal string of the property value  (if the filter represents a property defined in CodeSystem) or of the system filter value (if the filter represents a filter defined in CodeSystem) when the operation is 'regex', or one of the values (true and false), when the operation is 'exists'."
  value: String!
}

"Type for anonymous field contained in ValueSet"
type ValueSetExpansion implements BackboneElement & Element {
  "The codes that are contained in the value set expansion."
  contains(filter: [ValueSetExpansionContainsLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [ValueSetExpansionContainsSortOption!]): [ValueSetExpansionContains!]!
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension(filter: [ExtensionLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [ExtensionSortOption!]): [Extension!]!
  "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
  id: String
  "An identifier that uniquely identifies this expansion of the valueset, based on a unique combination of the provided parameters, the system default parameters, and the underlying system code system versions etc. Systems may re-use the same identifier as long as those factors remain the same, and the expansion is the same, but are not required to do so. This is a business identifier."
  identifier: uri
  """
  May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.
  
  Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
  """
  modifierExtension(filter: [ExtensionLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [ExtensionSortOption!]): [Extension!]!
  "If paging is being used, the offset at which this resource starts.  I.e. this resource is a partial view into the expansion. If paging is not being used, this element SHALL NOT be present."
  offset: Int
  "A parameter that controlled the expansion process. These parameters may be used by users of expanded value sets to check whether the expansion is suitable for a particular purpose, or to pick the correct expansion."
  parameter(filter: [ValueSetExpansionParameterLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [ValueSetExpansionParameterSortOption!]): [ValueSetExpansionParameter!]!
  "The time at which the expansion was produced by the expanding system."
  timestamp: dateTime!
  "The total number of concepts in the expansion. If the number of concept nodes in this resource is less than the stated number, then the server can return more using the offset parameter."
  total: Int
}

"Type for anonymous field contained in ValueSet"
type ValueSetExpansionContains implements BackboneElement & Element {
  "If true, this entry is included in the expansion for navigational purposes, and the user cannot select the code directly as a proper value."
  abstract: Boolean
  "The code for this item in the expansion hierarchy. If this code is missing the entry in the hierarchy is a place holder (abstract) and does not represent a valid code in the value set."
  code: code
  "Other codes and entries contained under this entry in the hierarchy."
  contains(filter: [ValueSetExpansionContainsLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [ValueSetExpansionContainsSortOption!]): [ValueSetExpansionContains!]!
  "Additional representations for this item - other languages, aliases, specialized purposes, used for particular purposes, etc. These are relevant when the conditions of the expansion do not fix to a single correct representation."
  designation(filter: [ValueSetComposeIncludeConceptDesignationLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [ValueSetComposeIncludeConceptDesignationSortOption!]): [ValueSetComposeIncludeConceptDesignation!]!
  "The recommended display for this item in the expansion."
  display: String
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension(filter: [ExtensionLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [ExtensionSortOption!]): [Extension!]!
  "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
  id: String
  "If the concept is inactive in the code system that defines it. Inactive codes are those that are no longer to be used, but are maintained by the code system for understanding legacy data. It might not be known or specified whether an concept is inactive (and it may depend on the context of use)."
  inactive: Boolean
  """
  May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.
  
  Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
  """
  modifierExtension(filter: [ExtensionLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [ExtensionSortOption!]): [Extension!]!
  "An absolute URI which is the code system in which the code for this item in the expansion is defined."
  system: uri
  "The version of the code system from this code was taken. Note that a well-maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
  version: String
}

"Type for anonymous field contained in ValueSet"
type ValueSetExpansionParameter implements BackboneElement & Element {
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension(filter: [ExtensionLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [ExtensionSortOption!]): [Extension!]!
  "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
  id: String
  """
  May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.
  
  Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
  """
  modifierExtension(filter: [ExtensionLogicalFilterOption!], pagination: OffsetPaginationOption, sort: [ExtensionSortOption!]): [Extension!]!
  "Name of the input parameter to the $expand operation; may be a server-assigned name for additional default or other server-supplied parameters used to control the expansion process."
  name: String!
  "The value of the parameter."
  value: ValueSetExpansionParameterValue
}

enum SortDirection {
  ASC
  DESC
}

"Base StructureDefinition for base64Binary Type: A stream of bytes"
scalar base64Binary

"Base StructureDefinition for boolean Type: Value of \"true\" or \"false\""
scalar boolean

"Base StructureDefinition for canonical type: A URI that is a reference to a canonical URL on a FHIR resource"
scalar canonical

"Base StructureDefinition for code type: A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
scalar code

"Base StructureDefinition for date Type: A date or partial date (e.g. just year or year + month). There is no time zone. The format is a union of the schema types gYear, gYearMonth and date.  Dates SHALL be valid dates."
scalar date

"Base StructureDefinition for dateTime Type: A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates."
scalar dateTime

"Base StructureDefinition for decimal Type: A rational number with implicit precision"
scalar decimal

"Base StructureDefinition for id type: Any combination of letters, numerals, \"-\" and \".\", with a length limit of 64 characters.  (This might be an integer, an unprefixed OID, UUID or any other identifier pattern that meets these constraints.)  Ids are case-insensitive."
scalar id

"Base StructureDefinition for instant Type: An instant in time - known at least to the second"
scalar instant

"Base StructureDefinition for integer Type: A whole number"
scalar integer

"Base StructureDefinition for markdown type: A string that may contain Github Flavored Markdown syntax for optional processing by a mark down presentation engine"
scalar markdown

"Base StructureDefinition for oid type: An OID represented as a URI"
scalar oid

"Base StructureDefinition for positiveInt type: An integer with a value that is positive (e.g. >0)"
scalar positiveInt

"Base StructureDefinition for string Type: A sequence of Unicode characters"
scalar string

"Base StructureDefinition for time Type: A time during the day, with no date specified"
scalar time

"Base StructureDefinition for unsignedInt type: An integer with a value that is not negative (e.g. >= 0)"
scalar unsignedInt

"Base StructureDefinition for uri Type: String of characters used to identify a name or a resource"
scalar uri

"Base StructureDefinition for url type: A URI that is a literal reference"
scalar url

"Base StructureDefinition for uuid type: A UUID, represented as a URI"
scalar uuid

"Base StructureDefinition for xhtml Type"
scalar xhtml

"Generated command for adding aggregation(code) on StructureDefinition Aggregate"
input AddAggregationOnStructureDefinitionDifferentialElementTypeCommandPayloadInput {
  aggregation: [code!]!
  typeId: ID!
}

"Generated command for adding aggregation(code) on StructureDefinition Aggregate"
input AddAggregationOnStructureDefinitionSnapshotElementTypeCommandPayloadInput {
  aggregation: [code!]!
  typeId: ID!
}

"Generated command for adding alias(string) on StructureDefinition Aggregate"
input AddAliasOnStructureDefinitionDifferentialElementCommandPayloadInput {
  alias: [String!]!
  elementId: ID!
}

"Generated command for adding alias(string) on StructureDefinition Aggregate"
input AddAliasOnStructureDefinitionSnapshotElementCommandPayloadInput {
  alias: [String!]!
  elementId: ID!
}

"Generated command for adding codeFilter(DataRequirementCodeFilter) on DomainResource Aggregate"
input AddCodeFilterOnDomainResourceExtensionValueCommandPayloadInput {
  codeFilter: [DataRequirementCodeFilterCommandInput!]!
  extensionId: ID!
}

"Generated command for adding codeFilter(DataRequirementCodeFilter) on DomainResource Aggregate"
input AddCodeFilterOnDomainResourceExtensionValueDataCommandPayloadInput {
  codeFilter: [DataRequirementCodeFilterCommandInput!]!
  dataId: ID!
}

"Generated command for adding codeFilter(DataRequirementCodeFilter) on DomainResource Aggregate"
input AddCodeFilterOnDomainResourceModifierExtensionValueCommandPayloadInput {
  codeFilter: [DataRequirementCodeFilterCommandInput!]!
  modifierExtensionId: ID!
}

"Generated command for adding codeFilter(DataRequirementCodeFilter) on DomainResource Aggregate"
input AddCodeFilterOnDomainResourceModifierExtensionValueDataCommandPayloadInput {
  codeFilter: [DataRequirementCodeFilterCommandInput!]!
  dataId: ID!
}

"Generated command for adding codeFilter(DataRequirementCodeFilter) on Parameters Aggregate"
input AddCodeFilterOnParametersParameterValueCommandPayloadInput {
  codeFilter: [DataRequirementCodeFilterCommandInput!]!
  parameterId: ID!
}

"Generated command for adding codeFilter(DataRequirementCodeFilter) on Parameters Aggregate"
input AddCodeFilterOnParametersParameterValueDataCommandPayloadInput {
  codeFilter: [DataRequirementCodeFilterCommandInput!]!
  dataId: ID!
}

"Generated command for adding codeFilter(DataRequirementCodeFilter) on StructureDefinition Aggregate"
input AddCodeFilterOnStructureDefinitionDifferentialElementDefaultValueCommandPayloadInput {
  codeFilter: [DataRequirementCodeFilterCommandInput!]!
  elementId: ID!
}

"Generated command for adding codeFilter(DataRequirementCodeFilter) on StructureDefinition Aggregate"
input AddCodeFilterOnStructureDefinitionDifferentialElementDefaultValueDataCommandPayloadInput {
  codeFilter: [DataRequirementCodeFilterCommandInput!]!
  dataId: ID!
}

"Generated command for adding codeFilter(DataRequirementCodeFilter) on StructureDefinition Aggregate"
input AddCodeFilterOnStructureDefinitionDifferentialElementExampleValueCommandPayloadInput {
  codeFilter: [DataRequirementCodeFilterCommandInput!]!
  exampleId: ID!
}

"Generated command for adding codeFilter(DataRequirementCodeFilter) on StructureDefinition Aggregate"
input AddCodeFilterOnStructureDefinitionDifferentialElementExampleValueDataCommandPayloadInput {
  codeFilter: [DataRequirementCodeFilterCommandInput!]!
  dataId: ID!
}

"Generated command for adding codeFilter(DataRequirementCodeFilter) on StructureDefinition Aggregate"
input AddCodeFilterOnStructureDefinitionDifferentialElementFixedCommandPayloadInput {
  codeFilter: [DataRequirementCodeFilterCommandInput!]!
  elementId: ID!
}

"Generated command for adding codeFilter(DataRequirementCodeFilter) on StructureDefinition Aggregate"
input AddCodeFilterOnStructureDefinitionDifferentialElementFixedDataCommandPayloadInput {
  codeFilter: [DataRequirementCodeFilterCommandInput!]!
  dataId: ID!
}

"Generated command for adding codeFilter(DataRequirementCodeFilter) on StructureDefinition Aggregate"
input AddCodeFilterOnStructureDefinitionDifferentialElementPatternCommandPayloadInput {
  codeFilter: [DataRequirementCodeFilterCommandInput!]!
  elementId: ID!
}

"Generated command for adding codeFilter(DataRequirementCodeFilter) on StructureDefinition Aggregate"
input AddCodeFilterOnStructureDefinitionDifferentialElementPatternDataCommandPayloadInput {
  codeFilter: [DataRequirementCodeFilterCommandInput!]!
  dataId: ID!
}

"Generated command for adding codeFilter(DataRequirementCodeFilter) on StructureDefinition Aggregate"
input AddCodeFilterOnStructureDefinitionSnapshotElementDefaultValueCommandPayloadInput {
  codeFilter: [DataRequirementCodeFilterCommandInput!]!
  elementId: ID!
}

"Generated command for adding codeFilter(DataRequirementCodeFilter) on StructureDefinition Aggregate"
input AddCodeFilterOnStructureDefinitionSnapshotElementDefaultValueDataCommandPayloadInput {
  codeFilter: [DataRequirementCodeFilterCommandInput!]!
  dataId: ID!
}

"Generated command for adding codeFilter(DataRequirementCodeFilter) on StructureDefinition Aggregate"
input AddCodeFilterOnStructureDefinitionSnapshotElementExampleValueCommandPayloadInput {
  codeFilter: [DataRequirementCodeFilterCommandInput!]!
  exampleId: ID!
}

"Generated command for adding codeFilter(DataRequirementCodeFilter) on StructureDefinition Aggregate"
input AddCodeFilterOnStructureDefinitionSnapshotElementExampleValueDataCommandPayloadInput {
  codeFilter: [DataRequirementCodeFilterCommandInput!]!
  dataId: ID!
}

"Generated command for adding codeFilter(DataRequirementCodeFilter) on StructureDefinition Aggregate"
input AddCodeFilterOnStructureDefinitionSnapshotElementFixedCommandPayloadInput {
  codeFilter: [DataRequirementCodeFilterCommandInput!]!
  elementId: ID!
}

"Generated command for adding codeFilter(DataRequirementCodeFilter) on StructureDefinition Aggregate"
input AddCodeFilterOnStructureDefinitionSnapshotElementFixedDataCommandPayloadInput {
  codeFilter: [DataRequirementCodeFilterCommandInput!]!
  dataId: ID!
}

"Generated command for adding codeFilter(DataRequirementCodeFilter) on StructureDefinition Aggregate"
input AddCodeFilterOnStructureDefinitionSnapshotElementPatternCommandPayloadInput {
  codeFilter: [DataRequirementCodeFilterCommandInput!]!
  elementId: ID!
}

"Generated command for adding codeFilter(DataRequirementCodeFilter) on StructureDefinition Aggregate"
input AddCodeFilterOnStructureDefinitionSnapshotElementPatternDataCommandPayloadInput {
  codeFilter: [DataRequirementCodeFilterCommandInput!]!
  dataId: ID!
}

"Generated command for adding code(Coding) on DomainResource Aggregate"
input AddCodeOnDomainResourceExtensionValueCodeFilterCommandPayloadInput {
  code: [CodingCommandInput!]!
  codeFilterId: ID!
}

"Generated command for adding code(Coding) on DomainResource Aggregate"
input AddCodeOnDomainResourceExtensionValueDataCodeFilterCommandPayloadInput {
  code: [CodingCommandInput!]!
  codeFilterId: ID!
}

"Generated command for adding code(Coding) on DomainResource Aggregate"
input AddCodeOnDomainResourceModifierExtensionValueCodeFilterCommandPayloadInput {
  code: [CodingCommandInput!]!
  codeFilterId: ID!
}

"Generated command for adding code(Coding) on DomainResource Aggregate"
input AddCodeOnDomainResourceModifierExtensionValueDataCodeFilterCommandPayloadInput {
  code: [CodingCommandInput!]!
  codeFilterId: ID!
}

"Generated command for adding code(Coding) on Parameters Aggregate"
input AddCodeOnParametersParameterValueCodeFilterCommandPayloadInput {
  code: [CodingCommandInput!]!
  codeFilterId: ID!
}

"Generated command for adding code(Coding) on Parameters Aggregate"
input AddCodeOnParametersParameterValueDataCodeFilterCommandPayloadInput {
  code: [CodingCommandInput!]!
  codeFilterId: ID!
}

"Generated command for adding code(Coding) on StructureDefinition Aggregate"
input AddCodeOnStructureDefinitionDifferentialElementCommandPayloadInput {
  code: [CodingCommandInput!]!
  elementId: ID!
}

"Generated command for adding code(Coding) on StructureDefinition Aggregate"
input AddCodeOnStructureDefinitionDifferentialElementDefaultValueCodeFilterCommandPayloadInput {
  code: [CodingCommandInput!]!
  codeFilterId: ID!
}

"Generated command for adding code(Coding) on StructureDefinition Aggregate"
input AddCodeOnStructureDefinitionDifferentialElementDefaultValueDataCodeFilterCommandPayloadInput {
  code: [CodingCommandInput!]!
  codeFilterId: ID!
}

"Generated command for adding code(Coding) on StructureDefinition Aggregate"
input AddCodeOnStructureDefinitionDifferentialElementExampleValueCodeFilterCommandPayloadInput {
  code: [CodingCommandInput!]!
  codeFilterId: ID!
}

"Generated command for adding code(Coding) on StructureDefinition Aggregate"
input AddCodeOnStructureDefinitionDifferentialElementExampleValueDataCodeFilterCommandPayloadInput {
  code: [CodingCommandInput!]!
  codeFilterId: ID!
}

"Generated command for adding code(Coding) on StructureDefinition Aggregate"
input AddCodeOnStructureDefinitionDifferentialElementFixedCodeFilterCommandPayloadInput {
  code: [CodingCommandInput!]!
  codeFilterId: ID!
}

"Generated command for adding code(Coding) on StructureDefinition Aggregate"
input AddCodeOnStructureDefinitionDifferentialElementFixedDataCodeFilterCommandPayloadInput {
  code: [CodingCommandInput!]!
  codeFilterId: ID!
}

"Generated command for adding code(Coding) on StructureDefinition Aggregate"
input AddCodeOnStructureDefinitionDifferentialElementPatternCodeFilterCommandPayloadInput {
  code: [CodingCommandInput!]!
  codeFilterId: ID!
}

"Generated command for adding code(Coding) on StructureDefinition Aggregate"
input AddCodeOnStructureDefinitionDifferentialElementPatternDataCodeFilterCommandPayloadInput {
  code: [CodingCommandInput!]!
  codeFilterId: ID!
}

"Generated command for adding code(Coding) on StructureDefinition Aggregate"
input AddCodeOnStructureDefinitionSnapshotElementCommandPayloadInput {
  code: [CodingCommandInput!]!
  elementId: ID!
}

"Generated command for adding code(Coding) on StructureDefinition Aggregate"
input AddCodeOnStructureDefinitionSnapshotElementDefaultValueCodeFilterCommandPayloadInput {
  code: [CodingCommandInput!]!
  codeFilterId: ID!
}

"Generated command for adding code(Coding) on StructureDefinition Aggregate"
input AddCodeOnStructureDefinitionSnapshotElementDefaultValueDataCodeFilterCommandPayloadInput {
  code: [CodingCommandInput!]!
  codeFilterId: ID!
}

"Generated command for adding code(Coding) on StructureDefinition Aggregate"
input AddCodeOnStructureDefinitionSnapshotElementExampleValueCodeFilterCommandPayloadInput {
  code: [CodingCommandInput!]!
  codeFilterId: ID!
}

"Generated command for adding code(Coding) on StructureDefinition Aggregate"
input AddCodeOnStructureDefinitionSnapshotElementExampleValueDataCodeFilterCommandPayloadInput {
  code: [CodingCommandInput!]!
  codeFilterId: ID!
}

"Generated command for adding code(Coding) on StructureDefinition Aggregate"
input AddCodeOnStructureDefinitionSnapshotElementFixedCodeFilterCommandPayloadInput {
  code: [CodingCommandInput!]!
  codeFilterId: ID!
}

"Generated command for adding code(Coding) on StructureDefinition Aggregate"
input AddCodeOnStructureDefinitionSnapshotElementFixedDataCodeFilterCommandPayloadInput {
  code: [CodingCommandInput!]!
  codeFilterId: ID!
}

"Generated command for adding code(Coding) on StructureDefinition Aggregate"
input AddCodeOnStructureDefinitionSnapshotElementPatternCodeFilterCommandPayloadInput {
  code: [CodingCommandInput!]!
  codeFilterId: ID!
}

"Generated command for adding code(Coding) on StructureDefinition Aggregate"
input AddCodeOnStructureDefinitionSnapshotElementPatternDataCodeFilterCommandPayloadInput {
  code: [CodingCommandInput!]!
  codeFilterId: ID!
}

"Generated command for adding coding(Coding) on DomainResource Aggregate"
input AddCodingOnDomainResourceExtensionValueCommandPayloadInput {
  coding: [CodingCommandInput!]!
  extensionId: ID!
}

"Generated command for adding coding(Coding) on DomainResource Aggregate"
input AddCodingOnDomainResourceExtensionValueConceptCommandPayloadInput {
  coding: [CodingCommandInput!]!
  extensionId: ID!
}

"Generated command for adding coding(Coding) on DomainResource Aggregate"
input AddCodingOnDomainResourceExtensionValueDataSubjectCommandPayloadInput {
  coding: [CodingCommandInput!]!
  dataId: ID!
}

"Generated command for adding coding(Coding) on DomainResource Aggregate"
input AddCodingOnDomainResourceExtensionValueSubjectCommandPayloadInput {
  coding: [CodingCommandInput!]!
  extensionId: ID!
}

"Generated command for adding coding(Coding) on DomainResource Aggregate"
input AddCodingOnDomainResourceExtensionValueTimingCodeCommandPayloadInput {
  coding: [CodingCommandInput!]!
  extensionId: ID!
}

"Generated command for adding coding(Coding) on DomainResource Aggregate"
input AddCodingOnDomainResourceExtensionValueTypeCommandPayloadInput {
  coding: [CodingCommandInput!]!
  extensionId: ID!
}

"Generated command for adding coding(Coding) on DomainResource Aggregate"
input AddCodingOnDomainResourceModifierExtensionValueCommandPayloadInput {
  coding: [CodingCommandInput!]!
  modifierExtensionId: ID!
}

"Generated command for adding coding(Coding) on DomainResource Aggregate"
input AddCodingOnDomainResourceModifierExtensionValueConceptCommandPayloadInput {
  coding: [CodingCommandInput!]!
  modifierExtensionId: ID!
}

"Generated command for adding coding(Coding) on DomainResource Aggregate"
input AddCodingOnDomainResourceModifierExtensionValueDataSubjectCommandPayloadInput {
  coding: [CodingCommandInput!]!
  dataId: ID!
}

"Generated command for adding coding(Coding) on DomainResource Aggregate"
input AddCodingOnDomainResourceModifierExtensionValueSubjectCommandPayloadInput {
  coding: [CodingCommandInput!]!
  modifierExtensionId: ID!
}

"Generated command for adding coding(Coding) on DomainResource Aggregate"
input AddCodingOnDomainResourceModifierExtensionValueTimingCodeCommandPayloadInput {
  coding: [CodingCommandInput!]!
  modifierExtensionId: ID!
}

"Generated command for adding coding(Coding) on DomainResource Aggregate"
input AddCodingOnDomainResourceModifierExtensionValueTypeCommandPayloadInput {
  coding: [CodingCommandInput!]!
  modifierExtensionId: ID!
}

"Generated command for adding coding(Coding) on OperationDefinition Aggregate"
input AddCodingOnOperationDefinitionJurisdictionCommandPayloadInput {
  coding: [CodingCommandInput!]!
  jurisdictionId: ID!
}

"Generated command for adding coding(Coding) on OperationDefinition Aggregate"
input AddCodingOnOperationDefinitionUseContextValueCommandPayloadInput {
  coding: [CodingCommandInput!]!
  useContextId: ID!
}

"Generated command for adding coding(Coding) on OperationOutcome Aggregate"
input AddCodingOnOperationOutcomeIssueDetailsCommandPayloadInput {
  coding: [CodingCommandInput!]!
  issueId: ID!
}

"Generated command for adding coding(Coding) on Parameters Aggregate"
input AddCodingOnParametersParameterValueCommandPayloadInput {
  coding: [CodingCommandInput!]!
  parameterId: ID!
}

"Generated command for adding coding(Coding) on Parameters Aggregate"
input AddCodingOnParametersParameterValueDataSubjectCommandPayloadInput {
  coding: [CodingCommandInput!]!
  dataId: ID!
}

"Generated command for adding coding(Coding) on Parameters Aggregate"
input AddCodingOnParametersParameterValueSubjectCommandPayloadInput {
  coding: [CodingCommandInput!]!
  parameterId: ID!
}

"Generated command for adding coding(Coding) on Parameters Aggregate"
input AddCodingOnParametersParameterValueTimingCodeCommandPayloadInput {
  coding: [CodingCommandInput!]!
  parameterId: ID!
}

"Generated command for adding coding(Coding) on Parameters Aggregate"
input AddCodingOnParametersParameterValueTypeCommandPayloadInput {
  coding: [CodingCommandInput!]!
  parameterId: ID!
}

"Generated command for adding coding(Coding) on StructureDefinition Aggregate"
input AddCodingOnStructureDefinitionDifferentialElementDefaultValueCommandPayloadInput {
  coding: [CodingCommandInput!]!
  elementId: ID!
}

"Generated command for adding coding(Coding) on StructureDefinition Aggregate"
input AddCodingOnStructureDefinitionDifferentialElementDefaultValueConceptCommandPayloadInput {
  coding: [CodingCommandInput!]!
  elementId: ID!
}

"Generated command for adding coding(Coding) on StructureDefinition Aggregate"
input AddCodingOnStructureDefinitionDifferentialElementDefaultValueDataSubjectCommandPayloadInput {
  coding: [CodingCommandInput!]!
  dataId: ID!
}

"Generated command for adding coding(Coding) on StructureDefinition Aggregate"
input AddCodingOnStructureDefinitionDifferentialElementDefaultValueSubjectCommandPayloadInput {
  coding: [CodingCommandInput!]!
  elementId: ID!
}

"Generated command for adding coding(Coding) on StructureDefinition Aggregate"
input AddCodingOnStructureDefinitionDifferentialElementDefaultValueTimingCodeCommandPayloadInput {
  coding: [CodingCommandInput!]!
  elementId: ID!
}

"Generated command for adding coding(Coding) on StructureDefinition Aggregate"
input AddCodingOnStructureDefinitionDifferentialElementDefaultValueTypeCommandPayloadInput {
  coding: [CodingCommandInput!]!
  elementId: ID!
}

"Generated command for adding coding(Coding) on StructureDefinition Aggregate"
input AddCodingOnStructureDefinitionDifferentialElementExampleValueCommandPayloadInput {
  coding: [CodingCommandInput!]!
  exampleId: ID!
}

"Generated command for adding coding(Coding) on StructureDefinition Aggregate"
input AddCodingOnStructureDefinitionDifferentialElementExampleValueConceptCommandPayloadInput {
  coding: [CodingCommandInput!]!
  exampleId: ID!
}

"Generated command for adding coding(Coding) on StructureDefinition Aggregate"
input AddCodingOnStructureDefinitionDifferentialElementExampleValueDataSubjectCommandPayloadInput {
  coding: [CodingCommandInput!]!
  dataId: ID!
}

"Generated command for adding coding(Coding) on StructureDefinition Aggregate"
input AddCodingOnStructureDefinitionDifferentialElementExampleValueSubjectCommandPayloadInput {
  coding: [CodingCommandInput!]!
  exampleId: ID!
}

"Generated command for adding coding(Coding) on StructureDefinition Aggregate"
input AddCodingOnStructureDefinitionDifferentialElementExampleValueTimingCodeCommandPayloadInput {
  coding: [CodingCommandInput!]!
  exampleId: ID!
}

"Generated command for adding coding(Coding) on StructureDefinition Aggregate"
input AddCodingOnStructureDefinitionDifferentialElementExampleValueTypeCommandPayloadInput {
  coding: [CodingCommandInput!]!
  exampleId: ID!
}

"Generated command for adding coding(Coding) on StructureDefinition Aggregate"
input AddCodingOnStructureDefinitionDifferentialElementFixedCommandPayloadInput {
  coding: [CodingCommandInput!]!
  elementId: ID!
}

"Generated command for adding coding(Coding) on StructureDefinition Aggregate"
input AddCodingOnStructureDefinitionDifferentialElementFixedConceptCommandPayloadInput {
  coding: [CodingCommandInput!]!
  elementId: ID!
}

"Generated command for adding coding(Coding) on StructureDefinition Aggregate"
input AddCodingOnStructureDefinitionDifferentialElementFixedDataSubjectCommandPayloadInput {
  coding: [CodingCommandInput!]!
  dataId: ID!
}

"Generated command for adding coding(Coding) on StructureDefinition Aggregate"
input AddCodingOnStructureDefinitionDifferentialElementFixedSubjectCommandPayloadInput {
  coding: [CodingCommandInput!]!
  elementId: ID!
}

"Generated command for adding coding(Coding) on StructureDefinition Aggregate"
input AddCodingOnStructureDefinitionDifferentialElementFixedTimingCodeCommandPayloadInput {
  coding: [CodingCommandInput!]!
  elementId: ID!
}

"Generated command for adding coding(Coding) on StructureDefinition Aggregate"
input AddCodingOnStructureDefinitionDifferentialElementFixedTypeCommandPayloadInput {
  coding: [CodingCommandInput!]!
  elementId: ID!
}

"Generated command for adding coding(Coding) on StructureDefinition Aggregate"
input AddCodingOnStructureDefinitionDifferentialElementPatternCommandPayloadInput {
  coding: [CodingCommandInput!]!
  elementId: ID!
}

"Generated command for adding coding(Coding) on StructureDefinition Aggregate"
input AddCodingOnStructureDefinitionDifferentialElementPatternConceptCommandPayloadInput {
  coding: [CodingCommandInput!]!
  elementId: ID!
}

"Generated command for adding coding(Coding) on StructureDefinition Aggregate"
input AddCodingOnStructureDefinitionDifferentialElementPatternDataSubjectCommandPayloadInput {
  coding: [CodingCommandInput!]!
  dataId: ID!
}

"Generated command for adding coding(Coding) on StructureDefinition Aggregate"
input AddCodingOnStructureDefinitionDifferentialElementPatternSubjectCommandPayloadInput {
  coding: [CodingCommandInput!]!
  elementId: ID!
}

"Generated command for adding coding(Coding) on StructureDefinition Aggregate"
input AddCodingOnStructureDefinitionDifferentialElementPatternTimingCodeCommandPayloadInput {
  coding: [CodingCommandInput!]!
  elementId: ID!
}

"Generated command for adding coding(Coding) on StructureDefinition Aggregate"
input AddCodingOnStructureDefinitionDifferentialElementPatternTypeCommandPayloadInput {
  coding: [CodingCommandInput!]!
  elementId: ID!
}

"Generated command for adding coding(Coding) on StructureDefinition Aggregate"
input AddCodingOnStructureDefinitionIdentifierTypeCommandPayloadInput {
  coding: [CodingCommandInput!]!
  identifierId: ID!
}

"Generated command for adding coding(Coding) on StructureDefinition Aggregate"
input AddCodingOnStructureDefinitionJurisdictionCommandPayloadInput {
  coding: [CodingCommandInput!]!
  jurisdictionId: ID!
}

"Generated command for adding coding(Coding) on StructureDefinition Aggregate"
input AddCodingOnStructureDefinitionSnapshotElementDefaultValueCommandPayloadInput {
  coding: [CodingCommandInput!]!
  elementId: ID!
}

"Generated command for adding coding(Coding) on StructureDefinition Aggregate"
input AddCodingOnStructureDefinitionSnapshotElementDefaultValueConceptCommandPayloadInput {
  coding: [CodingCommandInput!]!
  elementId: ID!
}

"Generated command for adding coding(Coding) on StructureDefinition Aggregate"
input AddCodingOnStructureDefinitionSnapshotElementDefaultValueDataSubjectCommandPayloadInput {
  coding: [CodingCommandInput!]!
  dataId: ID!
}

"Generated command for adding coding(Coding) on StructureDefinition Aggregate"
input AddCodingOnStructureDefinitionSnapshotElementDefaultValueSubjectCommandPayloadInput {
  coding: [CodingCommandInput!]!
  elementId: ID!
}

"Generated command for adding coding(Coding) on StructureDefinition Aggregate"
input AddCodingOnStructureDefinitionSnapshotElementDefaultValueTimingCodeCommandPayloadInput {
  coding: [CodingCommandInput!]!
  elementId: ID!
}

"Generated command for adding coding(Coding) on StructureDefinition Aggregate"
input AddCodingOnStructureDefinitionSnapshotElementDefaultValueTypeCommandPayloadInput {
  coding: [CodingCommandInput!]!
  elementId: ID!
}

"Generated command for adding coding(Coding) on StructureDefinition Aggregate"
input AddCodingOnStructureDefinitionSnapshotElementExampleValueCommandPayloadInput {
  coding: [CodingCommandInput!]!
  exampleId: ID!
}

"Generated command for adding coding(Coding) on StructureDefinition Aggregate"
input AddCodingOnStructureDefinitionSnapshotElementExampleValueConceptCommandPayloadInput {
  coding: [CodingCommandInput!]!
  exampleId: ID!
}

"Generated command for adding coding(Coding) on StructureDefinition Aggregate"
input AddCodingOnStructureDefinitionSnapshotElementExampleValueDataSubjectCommandPayloadInput {
  coding: [CodingCommandInput!]!
  dataId: ID!
}

"Generated command for adding coding(Coding) on StructureDefinition Aggregate"
input AddCodingOnStructureDefinitionSnapshotElementExampleValueSubjectCommandPayloadInput {
  coding: [CodingCommandInput!]!
  exampleId: ID!
}

"Generated command for adding coding(Coding) on StructureDefinition Aggregate"
input AddCodingOnStructureDefinitionSnapshotElementExampleValueTimingCodeCommandPayloadInput {
  coding: [CodingCommandInput!]!
  exampleId: ID!
}

"Generated command for adding coding(Coding) on StructureDefinition Aggregate"
input AddCodingOnStructureDefinitionSnapshotElementExampleValueTypeCommandPayloadInput {
  coding: [CodingCommandInput!]!
  exampleId: ID!
}

"Generated command for adding coding(Coding) on StructureDefinition Aggregate"
input AddCodingOnStructureDefinitionSnapshotElementFixedCommandPayloadInput {
  coding: [CodingCommandInput!]!
  elementId: ID!
}

"Generated command for adding coding(Coding) on StructureDefinition Aggregate"
input AddCodingOnStructureDefinitionSnapshotElementFixedConceptCommandPayloadInput {
  coding: [CodingCommandInput!]!
  elementId: ID!
}

"Generated command for adding coding(Coding) on StructureDefinition Aggregate"
input AddCodingOnStructureDefinitionSnapshotElementFixedDataSubjectCommandPayloadInput {
  coding: [CodingCommandInput!]!
  dataId: ID!
}

"Generated command for adding coding(Coding) on StructureDefinition Aggregate"
input AddCodingOnStructureDefinitionSnapshotElementFixedSubjectCommandPayloadInput {
  coding: [CodingCommandInput!]!
  elementId: ID!
}

"Generated command for adding coding(Coding) on StructureDefinition Aggregate"
input AddCodingOnStructureDefinitionSnapshotElementFixedTimingCodeCommandPayloadInput {
  coding: [CodingCommandInput!]!
  elementId: ID!
}

"Generated command for adding coding(Coding) on StructureDefinition Aggregate"
input AddCodingOnStructureDefinitionSnapshotElementFixedTypeCommandPayloadInput {
  coding: [CodingCommandInput!]!
  elementId: ID!
}

"Generated command for adding coding(Coding) on StructureDefinition Aggregate"
input AddCodingOnStructureDefinitionSnapshotElementPatternCommandPayloadInput {
  coding: [CodingCommandInput!]!
  elementId: ID!
}

"Generated command for adding coding(Coding) on StructureDefinition Aggregate"
input AddCodingOnStructureDefinitionSnapshotElementPatternConceptCommandPayloadInput {
  coding: [CodingCommandInput!]!
  elementId: ID!
}

"Generated command for adding coding(Coding) on StructureDefinition Aggregate"
input AddCodingOnStructureDefinitionSnapshotElementPatternDataSubjectCommandPayloadInput {
  coding: [CodingCommandInput!]!
  dataId: ID!
}

"Generated command for adding coding(Coding) on StructureDefinition Aggregate"
input AddCodingOnStructureDefinitionSnapshotElementPatternSubjectCommandPayloadInput {
  coding: [CodingCommandInput!]!
  elementId: ID!
}

"Generated command for adding coding(Coding) on StructureDefinition Aggregate"
input AddCodingOnStructureDefinitionSnapshotElementPatternTimingCodeCommandPayloadInput {
  coding: [CodingCommandInput!]!
  elementId: ID!
}

"Generated command for adding coding(Coding) on StructureDefinition Aggregate"
input AddCodingOnStructureDefinitionSnapshotElementPatternTypeCommandPayloadInput {
  coding: [CodingCommandInput!]!
  elementId: ID!
}

"Generated command for adding coding(Coding) on StructureDefinition Aggregate"
input AddCodingOnStructureDefinitionUseContextValueCommandPayloadInput {
  coding: [CodingCommandInput!]!
  useContextId: ID!
}

"Generated command for adding coding(Coding) on ValueSet Aggregate"
input AddCodingOnValueSetIdentifierTypeCommandPayloadInput {
  coding: [CodingCommandInput!]!
  identifierId: ID!
}

"Generated command for adding coding(Coding) on ValueSet Aggregate"
input AddCodingOnValueSetJurisdictionCommandPayloadInput {
  coding: [CodingCommandInput!]!
  jurisdictionId: ID!
}

"Generated command for adding coding(Coding) on ValueSet Aggregate"
input AddCodingOnValueSetUseContextValueCommandPayloadInput {
  coding: [CodingCommandInput!]!
  useContextId: ID!
}

"Generated command for adding command(CommandHandlerDefinition) on AggregateDefinition Aggregate"
input AddCommandOnAggregateDefinitionCommandPayloadInput {
  command: [CommandHandlerDefinitionCommandInput!]!
}

"Generated command for adding concept(ValueSetComposeIncludeConcept) on ValueSet Aggregate"
input AddConceptOnValueSetComposeIncludeCommandPayloadInput {
  concept: [ValueSetComposeIncludeConceptCommandInput!]!
  includeId: ID!
}

"Generated command for adding condition(id) on StructureDefinition Aggregate"
input AddConditionOnStructureDefinitionDifferentialElementCommandPayloadInput {
  condition: [ID!]!
  elementId: ID!
}

"Generated command for adding condition(id) on StructureDefinition Aggregate"
input AddConditionOnStructureDefinitionSnapshotElementCommandPayloadInput {
  condition: [ID!]!
  elementId: ID!
}

"Generated command for adding constraint(ElementDefinitionConstraint) on StructureDefinition Aggregate"
input AddConstraintOnStructureDefinitionDifferentialElementCommandPayloadInput {
  constraint: [ElementDefinitionConstraintCommandInput!]!
  elementId: ID!
}

"Generated command for adding constraint(ElementDefinitionConstraint) on StructureDefinition Aggregate"
input AddConstraintOnStructureDefinitionSnapshotElementCommandPayloadInput {
  constraint: [ElementDefinitionConstraintCommandInput!]!
  elementId: ID!
}

"Generated command for adding contact(string) on OperationDefinition Aggregate"
input AddContactOnOperationDefinitionCommandPayloadInput {
  contact: [String!]!
}

"Generated command for adding contact(ContactDetail) on ValueSet Aggregate"
input AddContactOnValueSetCommandPayloadInput {
  contact: [ContactDetailCommandInput!]!
}

"Generated command for adding contained(Resource) on DomainResource Aggregate"
input AddContainedOnDomainResourceCommandPayloadInput {
  contained: [ID!]!
}

"Generated command for adding contains(ValueSetExpansionContains) on ValueSet Aggregate"
input AddContainsOnValueSetExpansionCommandPayloadInput {
  contains: [ValueSetExpansionContainsCommandInput!]!
}

"Generated command for adding contextInvariant(string) on StructureDefinition Aggregate"
input AddContextInvariantOnStructureDefinitionCommandPayloadInput {
  contextInvariant: [String!]!
}

"Generated command for adding context(StructureDefinitionContext) on StructureDefinition Aggregate"
input AddContextOnStructureDefinitionCommandPayloadInput {
  context: [StructureDefinitionContextCommandInput!]!
}

"Generated command for adding data(DataRequirement) on DomainResource Aggregate"
input AddDataOnDomainResourceExtensionValueCommandPayloadInput {
  data: [DataRequirementCommandInput!]!
  extensionId: ID!
}

"Generated command for adding data(DataRequirement) on DomainResource Aggregate"
input AddDataOnDomainResourceModifierExtensionValueCommandPayloadInput {
  data: [DataRequirementCommandInput!]!
  modifierExtensionId: ID!
}

"Generated command for adding data(DataRequirement) on Parameters Aggregate"
input AddDataOnParametersParameterValueCommandPayloadInput {
  data: [DataRequirementCommandInput!]!
  parameterId: ID!
}

"Generated command for adding data(DataRequirement) on StructureDefinition Aggregate"
input AddDataOnStructureDefinitionDifferentialElementDefaultValueCommandPayloadInput {
  data: [DataRequirementCommandInput!]!
  elementId: ID!
}

"Generated command for adding data(DataRequirement) on StructureDefinition Aggregate"
input AddDataOnStructureDefinitionDifferentialElementExampleValueCommandPayloadInput {
  data: [DataRequirementCommandInput!]!
  exampleId: ID!
}

"Generated command for adding data(DataRequirement) on StructureDefinition Aggregate"
input AddDataOnStructureDefinitionDifferentialElementFixedCommandPayloadInput {
  data: [DataRequirementCommandInput!]!
  elementId: ID!
}

"Generated command for adding data(DataRequirement) on StructureDefinition Aggregate"
input AddDataOnStructureDefinitionDifferentialElementPatternCommandPayloadInput {
  data: [DataRequirementCommandInput!]!
  elementId: ID!
}

"Generated command for adding data(DataRequirement) on StructureDefinition Aggregate"
input AddDataOnStructureDefinitionSnapshotElementDefaultValueCommandPayloadInput {
  data: [DataRequirementCommandInput!]!
  elementId: ID!
}

"Generated command for adding data(DataRequirement) on StructureDefinition Aggregate"
input AddDataOnStructureDefinitionSnapshotElementExampleValueCommandPayloadInput {
  data: [DataRequirementCommandInput!]!
  exampleId: ID!
}

"Generated command for adding data(DataRequirement) on StructureDefinition Aggregate"
input AddDataOnStructureDefinitionSnapshotElementFixedCommandPayloadInput {
  data: [DataRequirementCommandInput!]!
  elementId: ID!
}

"Generated command for adding data(DataRequirement) on StructureDefinition Aggregate"
input AddDataOnStructureDefinitionSnapshotElementPatternCommandPayloadInput {
  data: [DataRequirementCommandInput!]!
  elementId: ID!
}

"Generated command for adding dateFilter(DataRequirementDateFilter) on DomainResource Aggregate"
input AddDateFilterOnDomainResourceExtensionValueCommandPayloadInput {
  dateFilter: [DataRequirementDateFilterCommandInput!]!
  extensionId: ID!
}

"Generated command for adding dateFilter(DataRequirementDateFilter) on DomainResource Aggregate"
input AddDateFilterOnDomainResourceExtensionValueDataCommandPayloadInput {
  dataId: ID!
  dateFilter: [DataRequirementDateFilterCommandInput!]!
}

"Generated command for adding dateFilter(DataRequirementDateFilter) on DomainResource Aggregate"
input AddDateFilterOnDomainResourceModifierExtensionValueCommandPayloadInput {
  dateFilter: [DataRequirementDateFilterCommandInput!]!
  modifierExtensionId: ID!
}

"Generated command for adding dateFilter(DataRequirementDateFilter) on DomainResource Aggregate"
input AddDateFilterOnDomainResourceModifierExtensionValueDataCommandPayloadInput {
  dataId: ID!
  dateFilter: [DataRequirementDateFilterCommandInput!]!
}

"Generated command for adding dateFilter(DataRequirementDateFilter) on Parameters Aggregate"
input AddDateFilterOnParametersParameterValueCommandPayloadInput {
  dateFilter: [DataRequirementDateFilterCommandInput!]!
  parameterId: ID!
}

"Generated command for adding dateFilter(DataRequirementDateFilter) on Parameters Aggregate"
input AddDateFilterOnParametersParameterValueDataCommandPayloadInput {
  dataId: ID!
  dateFilter: [DataRequirementDateFilterCommandInput!]!
}

"Generated command for adding dateFilter(DataRequirementDateFilter) on StructureDefinition Aggregate"
input AddDateFilterOnStructureDefinitionDifferentialElementDefaultValueCommandPayloadInput {
  dateFilter: [DataRequirementDateFilterCommandInput!]!
  elementId: ID!
}

"Generated command for adding dateFilter(DataRequirementDateFilter) on StructureDefinition Aggregate"
input AddDateFilterOnStructureDefinitionDifferentialElementDefaultValueDataCommandPayloadInput {
  dataId: ID!
  dateFilter: [DataRequirementDateFilterCommandInput!]!
}

"Generated command for adding dateFilter(DataRequirementDateFilter) on StructureDefinition Aggregate"
input AddDateFilterOnStructureDefinitionDifferentialElementExampleValueCommandPayloadInput {
  dateFilter: [DataRequirementDateFilterCommandInput!]!
  exampleId: ID!
}

"Generated command for adding dateFilter(DataRequirementDateFilter) on StructureDefinition Aggregate"
input AddDateFilterOnStructureDefinitionDifferentialElementExampleValueDataCommandPayloadInput {
  dataId: ID!
  dateFilter: [DataRequirementDateFilterCommandInput!]!
}

"Generated command for adding dateFilter(DataRequirementDateFilter) on StructureDefinition Aggregate"
input AddDateFilterOnStructureDefinitionDifferentialElementFixedCommandPayloadInput {
  dateFilter: [DataRequirementDateFilterCommandInput!]!
  elementId: ID!
}

"Generated command for adding dateFilter(DataRequirementDateFilter) on StructureDefinition Aggregate"
input AddDateFilterOnStructureDefinitionDifferentialElementFixedDataCommandPayloadInput {
  dataId: ID!
  dateFilter: [DataRequirementDateFilterCommandInput!]!
}

"Generated command for adding dateFilter(DataRequirementDateFilter) on StructureDefinition Aggregate"
input AddDateFilterOnStructureDefinitionDifferentialElementPatternCommandPayloadInput {
  dateFilter: [DataRequirementDateFilterCommandInput!]!
  elementId: ID!
}

"Generated command for adding dateFilter(DataRequirementDateFilter) on StructureDefinition Aggregate"
input AddDateFilterOnStructureDefinitionDifferentialElementPatternDataCommandPayloadInput {
  dataId: ID!
  dateFilter: [DataRequirementDateFilterCommandInput!]!
}

"Generated command for adding dateFilter(DataRequirementDateFilter) on StructureDefinition Aggregate"
input AddDateFilterOnStructureDefinitionSnapshotElementDefaultValueCommandPayloadInput {
  dateFilter: [DataRequirementDateFilterCommandInput!]!
  elementId: ID!
}

"Generated command for adding dateFilter(DataRequirementDateFilter) on StructureDefinition Aggregate"
input AddDateFilterOnStructureDefinitionSnapshotElementDefaultValueDataCommandPayloadInput {
  dataId: ID!
  dateFilter: [DataRequirementDateFilterCommandInput!]!
}

"Generated command for adding dateFilter(DataRequirementDateFilter) on StructureDefinition Aggregate"
input AddDateFilterOnStructureDefinitionSnapshotElementExampleValueCommandPayloadInput {
  dateFilter: [DataRequirementDateFilterCommandInput!]!
  exampleId: ID!
}

"Generated command for adding dateFilter(DataRequirementDateFilter) on StructureDefinition Aggregate"
input AddDateFilterOnStructureDefinitionSnapshotElementExampleValueDataCommandPayloadInput {
  dataId: ID!
  dateFilter: [DataRequirementDateFilterCommandInput!]!
}

"Generated command for adding dateFilter(DataRequirementDateFilter) on StructureDefinition Aggregate"
input AddDateFilterOnStructureDefinitionSnapshotElementFixedCommandPayloadInput {
  dateFilter: [DataRequirementDateFilterCommandInput!]!
  elementId: ID!
}

"Generated command for adding dateFilter(DataRequirementDateFilter) on StructureDefinition Aggregate"
input AddDateFilterOnStructureDefinitionSnapshotElementFixedDataCommandPayloadInput {
  dataId: ID!
  dateFilter: [DataRequirementDateFilterCommandInput!]!
}

"Generated command for adding dateFilter(DataRequirementDateFilter) on StructureDefinition Aggregate"
input AddDateFilterOnStructureDefinitionSnapshotElementPatternCommandPayloadInput {
  dateFilter: [DataRequirementDateFilterCommandInput!]!
  elementId: ID!
}

"Generated command for adding dateFilter(DataRequirementDateFilter) on StructureDefinition Aggregate"
input AddDateFilterOnStructureDefinitionSnapshotElementPatternDataCommandPayloadInput {
  dataId: ID!
  dateFilter: [DataRequirementDateFilterCommandInput!]!
}

"Generated command for adding dayOfWeek(code) on DomainResource Aggregate"
input AddDayOfWeekOnDomainResourceExtensionValueTimingRepeatCommandPayloadInput {
  dayOfWeek: [code!]!
  extensionId: ID!
}

"Generated command for adding dayOfWeek(code) on DomainResource Aggregate"
input AddDayOfWeekOnDomainResourceModifierExtensionValueTimingRepeatCommandPayloadInput {
  dayOfWeek: [code!]!
  modifierExtensionId: ID!
}

"Generated command for adding dayOfWeek(code) on Parameters Aggregate"
input AddDayOfWeekOnParametersParameterValueTimingRepeatCommandPayloadInput {
  dayOfWeek: [code!]!
  parameterId: ID!
}

"Generated command for adding dayOfWeek(code) on StructureDefinition Aggregate"
input AddDayOfWeekOnStructureDefinitionDifferentialElementDefaultValueTimingRepeatCommandPayloadInput {
  dayOfWeek: [code!]!
  elementId: ID!
}

"Generated command for adding dayOfWeek(code) on StructureDefinition Aggregate"
input AddDayOfWeekOnStructureDefinitionDifferentialElementExampleValueTimingRepeatCommandPayloadInput {
  dayOfWeek: [code!]!
  exampleId: ID!
}

"Generated command for adding dayOfWeek(code) on StructureDefinition Aggregate"
input AddDayOfWeekOnStructureDefinitionDifferentialElementFixedTimingRepeatCommandPayloadInput {
  dayOfWeek: [code!]!
  elementId: ID!
}

"Generated command for adding dayOfWeek(code) on StructureDefinition Aggregate"
input AddDayOfWeekOnStructureDefinitionDifferentialElementPatternTimingRepeatCommandPayloadInput {
  dayOfWeek: [code!]!
  elementId: ID!
}

"Generated command for adding dayOfWeek(code) on StructureDefinition Aggregate"
input AddDayOfWeekOnStructureDefinitionSnapshotElementDefaultValueTimingRepeatCommandPayloadInput {
  dayOfWeek: [code!]!
  elementId: ID!
}

"Generated command for adding dayOfWeek(code) on StructureDefinition Aggregate"
input AddDayOfWeekOnStructureDefinitionSnapshotElementExampleValueTimingRepeatCommandPayloadInput {
  dayOfWeek: [code!]!
  exampleId: ID!
}

"Generated command for adding dayOfWeek(code) on StructureDefinition Aggregate"
input AddDayOfWeekOnStructureDefinitionSnapshotElementFixedTimingRepeatCommandPayloadInput {
  dayOfWeek: [code!]!
  elementId: ID!
}

"Generated command for adding dayOfWeek(code) on StructureDefinition Aggregate"
input AddDayOfWeekOnStructureDefinitionSnapshotElementPatternTimingRepeatCommandPayloadInput {
  dayOfWeek: [code!]!
  elementId: ID!
}

"Generated command for adding designation(ValueSetComposeIncludeConceptDesignation) on ValueSet Aggregate"
input AddDesignationOnValueSetComposeIncludeConceptCommandPayloadInput {
  conceptId: ID!
  designation: [ValueSetComposeIncludeConceptDesignationCommandInput!]!
}

"Generated command for adding designation(ValueSetComposeIncludeConceptDesignation) on ValueSet Aggregate"
input AddDesignationOnValueSetExpansionContainsCommandPayloadInput {
  containsId: ID!
  designation: [ValueSetComposeIncludeConceptDesignationCommandInput!]!
}

"Generated command for adding discriminator(ElementDefinitionSlicingDiscriminator) on StructureDefinition Aggregate"
input AddDiscriminatorOnStructureDefinitionDifferentialElementSlicingCommandPayloadInput {
  discriminator: [ElementDefinitionSlicingDiscriminatorCommandInput!]!
  elementId: ID!
}

"Generated command for adding discriminator(ElementDefinitionSlicingDiscriminator) on StructureDefinition Aggregate"
input AddDiscriminatorOnStructureDefinitionSnapshotElementSlicingCommandPayloadInput {
  discriminator: [ElementDefinitionSlicingDiscriminatorCommandInput!]!
  elementId: ID!
}

"Generated command for adding element(ElementDefinition) on StructureDefinition Aggregate"
input AddElementOnStructureDefinitionDifferentialCommandPayloadInput {
  element: [ElementDefinitionCommandInput!]!
}

"Generated command for adding element(ElementDefinition) on StructureDefinition Aggregate"
input AddElementOnStructureDefinitionSnapshotCommandPayloadInput {
  element: [ElementDefinitionCommandInput!]!
}

"Generated command for adding eventFactory(CommandHandlerDefinitionEventFactory) on AggregateDefinition Aggregate"
input AddEventFactoryOnAggregateDefinitionCommandCommandPayloadInput {
  commandId: ID!
  eventFactory: [CommandHandlerDefinitionEventFactoryCommandInput!]!
}

"Generated command for adding event(dateTime) on DomainResource Aggregate"
input AddEventOnDomainResourceExtensionValueTimingCommandPayloadInput {
  event: [dateTime!]!
  extensionId: ID!
}

"Generated command for adding event(dateTime) on DomainResource Aggregate"
input AddEventOnDomainResourceModifierExtensionValueTimingCommandPayloadInput {
  event: [dateTime!]!
  modifierExtensionId: ID!
}

"Generated command for adding event(dateTime) on Parameters Aggregate"
input AddEventOnParametersParameterValueTimingCommandPayloadInput {
  event: [dateTime!]!
  parameterId: ID!
}

"Generated command for adding event(dateTime) on StructureDefinition Aggregate"
input AddEventOnStructureDefinitionDifferentialElementDefaultValueTimingCommandPayloadInput {
  elementId: ID!
  event: [dateTime!]!
}

"Generated command for adding event(dateTime) on StructureDefinition Aggregate"
input AddEventOnStructureDefinitionDifferentialElementExampleValueTimingCommandPayloadInput {
  event: [dateTime!]!
  exampleId: ID!
}

"Generated command for adding event(dateTime) on StructureDefinition Aggregate"
input AddEventOnStructureDefinitionDifferentialElementFixedTimingCommandPayloadInput {
  elementId: ID!
  event: [dateTime!]!
}

"Generated command for adding event(dateTime) on StructureDefinition Aggregate"
input AddEventOnStructureDefinitionDifferentialElementPatternTimingCommandPayloadInput {
  elementId: ID!
  event: [dateTime!]!
}

"Generated command for adding event(dateTime) on StructureDefinition Aggregate"
input AddEventOnStructureDefinitionSnapshotElementDefaultValueTimingCommandPayloadInput {
  elementId: ID!
  event: [dateTime!]!
}

"Generated command for adding event(dateTime) on StructureDefinition Aggregate"
input AddEventOnStructureDefinitionSnapshotElementExampleValueTimingCommandPayloadInput {
  event: [dateTime!]!
  exampleId: ID!
}

"Generated command for adding event(dateTime) on StructureDefinition Aggregate"
input AddEventOnStructureDefinitionSnapshotElementFixedTimingCommandPayloadInput {
  elementId: ID!
  event: [dateTime!]!
}

"Generated command for adding event(dateTime) on StructureDefinition Aggregate"
input AddEventOnStructureDefinitionSnapshotElementPatternTimingCommandPayloadInput {
  elementId: ID!
  event: [dateTime!]!
}

"Generated command for adding example(ElementDefinitionExample) on StructureDefinition Aggregate"
input AddExampleOnStructureDefinitionDifferentialElementCommandPayloadInput {
  elementId: ID!
  example: [ElementDefinitionExampleCommandInput!]!
}

"Generated command for adding example(ElementDefinitionExample) on StructureDefinition Aggregate"
input AddExampleOnStructureDefinitionSnapshotElementCommandPayloadInput {
  elementId: ID!
  example: [ElementDefinitionExampleCommandInput!]!
}

"Generated command for adding exclude(ValueSetComposeInclude) on ValueSet Aggregate"
input AddExcludeOnValueSetComposeCommandPayloadInput {
  exclude: [ValueSetComposeIncludeCommandInput!]!
}

"Generated command for adding expression(string) on OperationOutcome Aggregate"
input AddExpressionOnOperationOutcomeIssueCommandPayloadInput {
  expression: [String!]!
  issueId: ID!
}

"Generated command for adding extension(Extension) on DomainResource Aggregate"
input AddExtensionOnDomainResourceCommandPayloadInput {
  extension: [ExtensionCommandInput!]!
}

"Generated command for adding filter(ValueSetComposeIncludeFilter) on ValueSet Aggregate"
input AddFilterOnValueSetComposeIncludeCommandPayloadInput {
  filter: [ValueSetComposeIncludeFilterCommandInput!]!
  includeId: ID!
}

"Generated command for adding identifier(Identifier) on StructureDefinition Aggregate"
input AddIdentifierOnStructureDefinitionCommandPayloadInput {
  identifier: [IdentifierCommandInput!]!
}

"Generated command for adding identifier(Identifier) on ValueSet Aggregate"
input AddIdentifierOnValueSetCommandPayloadInput {
  identifier: [IdentifierCommandInput!]!
}

"Generated command for adding include(ValueSetComposeInclude) on ValueSet Aggregate"
input AddIncludeOnValueSetComposeCommandPayloadInput {
  include: [ValueSetComposeIncludeCommandInput!]!
}

"Generated command for adding issue(OperationOutcomeIssue) on OperationOutcome Aggregate"
input AddIssueOnOperationOutcomeCommandPayloadInput {
  issue: [OperationOutcomeIssueCommandInput!]!
}

"Generated command for adding jurisdiction(CodeableConcept) on OperationDefinition Aggregate"
input AddJurisdictionOnOperationDefinitionCommandPayloadInput {
  jurisdiction: [CodeableConceptCommandInput!]!
}

"Generated command for adding jurisdiction(CodeableConcept) on StructureDefinition Aggregate"
input AddJurisdictionOnStructureDefinitionCommandPayloadInput {
  jurisdiction: [CodeableConceptCommandInput!]!
}

"Generated command for adding jurisdiction(CodeableConcept) on ValueSet Aggregate"
input AddJurisdictionOnValueSetCommandPayloadInput {
  jurisdiction: [CodeableConceptCommandInput!]!
}

"Generated command for adding keyword(Coding) on StructureDefinition Aggregate"
input AddKeywordOnStructureDefinitionCommandPayloadInput {
  keyword: [CodingCommandInput!]!
}

"Generated command for adding location(string) on OperationOutcome Aggregate"
input AddLocationOnOperationOutcomeIssueCommandPayloadInput {
  issueId: ID!
  location: [String!]!
}

"Generated command for adding mapping(StructureDefinitionMapping) on StructureDefinition Aggregate"
input AddMappingOnStructureDefinitionCommandPayloadInput {
  mapping: [StructureDefinitionMappingCommandInput!]!
}

"Generated command for adding mapping(ElementDefinitionMapping) on StructureDefinition Aggregate"
input AddMappingOnStructureDefinitionDifferentialElementCommandPayloadInput {
  elementId: ID!
  mapping: [ElementDefinitionMappingCommandInput!]!
}

"Generated command for adding mapping(ElementDefinitionMapping) on StructureDefinition Aggregate"
input AddMappingOnStructureDefinitionSnapshotElementCommandPayloadInput {
  elementId: ID!
  mapping: [ElementDefinitionMappingCommandInput!]!
}

"Generated command for adding modification(CommandHandlerDefinitionEventFactoryModification) on AggregateDefinition Aggregate"
input AddModificationOnAggregateDefinitionCommandEventFactoryCommandPayloadInput {
  eventFactoryId: ID!
  modification: [CommandHandlerDefinitionEventFactoryModificationCommandInput!]!
}

"Generated command for adding modifierExtension(Extension) on DomainResource Aggregate"
input AddModifierExtensionOnDomainResourceCommandPayloadInput {
  modifierExtension: [ExtensionCommandInput!]!
}

"Generated command for adding mustSupport(string) on DomainResource Aggregate"
input AddMustSupportOnDomainResourceExtensionValueCommandPayloadInput {
  extensionId: ID!
  mustSupport: [String!]!
}

"Generated command for adding mustSupport(string) on DomainResource Aggregate"
input AddMustSupportOnDomainResourceExtensionValueDataCommandPayloadInput {
  dataId: ID!
  mustSupport: [String!]!
}

"Generated command for adding mustSupport(string) on DomainResource Aggregate"
input AddMustSupportOnDomainResourceModifierExtensionValueCommandPayloadInput {
  modifierExtensionId: ID!
  mustSupport: [String!]!
}

"Generated command for adding mustSupport(string) on DomainResource Aggregate"
input AddMustSupportOnDomainResourceModifierExtensionValueDataCommandPayloadInput {
  dataId: ID!
  mustSupport: [String!]!
}

"Generated command for adding mustSupport(string) on Parameters Aggregate"
input AddMustSupportOnParametersParameterValueCommandPayloadInput {
  mustSupport: [String!]!
  parameterId: ID!
}

"Generated command for adding mustSupport(string) on Parameters Aggregate"
input AddMustSupportOnParametersParameterValueDataCommandPayloadInput {
  dataId: ID!
  mustSupport: [String!]!
}

"Generated command for adding mustSupport(string) on StructureDefinition Aggregate"
input AddMustSupportOnStructureDefinitionDifferentialElementDefaultValueCommandPayloadInput {
  elementId: ID!
  mustSupport: [String!]!
}

"Generated command for adding mustSupport(string) on StructureDefinition Aggregate"
input AddMustSupportOnStructureDefinitionDifferentialElementDefaultValueDataCommandPayloadInput {
  dataId: ID!
  mustSupport: [String!]!
}

"Generated command for adding mustSupport(string) on StructureDefinition Aggregate"
input AddMustSupportOnStructureDefinitionDifferentialElementExampleValueCommandPayloadInput {
  exampleId: ID!
  mustSupport: [String!]!
}

"Generated command for adding mustSupport(string) on StructureDefinition Aggregate"
input AddMustSupportOnStructureDefinitionDifferentialElementExampleValueDataCommandPayloadInput {
  dataId: ID!
  mustSupport: [String!]!
}

"Generated command for adding mustSupport(string) on StructureDefinition Aggregate"
input AddMustSupportOnStructureDefinitionDifferentialElementFixedCommandPayloadInput {
  elementId: ID!
  mustSupport: [String!]!
}

"Generated command for adding mustSupport(string) on StructureDefinition Aggregate"
input AddMustSupportOnStructureDefinitionDifferentialElementFixedDataCommandPayloadInput {
  dataId: ID!
  mustSupport: [String!]!
}

"Generated command for adding mustSupport(string) on StructureDefinition Aggregate"
input AddMustSupportOnStructureDefinitionDifferentialElementPatternCommandPayloadInput {
  elementId: ID!
  mustSupport: [String!]!
}

"Generated command for adding mustSupport(string) on StructureDefinition Aggregate"
input AddMustSupportOnStructureDefinitionDifferentialElementPatternDataCommandPayloadInput {
  dataId: ID!
  mustSupport: [String!]!
}

"Generated command for adding mustSupport(string) on StructureDefinition Aggregate"
input AddMustSupportOnStructureDefinitionSnapshotElementDefaultValueCommandPayloadInput {
  elementId: ID!
  mustSupport: [String!]!
}

"Generated command for adding mustSupport(string) on StructureDefinition Aggregate"
input AddMustSupportOnStructureDefinitionSnapshotElementDefaultValueDataCommandPayloadInput {
  dataId: ID!
  mustSupport: [String!]!
}

"Generated command for adding mustSupport(string) on StructureDefinition Aggregate"
input AddMustSupportOnStructureDefinitionSnapshotElementExampleValueCommandPayloadInput {
  exampleId: ID!
  mustSupport: [String!]!
}

"Generated command for adding mustSupport(string) on StructureDefinition Aggregate"
input AddMustSupportOnStructureDefinitionSnapshotElementExampleValueDataCommandPayloadInput {
  dataId: ID!
  mustSupport: [String!]!
}

"Generated command for adding mustSupport(string) on StructureDefinition Aggregate"
input AddMustSupportOnStructureDefinitionSnapshotElementFixedCommandPayloadInput {
  elementId: ID!
  mustSupport: [String!]!
}

"Generated command for adding mustSupport(string) on StructureDefinition Aggregate"
input AddMustSupportOnStructureDefinitionSnapshotElementFixedDataCommandPayloadInput {
  dataId: ID!
  mustSupport: [String!]!
}

"Generated command for adding mustSupport(string) on StructureDefinition Aggregate"
input AddMustSupportOnStructureDefinitionSnapshotElementPatternCommandPayloadInput {
  elementId: ID!
  mustSupport: [String!]!
}

"Generated command for adding mustSupport(string) on StructureDefinition Aggregate"
input AddMustSupportOnStructureDefinitionSnapshotElementPatternDataCommandPayloadInput {
  dataId: ID!
  mustSupport: [String!]!
}

"Generated command for adding overload(OperationDefinitionOverload) on OperationDefinition Aggregate"
input AddOverloadOnOperationDefinitionCommandPayloadInput {
  overload: [OperationDefinitionOverloadCommandInput!]!
}

"Generated command for adding parameterName(string) on OperationDefinition Aggregate"
input AddParameterNameOnOperationDefinitionOverloadCommandPayloadInput {
  overloadId: ID!
  parameterName: [String!]!
}

"Generated command for adding parameter(OperationDefinitionParameter) on OperationDefinition Aggregate"
input AddParameterOnOperationDefinitionCommandPayloadInput {
  parameter: [OperationDefinitionParameterCommandInput!]!
}

"Generated command for adding parameter(ParametersParameter) on Parameters Aggregate"
input AddParameterOnParametersCommandPayloadInput {
  parameter: [ParametersParameterCommandInput!]!
}

"Generated command for adding parameter(ValueSetExpansionParameter) on ValueSet Aggregate"
input AddParameterOnValueSetExpansionCommandPayloadInput {
  parameter: [ValueSetExpansionParameterCommandInput!]!
}

"Generated command for adding part(OperationDefinitionParameter) on OperationDefinition Aggregate"
input AddPartOnOperationDefinitionParameterCommandPayloadInput {
  parameterId: ID!
  part: [OperationDefinitionParameterCommandInput!]!
}

"Generated command for adding part(ParametersParameter) on Parameters Aggregate"
input AddPartOnParametersParameterCommandPayloadInput {
  parameterId: ID!
  part: [ParametersParameterCommandInput!]!
}

"Generated command for adding profile(canonical) on DomainResource Aggregate"
input AddProfileOnDomainResourceContainedMetaCommandPayloadInput {
  containedId: ID!
  profile: [canonical!]!
}

"Generated command for adding profile(canonical) on DomainResource Aggregate"
input AddProfileOnDomainResourceExtensionValueCommandPayloadInput {
  extensionId: ID!
  profile: [canonical!]!
}

"Generated command for adding profile(canonical) on DomainResource Aggregate"
input AddProfileOnDomainResourceExtensionValueDataCommandPayloadInput {
  dataId: ID!
  profile: [canonical!]!
}

"Generated command for adding profile(canonical) on DomainResource Aggregate"
input AddProfileOnDomainResourceModifierExtensionValueCommandPayloadInput {
  modifierExtensionId: ID!
  profile: [canonical!]!
}

"Generated command for adding profile(canonical) on DomainResource Aggregate"
input AddProfileOnDomainResourceModifierExtensionValueDataCommandPayloadInput {
  dataId: ID!
  profile: [canonical!]!
}

"Generated command for adding profile(canonical) on Parameters Aggregate"
input AddProfileOnParametersParameterResourceMetaCommandPayloadInput {
  parameterId: ID!
  profile: [canonical!]!
}

"Generated command for adding profile(canonical) on Parameters Aggregate"
input AddProfileOnParametersParameterValueCommandPayloadInput {
  parameterId: ID!
  profile: [canonical!]!
}

"Generated command for adding profile(canonical) on Parameters Aggregate"
input AddProfileOnParametersParameterValueDataCommandPayloadInput {
  dataId: ID!
  profile: [canonical!]!
}

"Generated command for adding profile(canonical) on Resource Aggregate"
input AddProfileOnResourceMetaCommandPayloadInput {
  profile: [canonical!]!
}

"Generated command for adding profile(canonical) on StructureDefinition Aggregate"
input AddProfileOnStructureDefinitionDifferentialElementDefaultValueCommandPayloadInput {
  elementId: ID!
  profile: [canonical!]!
}

"Generated command for adding profile(canonical) on StructureDefinition Aggregate"
input AddProfileOnStructureDefinitionDifferentialElementDefaultValueDataCommandPayloadInput {
  dataId: ID!
  profile: [canonical!]!
}

"Generated command for adding profile(canonical) on StructureDefinition Aggregate"
input AddProfileOnStructureDefinitionDifferentialElementExampleValueCommandPayloadInput {
  exampleId: ID!
  profile: [canonical!]!
}

"Generated command for adding profile(canonical) on StructureDefinition Aggregate"
input AddProfileOnStructureDefinitionDifferentialElementExampleValueDataCommandPayloadInput {
  dataId: ID!
  profile: [canonical!]!
}

"Generated command for adding profile(canonical) on StructureDefinition Aggregate"
input AddProfileOnStructureDefinitionDifferentialElementFixedCommandPayloadInput {
  elementId: ID!
  profile: [canonical!]!
}

"Generated command for adding profile(canonical) on StructureDefinition Aggregate"
input AddProfileOnStructureDefinitionDifferentialElementFixedDataCommandPayloadInput {
  dataId: ID!
  profile: [canonical!]!
}

"Generated command for adding profile(canonical) on StructureDefinition Aggregate"
input AddProfileOnStructureDefinitionDifferentialElementPatternCommandPayloadInput {
  elementId: ID!
  profile: [canonical!]!
}

"Generated command for adding profile(canonical) on StructureDefinition Aggregate"
input AddProfileOnStructureDefinitionDifferentialElementPatternDataCommandPayloadInput {
  dataId: ID!
  profile: [canonical!]!
}

"Generated command for adding profile(canonical) on StructureDefinition Aggregate"
input AddProfileOnStructureDefinitionDifferentialElementTypeCommandPayloadInput {
  profile: [canonical!]!
  typeId: ID!
}

"Generated command for adding profile(canonical) on StructureDefinition Aggregate"
input AddProfileOnStructureDefinitionSnapshotElementDefaultValueCommandPayloadInput {
  elementId: ID!
  profile: [canonical!]!
}

"Generated command for adding profile(canonical) on StructureDefinition Aggregate"
input AddProfileOnStructureDefinitionSnapshotElementDefaultValueDataCommandPayloadInput {
  dataId: ID!
  profile: [canonical!]!
}

"Generated command for adding profile(canonical) on StructureDefinition Aggregate"
input AddProfileOnStructureDefinitionSnapshotElementExampleValueCommandPayloadInput {
  exampleId: ID!
  profile: [canonical!]!
}

"Generated command for adding profile(canonical) on StructureDefinition Aggregate"
input AddProfileOnStructureDefinitionSnapshotElementExampleValueDataCommandPayloadInput {
  dataId: ID!
  profile: [canonical!]!
}

"Generated command for adding profile(canonical) on StructureDefinition Aggregate"
input AddProfileOnStructureDefinitionSnapshotElementFixedCommandPayloadInput {
  elementId: ID!
  profile: [canonical!]!
}

"Generated command for adding profile(canonical) on StructureDefinition Aggregate"
input AddProfileOnStructureDefinitionSnapshotElementFixedDataCommandPayloadInput {
  dataId: ID!
  profile: [canonical!]!
}

"Generated command for adding profile(canonical) on StructureDefinition Aggregate"
input AddProfileOnStructureDefinitionSnapshotElementPatternCommandPayloadInput {
  elementId: ID!
  profile: [canonical!]!
}

"Generated command for adding profile(canonical) on StructureDefinition Aggregate"
input AddProfileOnStructureDefinitionSnapshotElementPatternDataCommandPayloadInput {
  dataId: ID!
  profile: [canonical!]!
}

"Generated command for adding profile(canonical) on StructureDefinition Aggregate"
input AddProfileOnStructureDefinitionSnapshotElementTypeCommandPayloadInput {
  profile: [canonical!]!
  typeId: ID!
}

"Generated command for adding referencedFrom(OperationDefinitionParameterReferencedFrom) on OperationDefinition Aggregate"
input AddReferencedFromOnOperationDefinitionParameterCommandPayloadInput {
  parameterId: ID!
  referencedFrom: [OperationDefinitionParameterReferencedFromCommandInput!]!
}

"Generated command for adding representation(code) on StructureDefinition Aggregate"
input AddRepresentationOnStructureDefinitionDifferentialElementCommandPayloadInput {
  elementId: ID!
  representation: [code!]!
}

"Generated command for adding representation(code) on StructureDefinition Aggregate"
input AddRepresentationOnStructureDefinitionSnapshotElementCommandPayloadInput {
  elementId: ID!
  representation: [code!]!
}

"Generated command for adding resource(code) on OperationDefinition Aggregate"
input AddResourceOnOperationDefinitionCommandPayloadInput {
  resource: [code!]!
}

"Generated command for adding security(Coding) on DomainResource Aggregate"
input AddSecurityOnDomainResourceContainedMetaCommandPayloadInput {
  containedId: ID!
  security: [CodingCommandInput!]!
}

"Generated command for adding security(Coding) on Parameters Aggregate"
input AddSecurityOnParametersParameterResourceMetaCommandPayloadInput {
  parameterId: ID!
  security: [CodingCommandInput!]!
}

"Generated command for adding security(Coding) on Resource Aggregate"
input AddSecurityOnResourceMetaCommandPayloadInput {
  security: [CodingCommandInput!]!
}

"Generated command for adding sort(DataRequirementSort) on DomainResource Aggregate"
input AddSortOnDomainResourceExtensionValueCommandPayloadInput {
  extensionId: ID!
  sort: [DataRequirementSortCommandInput!]!
}

"Generated command for adding sort(DataRequirementSort) on DomainResource Aggregate"
input AddSortOnDomainResourceExtensionValueDataCommandPayloadInput {
  dataId: ID!
  sort: [DataRequirementSortCommandInput!]!
}

"Generated command for adding sort(DataRequirementSort) on DomainResource Aggregate"
input AddSortOnDomainResourceModifierExtensionValueCommandPayloadInput {
  modifierExtensionId: ID!
  sort: [DataRequirementSortCommandInput!]!
}

"Generated command for adding sort(DataRequirementSort) on DomainResource Aggregate"
input AddSortOnDomainResourceModifierExtensionValueDataCommandPayloadInput {
  dataId: ID!
  sort: [DataRequirementSortCommandInput!]!
}

"Generated command for adding sort(DataRequirementSort) on Parameters Aggregate"
input AddSortOnParametersParameterValueCommandPayloadInput {
  parameterId: ID!
  sort: [DataRequirementSortCommandInput!]!
}

"Generated command for adding sort(DataRequirementSort) on Parameters Aggregate"
input AddSortOnParametersParameterValueDataCommandPayloadInput {
  dataId: ID!
  sort: [DataRequirementSortCommandInput!]!
}

"Generated command for adding sort(DataRequirementSort) on StructureDefinition Aggregate"
input AddSortOnStructureDefinitionDifferentialElementDefaultValueCommandPayloadInput {
  elementId: ID!
  sort: [DataRequirementSortCommandInput!]!
}

"Generated command for adding sort(DataRequirementSort) on StructureDefinition Aggregate"
input AddSortOnStructureDefinitionDifferentialElementDefaultValueDataCommandPayloadInput {
  dataId: ID!
  sort: [DataRequirementSortCommandInput!]!
}

"Generated command for adding sort(DataRequirementSort) on StructureDefinition Aggregate"
input AddSortOnStructureDefinitionDifferentialElementExampleValueCommandPayloadInput {
  exampleId: ID!
  sort: [DataRequirementSortCommandInput!]!
}

"Generated command for adding sort(DataRequirementSort) on StructureDefinition Aggregate"
input AddSortOnStructureDefinitionDifferentialElementExampleValueDataCommandPayloadInput {
  dataId: ID!
  sort: [DataRequirementSortCommandInput!]!
}

"Generated command for adding sort(DataRequirementSort) on StructureDefinition Aggregate"
input AddSortOnStructureDefinitionDifferentialElementFixedCommandPayloadInput {
  elementId: ID!
  sort: [DataRequirementSortCommandInput!]!
}

"Generated command for adding sort(DataRequirementSort) on StructureDefinition Aggregate"
input AddSortOnStructureDefinitionDifferentialElementFixedDataCommandPayloadInput {
  dataId: ID!
  sort: [DataRequirementSortCommandInput!]!
}

"Generated command for adding sort(DataRequirementSort) on StructureDefinition Aggregate"
input AddSortOnStructureDefinitionDifferentialElementPatternCommandPayloadInput {
  elementId: ID!
  sort: [DataRequirementSortCommandInput!]!
}

"Generated command for adding sort(DataRequirementSort) on StructureDefinition Aggregate"
input AddSortOnStructureDefinitionDifferentialElementPatternDataCommandPayloadInput {
  dataId: ID!
  sort: [DataRequirementSortCommandInput!]!
}

"Generated command for adding sort(DataRequirementSort) on StructureDefinition Aggregate"
input AddSortOnStructureDefinitionSnapshotElementDefaultValueCommandPayloadInput {
  elementId: ID!
  sort: [DataRequirementSortCommandInput!]!
}

"Generated command for adding sort(DataRequirementSort) on StructureDefinition Aggregate"
input AddSortOnStructureDefinitionSnapshotElementDefaultValueDataCommandPayloadInput {
  dataId: ID!
  sort: [DataRequirementSortCommandInput!]!
}

"Generated command for adding sort(DataRequirementSort) on StructureDefinition Aggregate"
input AddSortOnStructureDefinitionSnapshotElementExampleValueCommandPayloadInput {
  exampleId: ID!
  sort: [DataRequirementSortCommandInput!]!
}

"Generated command for adding sort(DataRequirementSort) on StructureDefinition Aggregate"
input AddSortOnStructureDefinitionSnapshotElementExampleValueDataCommandPayloadInput {
  dataId: ID!
  sort: [DataRequirementSortCommandInput!]!
}

"Generated command for adding sort(DataRequirementSort) on StructureDefinition Aggregate"
input AddSortOnStructureDefinitionSnapshotElementFixedCommandPayloadInput {
  elementId: ID!
  sort: [DataRequirementSortCommandInput!]!
}

"Generated command for adding sort(DataRequirementSort) on StructureDefinition Aggregate"
input AddSortOnStructureDefinitionSnapshotElementFixedDataCommandPayloadInput {
  dataId: ID!
  sort: [DataRequirementSortCommandInput!]!
}

"Generated command for adding sort(DataRequirementSort) on StructureDefinition Aggregate"
input AddSortOnStructureDefinitionSnapshotElementPatternCommandPayloadInput {
  elementId: ID!
  sort: [DataRequirementSortCommandInput!]!
}

"Generated command for adding sort(DataRequirementSort) on StructureDefinition Aggregate"
input AddSortOnStructureDefinitionSnapshotElementPatternDataCommandPayloadInput {
  dataId: ID!
  sort: [DataRequirementSortCommandInput!]!
}

"Generated command for adding tag(Coding) on DomainResource Aggregate"
input AddTagOnDomainResourceContainedMetaCommandPayloadInput {
  containedId: ID!
  tag: [CodingCommandInput!]!
}

"Generated command for adding tag(Coding) on Parameters Aggregate"
input AddTagOnParametersParameterResourceMetaCommandPayloadInput {
  parameterId: ID!
  tag: [CodingCommandInput!]!
}

"Generated command for adding tag(Coding) on Resource Aggregate"
input AddTagOnResourceMetaCommandPayloadInput {
  tag: [CodingCommandInput!]!
}

"Generated command for adding targetProfile(canonical) on OperationDefinition Aggregate"
input AddTargetProfileOnOperationDefinitionParameterCommandPayloadInput {
  parameterId: ID!
  targetProfile: [canonical!]!
}

"Generated command for adding targetProfile(canonical) on StructureDefinition Aggregate"
input AddTargetProfileOnStructureDefinitionDifferentialElementTypeCommandPayloadInput {
  targetProfile: [canonical!]!
  typeId: ID!
}

"Generated command for adding targetProfile(canonical) on StructureDefinition Aggregate"
input AddTargetProfileOnStructureDefinitionSnapshotElementTypeCommandPayloadInput {
  targetProfile: [canonical!]!
  typeId: ID!
}

"Generated command for adding targetProfileReference(Reference) on OperationDefinition Aggregate"
input AddTargetProfileReferenceOnOperationDefinitionParameterCommandPayloadInput {
  parameterId: ID!
  targetProfileReference: [ID!]!
}

"Generated command for adding telecom(ContactPoint) on ValueSet Aggregate"
input AddTelecomOnValueSetContactCommandPayloadInput {
  contactId: ID!
  telecom: [ContactPointCommandInput!]!
}

"Generated command for adding timeOfDay(time) on DomainResource Aggregate"
input AddTimeOfDayOnDomainResourceExtensionValueTimingRepeatCommandPayloadInput {
  extensionId: ID!
  timeOfDay: [time!]!
}

"Generated command for adding timeOfDay(time) on DomainResource Aggregate"
input AddTimeOfDayOnDomainResourceModifierExtensionValueTimingRepeatCommandPayloadInput {
  modifierExtensionId: ID!
  timeOfDay: [time!]!
}

"Generated command for adding timeOfDay(time) on Parameters Aggregate"
input AddTimeOfDayOnParametersParameterValueTimingRepeatCommandPayloadInput {
  parameterId: ID!
  timeOfDay: [time!]!
}

"Generated command for adding timeOfDay(time) on StructureDefinition Aggregate"
input AddTimeOfDayOnStructureDefinitionDifferentialElementDefaultValueTimingRepeatCommandPayloadInput {
  elementId: ID!
  timeOfDay: [time!]!
}

"Generated command for adding timeOfDay(time) on StructureDefinition Aggregate"
input AddTimeOfDayOnStructureDefinitionDifferentialElementExampleValueTimingRepeatCommandPayloadInput {
  exampleId: ID!
  timeOfDay: [time!]!
}

"Generated command for adding timeOfDay(time) on StructureDefinition Aggregate"
input AddTimeOfDayOnStructureDefinitionDifferentialElementFixedTimingRepeatCommandPayloadInput {
  elementId: ID!
  timeOfDay: [time!]!
}

"Generated command for adding timeOfDay(time) on StructureDefinition Aggregate"
input AddTimeOfDayOnStructureDefinitionDifferentialElementPatternTimingRepeatCommandPayloadInput {
  elementId: ID!
  timeOfDay: [time!]!
}

"Generated command for adding timeOfDay(time) on StructureDefinition Aggregate"
input AddTimeOfDayOnStructureDefinitionSnapshotElementDefaultValueTimingRepeatCommandPayloadInput {
  elementId: ID!
  timeOfDay: [time!]!
}

"Generated command for adding timeOfDay(time) on StructureDefinition Aggregate"
input AddTimeOfDayOnStructureDefinitionSnapshotElementExampleValueTimingRepeatCommandPayloadInput {
  exampleId: ID!
  timeOfDay: [time!]!
}

"Generated command for adding timeOfDay(time) on StructureDefinition Aggregate"
input AddTimeOfDayOnStructureDefinitionSnapshotElementFixedTimingRepeatCommandPayloadInput {
  elementId: ID!
  timeOfDay: [time!]!
}

"Generated command for adding timeOfDay(time) on StructureDefinition Aggregate"
input AddTimeOfDayOnStructureDefinitionSnapshotElementPatternTimingRepeatCommandPayloadInput {
  elementId: ID!
  timeOfDay: [time!]!
}

"Generated command for adding type(ElementDefinitionType) on StructureDefinition Aggregate"
input AddTypeOnStructureDefinitionDifferentialElementCommandPayloadInput {
  elementId: ID!
  type: [ElementDefinitionTypeCommandInput!]!
}

"Generated command for adding type(ElementDefinitionType) on StructureDefinition Aggregate"
input AddTypeOnStructureDefinitionSnapshotElementCommandPayloadInput {
  elementId: ID!
  type: [ElementDefinitionTypeCommandInput!]!
}

"Generated command for adding useContext(UsageContext) on OperationDefinition Aggregate"
input AddUseContextOnOperationDefinitionCommandPayloadInput {
  useContext: [UsageContextCommandInput!]!
}

"Generated command for adding useContext(UsageContext) on StructureDefinition Aggregate"
input AddUseContextOnStructureDefinitionCommandPayloadInput {
  useContext: [UsageContextCommandInput!]!
}

"Generated command for adding useContext(UsageContext) on ValueSet Aggregate"
input AddUseContextOnValueSetCommandPayloadInput {
  useContext: [UsageContextCommandInput!]!
}

"Generated command for adding valueSet(canonical) on ValueSet Aggregate"
input AddValueSetOnValueSetComposeIncludeCommandPayloadInput {
  includeId: ID!
  valueSet: [canonical!]!
}

"Generated command for adding when(code) on DomainResource Aggregate"
input AddWhenOnDomainResourceExtensionValueTimingRepeatCommandPayloadInput {
  extensionId: ID!
  when: [code!]!
}

"Generated command for adding when(code) on DomainResource Aggregate"
input AddWhenOnDomainResourceModifierExtensionValueTimingRepeatCommandPayloadInput {
  modifierExtensionId: ID!
  when: [code!]!
}

"Generated command for adding when(code) on Parameters Aggregate"
input AddWhenOnParametersParameterValueTimingRepeatCommandPayloadInput {
  parameterId: ID!
  when: [code!]!
}

"Generated command for adding when(code) on StructureDefinition Aggregate"
input AddWhenOnStructureDefinitionDifferentialElementDefaultValueTimingRepeatCommandPayloadInput {
  elementId: ID!
  when: [code!]!
}

"Generated command for adding when(code) on StructureDefinition Aggregate"
input AddWhenOnStructureDefinitionDifferentialElementExampleValueTimingRepeatCommandPayloadInput {
  exampleId: ID!
  when: [code!]!
}

"Generated command for adding when(code) on StructureDefinition Aggregate"
input AddWhenOnStructureDefinitionDifferentialElementFixedTimingRepeatCommandPayloadInput {
  elementId: ID!
  when: [code!]!
}

"Generated command for adding when(code) on StructureDefinition Aggregate"
input AddWhenOnStructureDefinitionDifferentialElementPatternTimingRepeatCommandPayloadInput {
  elementId: ID!
  when: [code!]!
}

"Generated command for adding when(code) on StructureDefinition Aggregate"
input AddWhenOnStructureDefinitionSnapshotElementDefaultValueTimingRepeatCommandPayloadInput {
  elementId: ID!
  when: [code!]!
}

"Generated command for adding when(code) on StructureDefinition Aggregate"
input AddWhenOnStructureDefinitionSnapshotElementExampleValueTimingRepeatCommandPayloadInput {
  exampleId: ID!
  when: [code!]!
}

"Generated command for adding when(code) on StructureDefinition Aggregate"
input AddWhenOnStructureDefinitionSnapshotElementFixedTimingRepeatCommandPayloadInput {
  elementId: ID!
  when: [code!]!
}

"Generated command for adding when(code) on StructureDefinition Aggregate"
input AddWhenOnStructureDefinitionSnapshotElementPatternTimingRepeatCommandPayloadInput {
  elementId: ID!
  when: [code!]!
}

input AggregateDefinitionFilterOption {
  command_ALL_MATCH: CommandHandlerDefinitionFilterOption
  command_ANY_MATCH: CommandHandlerDefinitionFilterOption
  command_NONE_MATCH: CommandHandlerDefinitionFilterOption
  description_CONTAINS: String
  description_ENDS_WITH: String
  description_EQUALS: String
  description_GREATER_THAN: String
  description_GREATER_THAN_OR_EQUALS: String
  description_LOWER_THAN: String
  description_LOWER_THAN_OR_EQUALS: String
  description_NOT_EQUALS: String
  description_STARTS_WITH: String
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  implicitRules_CONTAINS: uri
  implicitRules_ENDS_WITH: uri
  implicitRules_EQUALS: uri
  implicitRules_GREATER_THAN: uri
  implicitRules_GREATER_THAN_OR_EQUALS: uri
  implicitRules_LOWER_THAN: uri
  implicitRules_LOWER_THAN_OR_EQUALS: uri
  implicitRules_NOT_EQUALS: uri
  implicitRules_STARTS_WITH: uri
  language_CONTAINS: code
  language_ENDS_WITH: code
  language_EQUALS: code
  language_GREATER_THAN: code
  language_GREATER_THAN_OR_EQUALS: code
  language_LOWER_THAN: code
  language_LOWER_THAN_OR_EQUALS: code
  language_NOT_EQUALS: code
  language_STARTS_WITH: code
  meta: MetaFilterOption
  name_CONTAINS: String
  name_ENDS_WITH: String
  name_EQUALS: String
  name_GREATER_THAN: String
  name_GREATER_THAN_OR_EQUALS: String
  name_LOWER_THAN: String
  name_LOWER_THAN_OR_EQUALS: String
  name_NOT_EQUALS: String
  name_STARTS_WITH: String
  structure: StructureDefinitionFilterOption
}

input AggregateDefinitionLogicalFilterOption {
  AND: [AggregateDefinitionLogicalFilterOption!]
  NOT: AggregateDefinitionLogicalFilterOption
  OR: [AggregateDefinitionLogicalFilterOption!]
  command_ALL_MATCH: CommandHandlerDefinitionFilterOption
  command_ANY_MATCH: CommandHandlerDefinitionFilterOption
  command_NONE_MATCH: CommandHandlerDefinitionFilterOption
  description_CONTAINS: String
  description_ENDS_WITH: String
  description_EQUALS: String
  description_GREATER_THAN: String
  description_GREATER_THAN_OR_EQUALS: String
  description_LOWER_THAN: String
  description_LOWER_THAN_OR_EQUALS: String
  description_NOT_EQUALS: String
  description_STARTS_WITH: String
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  implicitRules_CONTAINS: uri
  implicitRules_ENDS_WITH: uri
  implicitRules_EQUALS: uri
  implicitRules_GREATER_THAN: uri
  implicitRules_GREATER_THAN_OR_EQUALS: uri
  implicitRules_LOWER_THAN: uri
  implicitRules_LOWER_THAN_OR_EQUALS: uri
  implicitRules_NOT_EQUALS: uri
  implicitRules_STARTS_WITH: uri
  language_CONTAINS: code
  language_ENDS_WITH: code
  language_EQUALS: code
  language_GREATER_THAN: code
  language_GREATER_THAN_OR_EQUALS: code
  language_LOWER_THAN: code
  language_LOWER_THAN_OR_EQUALS: code
  language_NOT_EQUALS: code
  language_STARTS_WITH: code
  meta: MetaFilterOption
  name_CONTAINS: String
  name_ENDS_WITH: String
  name_EQUALS: String
  name_GREATER_THAN: String
  name_GREATER_THAN_OR_EQUALS: String
  name_LOWER_THAN: String
  name_LOWER_THAN_OR_EQUALS: String
  name_NOT_EQUALS: String
  name_STARTS_WITH: String
  structure: StructureDefinitionFilterOption
}

input AggregateDefinitionSortOption {
  command: CommandHandlerDefinitionSortOption
  description: SortDirection
  id: SortDirection
  implicitRules: SortDirection
  language: SortDirection
  meta: MetaSortOption
  name: SortDirection
  structure: StructureDefinitionSortOption
}

input BackboneElementCommandInput {
  extension: [ExtensionCommandInput!]
  id: String
  modifierExtension: [ExtensionCommandInput!]
}

input BackboneElementFilterOption {
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  modifierExtension_ALL_MATCH: ExtensionFilterOption
  modifierExtension_ANY_MATCH: ExtensionFilterOption
  modifierExtension_NONE_MATCH: ExtensionFilterOption
}

input BackboneElementLogicalFilterOption {
  AND: [BackboneElementLogicalFilterOption!]
  NOT: BackboneElementLogicalFilterOption
  OR: [BackboneElementLogicalFilterOption!]
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  modifierExtension_ALL_MATCH: ExtensionFilterOption
  modifierExtension_ANY_MATCH: ExtensionFilterOption
  modifierExtension_NONE_MATCH: ExtensionFilterOption
}

input BackboneElementSortOption {
  extension: ExtensionSortOption
  id: SortDirection
  modifierExtension: ExtensionSortOption
}

input BoxedBase64BinaryCommandInput {
  extension: [ExtensionCommandInput!]
  id: String
  value: base64Binary
}

input BoxedBase64BinaryFilterOption {
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  value_CONTAINS: base64Binary
  value_ENDS_WITH: base64Binary
  value_EQUALS: base64Binary
  value_GREATER_THAN: base64Binary
  value_GREATER_THAN_OR_EQUALS: base64Binary
  value_LOWER_THAN: base64Binary
  value_LOWER_THAN_OR_EQUALS: base64Binary
  value_NOT_EQUALS: base64Binary
  value_STARTS_WITH: base64Binary
}

input BoxedBase64BinaryLogicalFilterOption {
  AND: [BoxedBase64BinaryLogicalFilterOption!]
  NOT: BoxedBase64BinaryLogicalFilterOption
  OR: [BoxedBase64BinaryLogicalFilterOption!]
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  value_CONTAINS: base64Binary
  value_ENDS_WITH: base64Binary
  value_EQUALS: base64Binary
  value_GREATER_THAN: base64Binary
  value_GREATER_THAN_OR_EQUALS: base64Binary
  value_LOWER_THAN: base64Binary
  value_LOWER_THAN_OR_EQUALS: base64Binary
  value_NOT_EQUALS: base64Binary
  value_STARTS_WITH: base64Binary
}

input BoxedBase64BinarySortOption {
  extension: ExtensionSortOption
  id: SortDirection
  value: SortDirection
}

input BoxedBooleanCommandInput {
  extension: [ExtensionCommandInput!]
  id: String
  value: Boolean
}

input BoxedBooleanFilterOption {
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  value_EQUALS: Boolean
  value_NOT_EQUALS: Boolean
}

input BoxedBooleanLogicalFilterOption {
  AND: [BoxedBooleanLogicalFilterOption!]
  NOT: BoxedBooleanLogicalFilterOption
  OR: [BoxedBooleanLogicalFilterOption!]
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  value_EQUALS: Boolean
  value_NOT_EQUALS: Boolean
}

input BoxedBooleanSortOption {
  extension: ExtensionSortOption
  id: SortDirection
  value: SortDirection
}

input BoxedCanonicalCommandInput {
  extension: [ExtensionCommandInput!]
  id: String
  value: canonical
}

input BoxedCanonicalFilterOption {
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  value_CONTAINS: canonical
  value_ENDS_WITH: canonical
  value_EQUALS: canonical
  value_GREATER_THAN: canonical
  value_GREATER_THAN_OR_EQUALS: canonical
  value_LOWER_THAN: canonical
  value_LOWER_THAN_OR_EQUALS: canonical
  value_NOT_EQUALS: canonical
  value_STARTS_WITH: canonical
}

input BoxedCanonicalLogicalFilterOption {
  AND: [BoxedCanonicalLogicalFilterOption!]
  NOT: BoxedCanonicalLogicalFilterOption
  OR: [BoxedCanonicalLogicalFilterOption!]
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  value_CONTAINS: canonical
  value_ENDS_WITH: canonical
  value_EQUALS: canonical
  value_GREATER_THAN: canonical
  value_GREATER_THAN_OR_EQUALS: canonical
  value_LOWER_THAN: canonical
  value_LOWER_THAN_OR_EQUALS: canonical
  value_NOT_EQUALS: canonical
  value_STARTS_WITH: canonical
}

input BoxedCanonicalSortOption {
  extension: ExtensionSortOption
  id: SortDirection
  value: SortDirection
}

input BoxedCodeCommandInput {
  extension: [ExtensionCommandInput!]
  id: String
  value: code
}

input BoxedCodeFilterOption {
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  value_CONTAINS: code
  value_ENDS_WITH: code
  value_EQUALS: code
  value_GREATER_THAN: code
  value_GREATER_THAN_OR_EQUALS: code
  value_LOWER_THAN: code
  value_LOWER_THAN_OR_EQUALS: code
  value_NOT_EQUALS: code
  value_STARTS_WITH: code
}

input BoxedCodeLogicalFilterOption {
  AND: [BoxedCodeLogicalFilterOption!]
  NOT: BoxedCodeLogicalFilterOption
  OR: [BoxedCodeLogicalFilterOption!]
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  value_CONTAINS: code
  value_ENDS_WITH: code
  value_EQUALS: code
  value_GREATER_THAN: code
  value_GREATER_THAN_OR_EQUALS: code
  value_LOWER_THAN: code
  value_LOWER_THAN_OR_EQUALS: code
  value_NOT_EQUALS: code
  value_STARTS_WITH: code
}

input BoxedCodeSortOption {
  extension: ExtensionSortOption
  id: SortDirection
  value: SortDirection
}

input BoxedDateCommandInput {
  extension: [ExtensionCommandInput!]
  id: String
  value: date
}

input BoxedDateFilterOption {
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  value_EQUALS: date
  value_GREATER_THAN: date
  value_GREATER_THAN_OR_EQUALS: date
  value_LOWER_THAN: date
  value_LOWER_THAN_OR_EQUALS: date
  value_NOT_EQUALS: date
}

input BoxedDateLogicalFilterOption {
  AND: [BoxedDateLogicalFilterOption!]
  NOT: BoxedDateLogicalFilterOption
  OR: [BoxedDateLogicalFilterOption!]
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  value_EQUALS: date
  value_GREATER_THAN: date
  value_GREATER_THAN_OR_EQUALS: date
  value_LOWER_THAN: date
  value_LOWER_THAN_OR_EQUALS: date
  value_NOT_EQUALS: date
}

input BoxedDateSortOption {
  extension: ExtensionSortOption
  id: SortDirection
  value: SortDirection
}

input BoxedDateTimeCommandInput {
  extension: [ExtensionCommandInput!]
  id: String
  value: dateTime
}

input BoxedDateTimeFilterOption {
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  value_EQUALS: dateTime
  value_GREATER_THAN: dateTime
  value_GREATER_THAN_OR_EQUALS: dateTime
  value_LOWER_THAN: dateTime
  value_LOWER_THAN_OR_EQUALS: dateTime
  value_NOT_EQUALS: dateTime
}

input BoxedDateTimeLogicalFilterOption {
  AND: [BoxedDateTimeLogicalFilterOption!]
  NOT: BoxedDateTimeLogicalFilterOption
  OR: [BoxedDateTimeLogicalFilterOption!]
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  value_EQUALS: dateTime
  value_GREATER_THAN: dateTime
  value_GREATER_THAN_OR_EQUALS: dateTime
  value_LOWER_THAN: dateTime
  value_LOWER_THAN_OR_EQUALS: dateTime
  value_NOT_EQUALS: dateTime
}

input BoxedDateTimeSortOption {
  extension: ExtensionSortOption
  id: SortDirection
  value: SortDirection
}

input BoxedDecimalCommandInput {
  extension: [ExtensionCommandInput!]
  id: String
  value: Float
}

input BoxedDecimalFilterOption {
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  value_EQUALS: Float
  value_GREATER_THAN: Float
  value_GREATER_THAN_OR_EQUALS: Float
  value_LOWER_THAN: Float
  value_LOWER_THAN_OR_EQUALS: Float
  value_NOT_EQUALS: Float
}

input BoxedDecimalLogicalFilterOption {
  AND: [BoxedDecimalLogicalFilterOption!]
  NOT: BoxedDecimalLogicalFilterOption
  OR: [BoxedDecimalLogicalFilterOption!]
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  value_EQUALS: Float
  value_GREATER_THAN: Float
  value_GREATER_THAN_OR_EQUALS: Float
  value_LOWER_THAN: Float
  value_LOWER_THAN_OR_EQUALS: Float
  value_NOT_EQUALS: Float
}

input BoxedDecimalSortOption {
  extension: ExtensionSortOption
  id: SortDirection
  value: SortDirection
}

input BoxedIdCommandInput {
  extension: [ExtensionCommandInput!]
  id: String
  value: ID
}

input BoxedIdFilterOption {
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  value_CONTAINS: ID
  value_ENDS_WITH: ID
  value_EQUALS: ID
  value_GREATER_THAN: ID
  value_GREATER_THAN_OR_EQUALS: ID
  value_LOWER_THAN: ID
  value_LOWER_THAN_OR_EQUALS: ID
  value_NOT_EQUALS: ID
  value_STARTS_WITH: ID
}

input BoxedIdLogicalFilterOption {
  AND: [BoxedIdLogicalFilterOption!]
  NOT: BoxedIdLogicalFilterOption
  OR: [BoxedIdLogicalFilterOption!]
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  value_CONTAINS: ID
  value_ENDS_WITH: ID
  value_EQUALS: ID
  value_GREATER_THAN: ID
  value_GREATER_THAN_OR_EQUALS: ID
  value_LOWER_THAN: ID
  value_LOWER_THAN_OR_EQUALS: ID
  value_NOT_EQUALS: ID
  value_STARTS_WITH: ID
}

input BoxedIdSortOption {
  extension: ExtensionSortOption
  id: SortDirection
  value: SortDirection
}

input BoxedInstantCommandInput {
  extension: [ExtensionCommandInput!]
  id: String
  value: instant
}

input BoxedInstantFilterOption {
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  value_EQUALS: instant
  value_GREATER_THAN: instant
  value_GREATER_THAN_OR_EQUALS: instant
  value_LOWER_THAN: instant
  value_LOWER_THAN_OR_EQUALS: instant
  value_NOT_EQUALS: instant
}

input BoxedInstantLogicalFilterOption {
  AND: [BoxedInstantLogicalFilterOption!]
  NOT: BoxedInstantLogicalFilterOption
  OR: [BoxedInstantLogicalFilterOption!]
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  value_EQUALS: instant
  value_GREATER_THAN: instant
  value_GREATER_THAN_OR_EQUALS: instant
  value_LOWER_THAN: instant
  value_LOWER_THAN_OR_EQUALS: instant
  value_NOT_EQUALS: instant
}

input BoxedInstantSortOption {
  extension: ExtensionSortOption
  id: SortDirection
  value: SortDirection
}

input BoxedIntegerCommandInput {
  extension: [ExtensionCommandInput!]
  id: String
  value: Int
}

input BoxedIntegerFilterOption {
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  value_EQUALS: Int
  value_GREATER_THAN: Int
  value_GREATER_THAN_OR_EQUALS: Int
  value_LOWER_THAN: Int
  value_LOWER_THAN_OR_EQUALS: Int
  value_NOT_EQUALS: Int
}

input BoxedIntegerLogicalFilterOption {
  AND: [BoxedIntegerLogicalFilterOption!]
  NOT: BoxedIntegerLogicalFilterOption
  OR: [BoxedIntegerLogicalFilterOption!]
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  value_EQUALS: Int
  value_GREATER_THAN: Int
  value_GREATER_THAN_OR_EQUALS: Int
  value_LOWER_THAN: Int
  value_LOWER_THAN_OR_EQUALS: Int
  value_NOT_EQUALS: Int
}

input BoxedIntegerSortOption {
  extension: ExtensionSortOption
  id: SortDirection
  value: SortDirection
}

input BoxedMarkdownCommandInput {
  extension: [ExtensionCommandInput!]
  id: String
  value: markdown
}

input BoxedMarkdownFilterOption {
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  value_CONTAINS: markdown
  value_ENDS_WITH: markdown
  value_EQUALS: markdown
  value_GREATER_THAN: markdown
  value_GREATER_THAN_OR_EQUALS: markdown
  value_LOWER_THAN: markdown
  value_LOWER_THAN_OR_EQUALS: markdown
  value_NOT_EQUALS: markdown
  value_STARTS_WITH: markdown
}

input BoxedMarkdownLogicalFilterOption {
  AND: [BoxedMarkdownLogicalFilterOption!]
  NOT: BoxedMarkdownLogicalFilterOption
  OR: [BoxedMarkdownLogicalFilterOption!]
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  value_CONTAINS: markdown
  value_ENDS_WITH: markdown
  value_EQUALS: markdown
  value_GREATER_THAN: markdown
  value_GREATER_THAN_OR_EQUALS: markdown
  value_LOWER_THAN: markdown
  value_LOWER_THAN_OR_EQUALS: markdown
  value_NOT_EQUALS: markdown
  value_STARTS_WITH: markdown
}

input BoxedMarkdownSortOption {
  extension: ExtensionSortOption
  id: SortDirection
  value: SortDirection
}

input BoxedOidCommandInput {
  extension: [ExtensionCommandInput!]
  id: String
  value: oid
}

input BoxedOidFilterOption {
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  value_CONTAINS: oid
  value_ENDS_WITH: oid
  value_EQUALS: oid
  value_GREATER_THAN: oid
  value_GREATER_THAN_OR_EQUALS: oid
  value_LOWER_THAN: oid
  value_LOWER_THAN_OR_EQUALS: oid
  value_NOT_EQUALS: oid
  value_STARTS_WITH: oid
}

input BoxedOidLogicalFilterOption {
  AND: [BoxedOidLogicalFilterOption!]
  NOT: BoxedOidLogicalFilterOption
  OR: [BoxedOidLogicalFilterOption!]
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  value_CONTAINS: oid
  value_ENDS_WITH: oid
  value_EQUALS: oid
  value_GREATER_THAN: oid
  value_GREATER_THAN_OR_EQUALS: oid
  value_LOWER_THAN: oid
  value_LOWER_THAN_OR_EQUALS: oid
  value_NOT_EQUALS: oid
  value_STARTS_WITH: oid
}

input BoxedOidSortOption {
  extension: ExtensionSortOption
  id: SortDirection
  value: SortDirection
}

input BoxedPositiveIntCommandInput {
  extension: [ExtensionCommandInput!]
  id: String
  value: positiveInt
}

input BoxedPositiveIntFilterOption {
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  value_EQUALS: positiveInt
  value_GREATER_THAN: positiveInt
  value_GREATER_THAN_OR_EQUALS: positiveInt
  value_LOWER_THAN: positiveInt
  value_LOWER_THAN_OR_EQUALS: positiveInt
  value_NOT_EQUALS: positiveInt
}

input BoxedPositiveIntLogicalFilterOption {
  AND: [BoxedPositiveIntLogicalFilterOption!]
  NOT: BoxedPositiveIntLogicalFilterOption
  OR: [BoxedPositiveIntLogicalFilterOption!]
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  value_EQUALS: positiveInt
  value_GREATER_THAN: positiveInt
  value_GREATER_THAN_OR_EQUALS: positiveInt
  value_LOWER_THAN: positiveInt
  value_LOWER_THAN_OR_EQUALS: positiveInt
  value_NOT_EQUALS: positiveInt
}

input BoxedPositiveIntSortOption {
  extension: ExtensionSortOption
  id: SortDirection
  value: SortDirection
}

input BoxedStringCommandInput {
  extension: [ExtensionCommandInput!]
  id: String
  value: String
}

input BoxedStringFilterOption {
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  value_CONTAINS: String
  value_ENDS_WITH: String
  value_EQUALS: String
  value_GREATER_THAN: String
  value_GREATER_THAN_OR_EQUALS: String
  value_LOWER_THAN: String
  value_LOWER_THAN_OR_EQUALS: String
  value_NOT_EQUALS: String
  value_STARTS_WITH: String
}

input BoxedStringLogicalFilterOption {
  AND: [BoxedStringLogicalFilterOption!]
  NOT: BoxedStringLogicalFilterOption
  OR: [BoxedStringLogicalFilterOption!]
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  value_CONTAINS: String
  value_ENDS_WITH: String
  value_EQUALS: String
  value_GREATER_THAN: String
  value_GREATER_THAN_OR_EQUALS: String
  value_LOWER_THAN: String
  value_LOWER_THAN_OR_EQUALS: String
  value_NOT_EQUALS: String
  value_STARTS_WITH: String
}

input BoxedStringSortOption {
  extension: ExtensionSortOption
  id: SortDirection
  value: SortDirection
}

input BoxedTimeCommandInput {
  extension: [ExtensionCommandInput!]
  id: String
  value: time
}

input BoxedTimeFilterOption {
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  value_EQUALS: time
  value_GREATER_THAN: time
  value_GREATER_THAN_OR_EQUALS: time
  value_LOWER_THAN: time
  value_LOWER_THAN_OR_EQUALS: time
  value_NOT_EQUALS: time
}

input BoxedTimeLogicalFilterOption {
  AND: [BoxedTimeLogicalFilterOption!]
  NOT: BoxedTimeLogicalFilterOption
  OR: [BoxedTimeLogicalFilterOption!]
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  value_EQUALS: time
  value_GREATER_THAN: time
  value_GREATER_THAN_OR_EQUALS: time
  value_LOWER_THAN: time
  value_LOWER_THAN_OR_EQUALS: time
  value_NOT_EQUALS: time
}

input BoxedTimeSortOption {
  extension: ExtensionSortOption
  id: SortDirection
  value: SortDirection
}

input BoxedUnsignedIntCommandInput {
  extension: [ExtensionCommandInput!]
  id: String
  value: unsignedInt
}

input BoxedUnsignedIntFilterOption {
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  value_EQUALS: unsignedInt
  value_GREATER_THAN: unsignedInt
  value_GREATER_THAN_OR_EQUALS: unsignedInt
  value_LOWER_THAN: unsignedInt
  value_LOWER_THAN_OR_EQUALS: unsignedInt
  value_NOT_EQUALS: unsignedInt
}

input BoxedUnsignedIntLogicalFilterOption {
  AND: [BoxedUnsignedIntLogicalFilterOption!]
  NOT: BoxedUnsignedIntLogicalFilterOption
  OR: [BoxedUnsignedIntLogicalFilterOption!]
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  value_EQUALS: unsignedInt
  value_GREATER_THAN: unsignedInt
  value_GREATER_THAN_OR_EQUALS: unsignedInt
  value_LOWER_THAN: unsignedInt
  value_LOWER_THAN_OR_EQUALS: unsignedInt
  value_NOT_EQUALS: unsignedInt
}

input BoxedUnsignedIntSortOption {
  extension: ExtensionSortOption
  id: SortDirection
  value: SortDirection
}

input BoxedUriCommandInput {
  extension: [ExtensionCommandInput!]
  id: String
  value: uri
}

input BoxedUriFilterOption {
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  value_CONTAINS: uri
  value_ENDS_WITH: uri
  value_EQUALS: uri
  value_GREATER_THAN: uri
  value_GREATER_THAN_OR_EQUALS: uri
  value_LOWER_THAN: uri
  value_LOWER_THAN_OR_EQUALS: uri
  value_NOT_EQUALS: uri
  value_STARTS_WITH: uri
}

input BoxedUriLogicalFilterOption {
  AND: [BoxedUriLogicalFilterOption!]
  NOT: BoxedUriLogicalFilterOption
  OR: [BoxedUriLogicalFilterOption!]
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  value_CONTAINS: uri
  value_ENDS_WITH: uri
  value_EQUALS: uri
  value_GREATER_THAN: uri
  value_GREATER_THAN_OR_EQUALS: uri
  value_LOWER_THAN: uri
  value_LOWER_THAN_OR_EQUALS: uri
  value_NOT_EQUALS: uri
  value_STARTS_WITH: uri
}

input BoxedUriSortOption {
  extension: ExtensionSortOption
  id: SortDirection
  value: SortDirection
}

input BoxedUrlCommandInput {
  extension: [ExtensionCommandInput!]
  id: String
  value: url
}

input BoxedUrlFilterOption {
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  value_CONTAINS: url
  value_ENDS_WITH: url
  value_EQUALS: url
  value_GREATER_THAN: url
  value_GREATER_THAN_OR_EQUALS: url
  value_LOWER_THAN: url
  value_LOWER_THAN_OR_EQUALS: url
  value_NOT_EQUALS: url
  value_STARTS_WITH: url
}

input BoxedUrlLogicalFilterOption {
  AND: [BoxedUrlLogicalFilterOption!]
  NOT: BoxedUrlLogicalFilterOption
  OR: [BoxedUrlLogicalFilterOption!]
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  value_CONTAINS: url
  value_ENDS_WITH: url
  value_EQUALS: url
  value_GREATER_THAN: url
  value_GREATER_THAN_OR_EQUALS: url
  value_LOWER_THAN: url
  value_LOWER_THAN_OR_EQUALS: url
  value_NOT_EQUALS: url
  value_STARTS_WITH: url
}

input BoxedUrlSortOption {
  extension: ExtensionSortOption
  id: SortDirection
  value: SortDirection
}

input BoxedUuidCommandInput {
  extension: [ExtensionCommandInput!]
  id: String
  value: uuid
}

input BoxedUuidFilterOption {
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  value_CONTAINS: uuid
  value_ENDS_WITH: uuid
  value_EQUALS: uuid
  value_GREATER_THAN: uuid
  value_GREATER_THAN_OR_EQUALS: uuid
  value_LOWER_THAN: uuid
  value_LOWER_THAN_OR_EQUALS: uuid
  value_NOT_EQUALS: uuid
  value_STARTS_WITH: uuid
}

input BoxedUuidLogicalFilterOption {
  AND: [BoxedUuidLogicalFilterOption!]
  NOT: BoxedUuidLogicalFilterOption
  OR: [BoxedUuidLogicalFilterOption!]
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  value_CONTAINS: uuid
  value_ENDS_WITH: uuid
  value_EQUALS: uuid
  value_GREATER_THAN: uuid
  value_GREATER_THAN_OR_EQUALS: uuid
  value_LOWER_THAN: uuid
  value_LOWER_THAN_OR_EQUALS: uuid
  value_NOT_EQUALS: uuid
  value_STARTS_WITH: uuid
}

input BoxedUuidSortOption {
  extension: ExtensionSortOption
  id: SortDirection
  value: SortDirection
}

input BoxedXhtmlCommandInput {
  extension: [ExtensionCommandInput!]
  id: String
  value: xhtml
}

input BoxedXhtmlFilterOption {
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
}

input BoxedXhtmlLogicalFilterOption {
  AND: [BoxedXhtmlLogicalFilterOption!]
  NOT: BoxedXhtmlLogicalFilterOption
  OR: [BoxedXhtmlLogicalFilterOption!]
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
}

input BoxedXhtmlSortOption {
  extension: ExtensionSortOption
  id: SortDirection
  value: SortDirection
}

input CodeableConceptCommandInput {
  coding: [CodingCommandInput!]
  extension: [ExtensionCommandInput!]
  id: String
  text: String
}

input CodeableConceptFilterOption {
  coding_ALL_MATCH: CodingFilterOption
  coding_ANY_MATCH: CodingFilterOption
  coding_NONE_MATCH: CodingFilterOption
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  text_CONTAINS: String
  text_ENDS_WITH: String
  text_EQUALS: String
  text_GREATER_THAN: String
  text_GREATER_THAN_OR_EQUALS: String
  text_LOWER_THAN: String
  text_LOWER_THAN_OR_EQUALS: String
  text_NOT_EQUALS: String
  text_STARTS_WITH: String
}

input CodeableConceptLogicalFilterOption {
  AND: [CodeableConceptLogicalFilterOption!]
  NOT: CodeableConceptLogicalFilterOption
  OR: [CodeableConceptLogicalFilterOption!]
  coding_ALL_MATCH: CodingFilterOption
  coding_ANY_MATCH: CodingFilterOption
  coding_NONE_MATCH: CodingFilterOption
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  text_CONTAINS: String
  text_ENDS_WITH: String
  text_EQUALS: String
  text_GREATER_THAN: String
  text_GREATER_THAN_OR_EQUALS: String
  text_LOWER_THAN: String
  text_LOWER_THAN_OR_EQUALS: String
  text_NOT_EQUALS: String
  text_STARTS_WITH: String
}

input CodeableConceptSortOption {
  coding: CodingSortOption
  extension: ExtensionSortOption
  id: SortDirection
  text: SortDirection
}

input CodeableReferenceCommandInput {
  concept: CodeableConceptCommandInput
  extension: [ExtensionCommandInput!]
  id: String
  reference: ID
}

input CodeableReferenceFilterOption {
  concept: CodeableConceptFilterOption
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  reference: ReferenceFilterOption
}

input CodeableReferenceLogicalFilterOption {
  AND: [CodeableReferenceLogicalFilterOption!]
  NOT: CodeableReferenceLogicalFilterOption
  OR: [CodeableReferenceLogicalFilterOption!]
  concept: CodeableConceptFilterOption
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  reference: ReferenceFilterOption
}

input CodeableReferenceSortOption {
  concept: CodeableConceptSortOption
  extension: ExtensionSortOption
  id: SortDirection
  reference: ReferenceSortOption
}

input CodingCommandInput {
  code: code
  display: String
  extension: [ExtensionCommandInput!]
  id: String
  system: uri
  userSelected: Boolean
  version: String
}

input CodingFilterOption {
  code_CONTAINS: code
  code_ENDS_WITH: code
  code_EQUALS: code
  code_GREATER_THAN: code
  code_GREATER_THAN_OR_EQUALS: code
  code_LOWER_THAN: code
  code_LOWER_THAN_OR_EQUALS: code
  code_NOT_EQUALS: code
  code_STARTS_WITH: code
  display_CONTAINS: String
  display_ENDS_WITH: String
  display_EQUALS: String
  display_GREATER_THAN: String
  display_GREATER_THAN_OR_EQUALS: String
  display_LOWER_THAN: String
  display_LOWER_THAN_OR_EQUALS: String
  display_NOT_EQUALS: String
  display_STARTS_WITH: String
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  system_CONTAINS: uri
  system_ENDS_WITH: uri
  system_EQUALS: uri
  system_GREATER_THAN: uri
  system_GREATER_THAN_OR_EQUALS: uri
  system_LOWER_THAN: uri
  system_LOWER_THAN_OR_EQUALS: uri
  system_NOT_EQUALS: uri
  system_STARTS_WITH: uri
  userSelected_EQUALS: Boolean
  userSelected_NOT_EQUALS: Boolean
  version_CONTAINS: String
  version_ENDS_WITH: String
  version_EQUALS: String
  version_GREATER_THAN: String
  version_GREATER_THAN_OR_EQUALS: String
  version_LOWER_THAN: String
  version_LOWER_THAN_OR_EQUALS: String
  version_NOT_EQUALS: String
  version_STARTS_WITH: String
}

input CodingLogicalFilterOption {
  AND: [CodingLogicalFilterOption!]
  NOT: CodingLogicalFilterOption
  OR: [CodingLogicalFilterOption!]
  code_CONTAINS: code
  code_ENDS_WITH: code
  code_EQUALS: code
  code_GREATER_THAN: code
  code_GREATER_THAN_OR_EQUALS: code
  code_LOWER_THAN: code
  code_LOWER_THAN_OR_EQUALS: code
  code_NOT_EQUALS: code
  code_STARTS_WITH: code
  display_CONTAINS: String
  display_ENDS_WITH: String
  display_EQUALS: String
  display_GREATER_THAN: String
  display_GREATER_THAN_OR_EQUALS: String
  display_LOWER_THAN: String
  display_LOWER_THAN_OR_EQUALS: String
  display_NOT_EQUALS: String
  display_STARTS_WITH: String
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  system_CONTAINS: uri
  system_ENDS_WITH: uri
  system_EQUALS: uri
  system_GREATER_THAN: uri
  system_GREATER_THAN_OR_EQUALS: uri
  system_LOWER_THAN: uri
  system_LOWER_THAN_OR_EQUALS: uri
  system_NOT_EQUALS: uri
  system_STARTS_WITH: uri
  userSelected_EQUALS: Boolean
  userSelected_NOT_EQUALS: Boolean
  version_CONTAINS: String
  version_ENDS_WITH: String
  version_EQUALS: String
  version_GREATER_THAN: String
  version_GREATER_THAN_OR_EQUALS: String
  version_LOWER_THAN: String
  version_LOWER_THAN_OR_EQUALS: String
  version_NOT_EQUALS: String
  version_STARTS_WITH: String
}

input CodingSortOption {
  code: SortDirection
  display: SortDirection
  extension: ExtensionSortOption
  id: SortDirection
  system: SortDirection
  userSelected: SortDirection
  version: SortDirection
}

input CommandHandlerDefinitionCommandInput {
  creationalPolicy: code
  eventFactory: [CommandHandlerDefinitionEventFactoryCommandInput!]
  extension: [ExtensionCommandInput!]
  id: String
  operation: ID
}

input CommandHandlerDefinitionEventFactoryCommandInput {
  event: ID
  extension: [ExtensionCommandInput!]
  id: String
  modification: [CommandHandlerDefinitionEventFactoryModificationCommandInput!]
  modifierExtension: [ExtensionCommandInput!]
}

input CommandHandlerDefinitionEventFactoryFilterOption {
  event: EventMessageDefinitionFilterOption
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  modification_ALL_MATCH: CommandHandlerDefinitionEventFactoryModificationFilterOption
  modification_ANY_MATCH: CommandHandlerDefinitionEventFactoryModificationFilterOption
  modification_NONE_MATCH: CommandHandlerDefinitionEventFactoryModificationFilterOption
  modifierExtension_ALL_MATCH: ExtensionFilterOption
  modifierExtension_ANY_MATCH: ExtensionFilterOption
  modifierExtension_NONE_MATCH: ExtensionFilterOption
}

input CommandHandlerDefinitionEventFactoryLogicalFilterOption {
  AND: [CommandHandlerDefinitionEventFactoryLogicalFilterOption!]
  NOT: CommandHandlerDefinitionEventFactoryLogicalFilterOption
  OR: [CommandHandlerDefinitionEventFactoryLogicalFilterOption!]
  event: EventMessageDefinitionFilterOption
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  modification_ALL_MATCH: CommandHandlerDefinitionEventFactoryModificationFilterOption
  modification_ANY_MATCH: CommandHandlerDefinitionEventFactoryModificationFilterOption
  modification_NONE_MATCH: CommandHandlerDefinitionEventFactoryModificationFilterOption
  modifierExtension_ALL_MATCH: ExtensionFilterOption
  modifierExtension_ANY_MATCH: ExtensionFilterOption
  modifierExtension_NONE_MATCH: ExtensionFilterOption
}

input CommandHandlerDefinitionEventFactoryModificationCommandInput {
  destinationIndexParameterName: String
  extension: [ExtensionCommandInput!]
  id: String
  inputValueParameterName: String
  kind: code!
  modificationPath: String!
  modifierExtension: [ExtensionCommandInput!]
}

input CommandHandlerDefinitionEventFactoryModificationFilterOption {
  destinationIndexParameterName_CONTAINS: String
  destinationIndexParameterName_ENDS_WITH: String
  destinationIndexParameterName_EQUALS: String
  destinationIndexParameterName_GREATER_THAN: String
  destinationIndexParameterName_GREATER_THAN_OR_EQUALS: String
  destinationIndexParameterName_LOWER_THAN: String
  destinationIndexParameterName_LOWER_THAN_OR_EQUALS: String
  destinationIndexParameterName_NOT_EQUALS: String
  destinationIndexParameterName_STARTS_WITH: String
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  inputValueParameterName_CONTAINS: String
  inputValueParameterName_ENDS_WITH: String
  inputValueParameterName_EQUALS: String
  inputValueParameterName_GREATER_THAN: String
  inputValueParameterName_GREATER_THAN_OR_EQUALS: String
  inputValueParameterName_LOWER_THAN: String
  inputValueParameterName_LOWER_THAN_OR_EQUALS: String
  inputValueParameterName_NOT_EQUALS: String
  inputValueParameterName_STARTS_WITH: String
  kind_CONTAINS: code
  kind_ENDS_WITH: code
  kind_EQUALS: code
  kind_GREATER_THAN: code
  kind_GREATER_THAN_OR_EQUALS: code
  kind_LOWER_THAN: code
  kind_LOWER_THAN_OR_EQUALS: code
  kind_NOT_EQUALS: code
  kind_STARTS_WITH: code
  modificationPath_CONTAINS: String
  modificationPath_ENDS_WITH: String
  modificationPath_EQUALS: String
  modificationPath_GREATER_THAN: String
  modificationPath_GREATER_THAN_OR_EQUALS: String
  modificationPath_LOWER_THAN: String
  modificationPath_LOWER_THAN_OR_EQUALS: String
  modificationPath_NOT_EQUALS: String
  modificationPath_STARTS_WITH: String
  modifierExtension_ALL_MATCH: ExtensionFilterOption
  modifierExtension_ANY_MATCH: ExtensionFilterOption
  modifierExtension_NONE_MATCH: ExtensionFilterOption
}

input CommandHandlerDefinitionEventFactoryModificationLogicalFilterOption {
  AND: [CommandHandlerDefinitionEventFactoryModificationLogicalFilterOption!]
  NOT: CommandHandlerDefinitionEventFactoryModificationLogicalFilterOption
  OR: [CommandHandlerDefinitionEventFactoryModificationLogicalFilterOption!]
  destinationIndexParameterName_CONTAINS: String
  destinationIndexParameterName_ENDS_WITH: String
  destinationIndexParameterName_EQUALS: String
  destinationIndexParameterName_GREATER_THAN: String
  destinationIndexParameterName_GREATER_THAN_OR_EQUALS: String
  destinationIndexParameterName_LOWER_THAN: String
  destinationIndexParameterName_LOWER_THAN_OR_EQUALS: String
  destinationIndexParameterName_NOT_EQUALS: String
  destinationIndexParameterName_STARTS_WITH: String
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  inputValueParameterName_CONTAINS: String
  inputValueParameterName_ENDS_WITH: String
  inputValueParameterName_EQUALS: String
  inputValueParameterName_GREATER_THAN: String
  inputValueParameterName_GREATER_THAN_OR_EQUALS: String
  inputValueParameterName_LOWER_THAN: String
  inputValueParameterName_LOWER_THAN_OR_EQUALS: String
  inputValueParameterName_NOT_EQUALS: String
  inputValueParameterName_STARTS_WITH: String
  kind_CONTAINS: code
  kind_ENDS_WITH: code
  kind_EQUALS: code
  kind_GREATER_THAN: code
  kind_GREATER_THAN_OR_EQUALS: code
  kind_LOWER_THAN: code
  kind_LOWER_THAN_OR_EQUALS: code
  kind_NOT_EQUALS: code
  kind_STARTS_WITH: code
  modificationPath_CONTAINS: String
  modificationPath_ENDS_WITH: String
  modificationPath_EQUALS: String
  modificationPath_GREATER_THAN: String
  modificationPath_GREATER_THAN_OR_EQUALS: String
  modificationPath_LOWER_THAN: String
  modificationPath_LOWER_THAN_OR_EQUALS: String
  modificationPath_NOT_EQUALS: String
  modificationPath_STARTS_WITH: String
  modifierExtension_ALL_MATCH: ExtensionFilterOption
  modifierExtension_ANY_MATCH: ExtensionFilterOption
  modifierExtension_NONE_MATCH: ExtensionFilterOption
}

input CommandHandlerDefinitionEventFactoryModificationSortOption {
  destinationIndexParameterName: SortDirection
  extension: ExtensionSortOption
  id: SortDirection
  inputValueParameterName: SortDirection
  kind: SortDirection
  modificationPath: SortDirection
  modifierExtension: ExtensionSortOption
}

input CommandHandlerDefinitionEventFactorySortOption {
  event: EventMessageDefinitionSortOption
  extension: ExtensionSortOption
  id: SortDirection
  modification: CommandHandlerDefinitionEventFactoryModificationSortOption
  modifierExtension: ExtensionSortOption
}

input CommandHandlerDefinitionFilterOption {
  creationalPolicy_CONTAINS: code
  creationalPolicy_ENDS_WITH: code
  creationalPolicy_EQUALS: code
  creationalPolicy_GREATER_THAN: code
  creationalPolicy_GREATER_THAN_OR_EQUALS: code
  creationalPolicy_LOWER_THAN: code
  creationalPolicy_LOWER_THAN_OR_EQUALS: code
  creationalPolicy_NOT_EQUALS: code
  creationalPolicy_STARTS_WITH: code
  eventFactory_ALL_MATCH: CommandHandlerDefinitionEventFactoryFilterOption
  eventFactory_ANY_MATCH: CommandHandlerDefinitionEventFactoryFilterOption
  eventFactory_NONE_MATCH: CommandHandlerDefinitionEventFactoryFilterOption
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  operation: OperationDefinitionFilterOption
}

input CommandHandlerDefinitionLogicalFilterOption {
  AND: [CommandHandlerDefinitionLogicalFilterOption!]
  NOT: CommandHandlerDefinitionLogicalFilterOption
  OR: [CommandHandlerDefinitionLogicalFilterOption!]
  creationalPolicy_CONTAINS: code
  creationalPolicy_ENDS_WITH: code
  creationalPolicy_EQUALS: code
  creationalPolicy_GREATER_THAN: code
  creationalPolicy_GREATER_THAN_OR_EQUALS: code
  creationalPolicy_LOWER_THAN: code
  creationalPolicy_LOWER_THAN_OR_EQUALS: code
  creationalPolicy_NOT_EQUALS: code
  creationalPolicy_STARTS_WITH: code
  eventFactory_ALL_MATCH: CommandHandlerDefinitionEventFactoryFilterOption
  eventFactory_ANY_MATCH: CommandHandlerDefinitionEventFactoryFilterOption
  eventFactory_NONE_MATCH: CommandHandlerDefinitionEventFactoryFilterOption
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  operation: OperationDefinitionFilterOption
}

input CommandHandlerDefinitionSortOption {
  creationalPolicy: SortDirection
  eventFactory: CommandHandlerDefinitionEventFactorySortOption
  extension: ExtensionSortOption
  id: SortDirection
  operation: OperationDefinitionSortOption
}

input ContactDetailCommandInput {
  extension: [ExtensionCommandInput!]
  id: String
  name: String
  telecom: [ContactPointCommandInput!]
}

input ContactDetailFilterOption {
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  name_CONTAINS: String
  name_ENDS_WITH: String
  name_EQUALS: String
  name_GREATER_THAN: String
  name_GREATER_THAN_OR_EQUALS: String
  name_LOWER_THAN: String
  name_LOWER_THAN_OR_EQUALS: String
  name_NOT_EQUALS: String
  name_STARTS_WITH: String
  telecom_ALL_MATCH: ContactPointFilterOption
  telecom_ANY_MATCH: ContactPointFilterOption
  telecom_NONE_MATCH: ContactPointFilterOption
}

input ContactDetailLogicalFilterOption {
  AND: [ContactDetailLogicalFilterOption!]
  NOT: ContactDetailLogicalFilterOption
  OR: [ContactDetailLogicalFilterOption!]
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  name_CONTAINS: String
  name_ENDS_WITH: String
  name_EQUALS: String
  name_GREATER_THAN: String
  name_GREATER_THAN_OR_EQUALS: String
  name_LOWER_THAN: String
  name_LOWER_THAN_OR_EQUALS: String
  name_NOT_EQUALS: String
  name_STARTS_WITH: String
  telecom_ALL_MATCH: ContactPointFilterOption
  telecom_ANY_MATCH: ContactPointFilterOption
  telecom_NONE_MATCH: ContactPointFilterOption
}

input ContactDetailSortOption {
  extension: ExtensionSortOption
  id: SortDirection
  name: SortDirection
  telecom: ContactPointSortOption
}

input ContactPointCommandInput {
  extension: [ExtensionCommandInput!]
  id: String
  period: PeriodCommandInput
  rank: positiveInt
  system: code
  use: code
  value: String
}

input ContactPointFilterOption {
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  period: PeriodFilterOption
  rank_EQUALS: positiveInt
  rank_GREATER_THAN: positiveInt
  rank_GREATER_THAN_OR_EQUALS: positiveInt
  rank_LOWER_THAN: positiveInt
  rank_LOWER_THAN_OR_EQUALS: positiveInt
  rank_NOT_EQUALS: positiveInt
  system_CONTAINS: code
  system_ENDS_WITH: code
  system_EQUALS: code
  system_GREATER_THAN: code
  system_GREATER_THAN_OR_EQUALS: code
  system_LOWER_THAN: code
  system_LOWER_THAN_OR_EQUALS: code
  system_NOT_EQUALS: code
  system_STARTS_WITH: code
  use_CONTAINS: code
  use_ENDS_WITH: code
  use_EQUALS: code
  use_GREATER_THAN: code
  use_GREATER_THAN_OR_EQUALS: code
  use_LOWER_THAN: code
  use_LOWER_THAN_OR_EQUALS: code
  use_NOT_EQUALS: code
  use_STARTS_WITH: code
  value_CONTAINS: String
  value_ENDS_WITH: String
  value_EQUALS: String
  value_GREATER_THAN: String
  value_GREATER_THAN_OR_EQUALS: String
  value_LOWER_THAN: String
  value_LOWER_THAN_OR_EQUALS: String
  value_NOT_EQUALS: String
  value_STARTS_WITH: String
}

input ContactPointLogicalFilterOption {
  AND: [ContactPointLogicalFilterOption!]
  NOT: ContactPointLogicalFilterOption
  OR: [ContactPointLogicalFilterOption!]
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  period: PeriodFilterOption
  rank_EQUALS: positiveInt
  rank_GREATER_THAN: positiveInt
  rank_GREATER_THAN_OR_EQUALS: positiveInt
  rank_LOWER_THAN: positiveInt
  rank_LOWER_THAN_OR_EQUALS: positiveInt
  rank_NOT_EQUALS: positiveInt
  system_CONTAINS: code
  system_ENDS_WITH: code
  system_EQUALS: code
  system_GREATER_THAN: code
  system_GREATER_THAN_OR_EQUALS: code
  system_LOWER_THAN: code
  system_LOWER_THAN_OR_EQUALS: code
  system_NOT_EQUALS: code
  system_STARTS_WITH: code
  use_CONTAINS: code
  use_ENDS_WITH: code
  use_EQUALS: code
  use_GREATER_THAN: code
  use_GREATER_THAN_OR_EQUALS: code
  use_LOWER_THAN: code
  use_LOWER_THAN_OR_EQUALS: code
  use_NOT_EQUALS: code
  use_STARTS_WITH: code
  value_CONTAINS: String
  value_ENDS_WITH: String
  value_EQUALS: String
  value_GREATER_THAN: String
  value_GREATER_THAN_OR_EQUALS: String
  value_LOWER_THAN: String
  value_LOWER_THAN_OR_EQUALS: String
  value_NOT_EQUALS: String
  value_STARTS_WITH: String
}

input ContactPointSortOption {
  extension: ExtensionSortOption
  id: SortDirection
  period: PeriodSortOption
  rank: SortDirection
  system: SortDirection
  use: SortDirection
  value: SortDirection
}

"Generated command for creating AggregateDefinition with all fields."
input CreateAggregateDefinitionCommandPayloadInput {
  command: [CommandHandlerDefinitionCommandInput!]
  description: String
  implicitRules: uri
  language: code
  meta: MetaCommandInput
  name: String
  structure: ID!
}

"Generated command for creating EventMessageDefinition with all fields."
input CreateEventMessageDefinitionCommandPayloadInput {
  description: String
  implicitRules: uri
  language: code
  meta: MetaCommandInput
  name: String
  type: ID
}

"Generated command for creating OperationDefinition with all fields."
input CreateOperationDefinitionCommandPayloadInput {
  affectsState: Boolean
  base: canonical
  code: code!
  comment: markdown
  contact: [String!]
  contained: [ID!]
  date: dateTime
  description: markdown
  experimental: Boolean
  extension: [ExtensionCommandInput!]
  implicitRules: uri
  inputProfile: canonical
  instance: Boolean!
  jurisdiction: [CodeableConceptCommandInput!]
  kind: code!
  language: code
  meta: MetaCommandInput
  modifierExtension: [ExtensionCommandInput!]
  name: String!
  outputProfile: canonical
  overload: [OperationDefinitionOverloadCommandInput!]
  parameter: [OperationDefinitionParameterCommandInput!]
  publisher: String
  purpose: markdown
  resource: [code!]
  status: code!
  system: Boolean!
  text: NarrativeCommandInput
  title: String
  type: Boolean!
  url: uri
  useContext: [UsageContextCommandInput!]
  version: String
}

"Generated command for creating OperationOutcome with all fields."
input CreateOperationOutcomeCommandPayloadInput {
  contained: [ID!]
  extension: [ExtensionCommandInput!]
  implicitRules: uri
  issue: [OperationOutcomeIssueCommandInput!]!
  language: code
  meta: MetaCommandInput
  modifierExtension: [ExtensionCommandInput!]
  text: NarrativeCommandInput
}

"Generated command for creating Parameters with all fields."
input CreateParametersCommandPayloadInput {
  implicitRules: uri
  language: code
  meta: MetaCommandInput
  parameter: [ParametersParameterCommandInput!]
}

"Generated command for creating StructureDefinition with all fields."
input CreateStructureDefinitionCommandPayloadInput {
  abstract: Boolean!
  baseDefinition: CreateStructureDefinitionCommandPayloadInputBaseDefinition
  contained: [ID!]
  context: [StructureDefinitionContextCommandInput!]
  contextInvariant: [String!]
  copyright: markdown
  date: dateTime
  derivation: code
  description: markdown
  differential: StructureDefinitionDifferentialCommandInput
  experimental: Boolean
  extension: [ExtensionCommandInput!]
  fhirVersion: code
  identifier: [IdentifierCommandInput!]
  implicitRules: uri
  jurisdiction: [CodeableConceptCommandInput!]
  keyword: [CodingCommandInput!]
  kind: code!
  language: code
  mapping: [StructureDefinitionMappingCommandInput!]
  meta: MetaCommandInput
  modifierExtension: [ExtensionCommandInput!]
  name: String!
  publisher: String
  purpose: markdown
  snapshot: StructureDefinitionSnapshotCommandInput
  status: code!
  text: NarrativeCommandInput
  title: String
  type: uri!
  url: uri!
  useContext: [UsageContextCommandInput!]
  version: String
}

"Generated input object which works as a union type, only exactly one field should be specified."
input CreateStructureDefinitionCommandPayloadInputBaseDefinition {
  StructureDefinition: ID
  canonical: canonical
}

"Generated command for creating ValueSet with all fields."
input CreateValueSetCommandPayloadInput {
  compose: ValueSetComposeCommandInput
  contact: [ContactDetailCommandInput!]
  contained: [ID!]
  copyright: markdown
  date: dateTime
  description: markdown
  expansion: ValueSetExpansionCommandInput
  experimental: Boolean
  extension: [ExtensionCommandInput!]
  identifier: [IdentifierCommandInput!]
  immutable: Boolean
  implicitRules: uri
  jurisdiction: [CodeableConceptCommandInput!]
  language: code
  meta: MetaCommandInput
  modifierExtension: [ExtensionCommandInput!]
  name: String
  publisher: String
  purpose: markdown
  status: code!
  text: NarrativeCommandInput
  title: String
  url: uri
  useContext: [UsageContextCommandInput!]
  version: String
}

input DataRequirementCodeFilterCommandInput {
  code: [CodingCommandInput!]
  extension: [ExtensionCommandInput!]
  id: String
  path: String
  searchParam: String
  valueSet: canonical
}

input DataRequirementCodeFilterFilterOption {
  code_ALL_MATCH: CodingFilterOption
  code_ANY_MATCH: CodingFilterOption
  code_NONE_MATCH: CodingFilterOption
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  path_CONTAINS: String
  path_ENDS_WITH: String
  path_EQUALS: String
  path_GREATER_THAN: String
  path_GREATER_THAN_OR_EQUALS: String
  path_LOWER_THAN: String
  path_LOWER_THAN_OR_EQUALS: String
  path_NOT_EQUALS: String
  path_STARTS_WITH: String
  searchParam_CONTAINS: String
  searchParam_ENDS_WITH: String
  searchParam_EQUALS: String
  searchParam_GREATER_THAN: String
  searchParam_GREATER_THAN_OR_EQUALS: String
  searchParam_LOWER_THAN: String
  searchParam_LOWER_THAN_OR_EQUALS: String
  searchParam_NOT_EQUALS: String
  searchParam_STARTS_WITH: String
  valueSet_CONTAINS: canonical
  valueSet_ENDS_WITH: canonical
  valueSet_EQUALS: canonical
  valueSet_GREATER_THAN: canonical
  valueSet_GREATER_THAN_OR_EQUALS: canonical
  valueSet_LOWER_THAN: canonical
  valueSet_LOWER_THAN_OR_EQUALS: canonical
  valueSet_NOT_EQUALS: canonical
  valueSet_STARTS_WITH: canonical
}

input DataRequirementCodeFilterLogicalFilterOption {
  AND: [DataRequirementCodeFilterLogicalFilterOption!]
  NOT: DataRequirementCodeFilterLogicalFilterOption
  OR: [DataRequirementCodeFilterLogicalFilterOption!]
  code_ALL_MATCH: CodingFilterOption
  code_ANY_MATCH: CodingFilterOption
  code_NONE_MATCH: CodingFilterOption
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  path_CONTAINS: String
  path_ENDS_WITH: String
  path_EQUALS: String
  path_GREATER_THAN: String
  path_GREATER_THAN_OR_EQUALS: String
  path_LOWER_THAN: String
  path_LOWER_THAN_OR_EQUALS: String
  path_NOT_EQUALS: String
  path_STARTS_WITH: String
  searchParam_CONTAINS: String
  searchParam_ENDS_WITH: String
  searchParam_EQUALS: String
  searchParam_GREATER_THAN: String
  searchParam_GREATER_THAN_OR_EQUALS: String
  searchParam_LOWER_THAN: String
  searchParam_LOWER_THAN_OR_EQUALS: String
  searchParam_NOT_EQUALS: String
  searchParam_STARTS_WITH: String
  valueSet_CONTAINS: canonical
  valueSet_ENDS_WITH: canonical
  valueSet_EQUALS: canonical
  valueSet_GREATER_THAN: canonical
  valueSet_GREATER_THAN_OR_EQUALS: canonical
  valueSet_LOWER_THAN: canonical
  valueSet_LOWER_THAN_OR_EQUALS: canonical
  valueSet_NOT_EQUALS: canonical
  valueSet_STARTS_WITH: canonical
}

input DataRequirementCodeFilterSortOption {
  code: CodingSortOption
  extension: ExtensionSortOption
  id: SortDirection
  path: SortDirection
  searchParam: SortDirection
  valueSet: SortDirection
}

input DataRequirementCommandInput {
  codeFilter: [DataRequirementCodeFilterCommandInput!]
  dateFilter: [DataRequirementDateFilterCommandInput!]
  extension: [ExtensionCommandInput!]
  id: String
  limit: positiveInt
  mustSupport: [String!]
  profile: [canonical!]
  sort: [DataRequirementSortCommandInput!]
  subject: CodeableConceptCommandInput
  type: code!
}

input DataRequirementDateFilterCommandInput {
  extension: [ExtensionCommandInput!]
  id: String
  path: String
  searchParam: String
  value: DataRequirementDateFilterCommandInputValue
}

"Generated Input Type, which works as a Union type. Only one field should be filled."
input DataRequirementDateFilterCommandInputValue {
  Duration: DurationCommandInput
  Period: PeriodCommandInput
  dateTime: dateTime
}

input DataRequirementDateFilterFilterOption {
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  path_CONTAINS: String
  path_ENDS_WITH: String
  path_EQUALS: String
  path_GREATER_THAN: String
  path_GREATER_THAN_OR_EQUALS: String
  path_LOWER_THAN: String
  path_LOWER_THAN_OR_EQUALS: String
  path_NOT_EQUALS: String
  path_STARTS_WITH: String
  searchParam_CONTAINS: String
  searchParam_ENDS_WITH: String
  searchParam_EQUALS: String
  searchParam_GREATER_THAN: String
  searchParam_GREATER_THAN_OR_EQUALS: String
  searchParam_LOWER_THAN: String
  searchParam_LOWER_THAN_OR_EQUALS: String
  searchParam_NOT_EQUALS: String
  searchParam_STARTS_WITH: String
}

input DataRequirementDateFilterLogicalFilterOption {
  AND: [DataRequirementDateFilterLogicalFilterOption!]
  NOT: DataRequirementDateFilterLogicalFilterOption
  OR: [DataRequirementDateFilterLogicalFilterOption!]
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  path_CONTAINS: String
  path_ENDS_WITH: String
  path_EQUALS: String
  path_GREATER_THAN: String
  path_GREATER_THAN_OR_EQUALS: String
  path_LOWER_THAN: String
  path_LOWER_THAN_OR_EQUALS: String
  path_NOT_EQUALS: String
  path_STARTS_WITH: String
  searchParam_CONTAINS: String
  searchParam_ENDS_WITH: String
  searchParam_EQUALS: String
  searchParam_GREATER_THAN: String
  searchParam_GREATER_THAN_OR_EQUALS: String
  searchParam_LOWER_THAN: String
  searchParam_LOWER_THAN_OR_EQUALS: String
  searchParam_NOT_EQUALS: String
  searchParam_STARTS_WITH: String
}

input DataRequirementDateFilterSortOption {
  extension: ExtensionSortOption
  id: SortDirection
  path: SortDirection
  searchParam: SortDirection
}

input DataRequirementFilterOption {
  codeFilter_ALL_MATCH: DataRequirementCodeFilterFilterOption
  codeFilter_ANY_MATCH: DataRequirementCodeFilterFilterOption
  codeFilter_NONE_MATCH: DataRequirementCodeFilterFilterOption
  dateFilter_ALL_MATCH: DataRequirementDateFilterFilterOption
  dateFilter_ANY_MATCH: DataRequirementDateFilterFilterOption
  dateFilter_NONE_MATCH: DataRequirementDateFilterFilterOption
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  limit_EQUALS: positiveInt
  limit_GREATER_THAN: positiveInt
  limit_GREATER_THAN_OR_EQUALS: positiveInt
  limit_LOWER_THAN: positiveInt
  limit_LOWER_THAN_OR_EQUALS: positiveInt
  limit_NOT_EQUALS: positiveInt
  mustSupport_ALL_MATCH: DataRequirementMustSupportChildFilterOption
  mustSupport_ANY_MATCH: DataRequirementMustSupportChildFilterOption
  mustSupport_EQUALS: [String!]
  mustSupport_NONE_MATCH: DataRequirementMustSupportChildFilterOption
  mustSupport_NOT_EQUALS: [String!]
  profile_ALL_MATCH: DataRequirementProfileChildFilterOption
  profile_ANY_MATCH: DataRequirementProfileChildFilterOption
  profile_EQUALS: [canonical!]
  profile_NONE_MATCH: DataRequirementProfileChildFilterOption
  profile_NOT_EQUALS: [canonical!]
  sort_ALL_MATCH: DataRequirementSortFilterOption
  sort_ANY_MATCH: DataRequirementSortFilterOption
  sort_NONE_MATCH: DataRequirementSortFilterOption
  subject: CodeableConceptFilterOption
  type_CONTAINS: code
  type_ENDS_WITH: code
  type_EQUALS: code
  type_GREATER_THAN: code
  type_GREATER_THAN_OR_EQUALS: code
  type_LOWER_THAN: code
  type_LOWER_THAN_OR_EQUALS: code
  type_NOT_EQUALS: code
  type_STARTS_WITH: code
}

input DataRequirementLogicalFilterOption {
  AND: [DataRequirementLogicalFilterOption!]
  NOT: DataRequirementLogicalFilterOption
  OR: [DataRequirementLogicalFilterOption!]
  codeFilter_ALL_MATCH: DataRequirementCodeFilterFilterOption
  codeFilter_ANY_MATCH: DataRequirementCodeFilterFilterOption
  codeFilter_NONE_MATCH: DataRequirementCodeFilterFilterOption
  dateFilter_ALL_MATCH: DataRequirementDateFilterFilterOption
  dateFilter_ANY_MATCH: DataRequirementDateFilterFilterOption
  dateFilter_NONE_MATCH: DataRequirementDateFilterFilterOption
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  limit_EQUALS: positiveInt
  limit_GREATER_THAN: positiveInt
  limit_GREATER_THAN_OR_EQUALS: positiveInt
  limit_LOWER_THAN: positiveInt
  limit_LOWER_THAN_OR_EQUALS: positiveInt
  limit_NOT_EQUALS: positiveInt
  mustSupport_ALL_MATCH: DataRequirementMustSupportChildFilterOption
  mustSupport_ANY_MATCH: DataRequirementMustSupportChildFilterOption
  mustSupport_EQUALS: [String!]
  mustSupport_NONE_MATCH: DataRequirementMustSupportChildFilterOption
  mustSupport_NOT_EQUALS: [String!]
  profile_ALL_MATCH: DataRequirementProfileChildFilterOption
  profile_ANY_MATCH: DataRequirementProfileChildFilterOption
  profile_EQUALS: [canonical!]
  profile_NONE_MATCH: DataRequirementProfileChildFilterOption
  profile_NOT_EQUALS: [canonical!]
  sort_ALL_MATCH: DataRequirementSortFilterOption
  sort_ANY_MATCH: DataRequirementSortFilterOption
  sort_NONE_MATCH: DataRequirementSortFilterOption
  subject: CodeableConceptFilterOption
  type_CONTAINS: code
  type_ENDS_WITH: code
  type_EQUALS: code
  type_GREATER_THAN: code
  type_GREATER_THAN_OR_EQUALS: code
  type_LOWER_THAN: code
  type_LOWER_THAN_OR_EQUALS: code
  type_NOT_EQUALS: code
  type_STARTS_WITH: code
}

input DataRequirementMustSupportChildFilterOption {
  CONTAINS: String
  ENDS_WITH: String
  EQUALS: String
  GREATER_THAN: String
  GREATER_THAN_OR_EQUALS: String
  LOWER_THAN: String
  LOWER_THAN_OR_EQUALS: String
  NOT_EQUALS: String
  STARTS_WITH: String
}

input DataRequirementProfileChildFilterOption {
  CONTAINS: canonical
  ENDS_WITH: canonical
  EQUALS: canonical
  GREATER_THAN: canonical
  GREATER_THAN_OR_EQUALS: canonical
  LOWER_THAN: canonical
  LOWER_THAN_OR_EQUALS: canonical
  NOT_EQUALS: canonical
  STARTS_WITH: canonical
}

input DataRequirementSortCommandInput {
  direction: code!
  extension: [ExtensionCommandInput!]
  id: String
  path: String!
}

input DataRequirementSortFilterOption {
  direction_CONTAINS: code
  direction_ENDS_WITH: code
  direction_EQUALS: code
  direction_GREATER_THAN: code
  direction_GREATER_THAN_OR_EQUALS: code
  direction_LOWER_THAN: code
  direction_LOWER_THAN_OR_EQUALS: code
  direction_NOT_EQUALS: code
  direction_STARTS_WITH: code
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  path_CONTAINS: String
  path_ENDS_WITH: String
  path_EQUALS: String
  path_GREATER_THAN: String
  path_GREATER_THAN_OR_EQUALS: String
  path_LOWER_THAN: String
  path_LOWER_THAN_OR_EQUALS: String
  path_NOT_EQUALS: String
  path_STARTS_WITH: String
}

input DataRequirementSortLogicalFilterOption {
  AND: [DataRequirementSortLogicalFilterOption!]
  NOT: DataRequirementSortLogicalFilterOption
  OR: [DataRequirementSortLogicalFilterOption!]
  direction_CONTAINS: code
  direction_ENDS_WITH: code
  direction_EQUALS: code
  direction_GREATER_THAN: code
  direction_GREATER_THAN_OR_EQUALS: code
  direction_LOWER_THAN: code
  direction_LOWER_THAN_OR_EQUALS: code
  direction_NOT_EQUALS: code
  direction_STARTS_WITH: code
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  path_CONTAINS: String
  path_ENDS_WITH: String
  path_EQUALS: String
  path_GREATER_THAN: String
  path_GREATER_THAN_OR_EQUALS: String
  path_LOWER_THAN: String
  path_LOWER_THAN_OR_EQUALS: String
  path_NOT_EQUALS: String
  path_STARTS_WITH: String
}

input DataRequirementSortOption {
  codeFilter: DataRequirementCodeFilterSortOption
  dateFilter: DataRequirementDateFilterSortOption
  extension: ExtensionSortOption
  id: SortDirection
  limit: SortDirection
  mustSupport: SortDirection
  profile: SortDirection
  sort: DataRequirementSortSortOption
  subject: CodeableConceptSortOption
  type: SortDirection
}

input DataRequirementSortSortOption {
  direction: SortDirection
  extension: ExtensionSortOption
  id: SortDirection
  path: SortDirection
}

input DataTypeCommandInput {
  extension: [ExtensionCommandInput!]
  id: String
}

input DataTypeFilterOption {
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
}

input DataTypeLogicalFilterOption {
  AND: [DataTypeLogicalFilterOption!]
  NOT: DataTypeLogicalFilterOption
  OR: [DataTypeLogicalFilterOption!]
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
}

input DataTypeSortOption {
  extension: ExtensionSortOption
  id: SortDirection
}

input DomainResourceFilterOption {
  contained_ALL_MATCH: ResourceFilterOption
  contained_ANY_MATCH: ResourceFilterOption
  contained_NONE_MATCH: ResourceFilterOption
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  implicitRules_CONTAINS: uri
  implicitRules_ENDS_WITH: uri
  implicitRules_EQUALS: uri
  implicitRules_GREATER_THAN: uri
  implicitRules_GREATER_THAN_OR_EQUALS: uri
  implicitRules_LOWER_THAN: uri
  implicitRules_LOWER_THAN_OR_EQUALS: uri
  implicitRules_NOT_EQUALS: uri
  implicitRules_STARTS_WITH: uri
  language_CONTAINS: code
  language_ENDS_WITH: code
  language_EQUALS: code
  language_GREATER_THAN: code
  language_GREATER_THAN_OR_EQUALS: code
  language_LOWER_THAN: code
  language_LOWER_THAN_OR_EQUALS: code
  language_NOT_EQUALS: code
  language_STARTS_WITH: code
  meta: MetaFilterOption
  modifierExtension_ALL_MATCH: ExtensionFilterOption
  modifierExtension_ANY_MATCH: ExtensionFilterOption
  modifierExtension_NONE_MATCH: ExtensionFilterOption
  text: NarrativeFilterOption
}

input DomainResourceLogicalFilterOption {
  AND: [DomainResourceLogicalFilterOption!]
  NOT: DomainResourceLogicalFilterOption
  OR: [DomainResourceLogicalFilterOption!]
  contained_ALL_MATCH: ResourceFilterOption
  contained_ANY_MATCH: ResourceFilterOption
  contained_NONE_MATCH: ResourceFilterOption
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  implicitRules_CONTAINS: uri
  implicitRules_ENDS_WITH: uri
  implicitRules_EQUALS: uri
  implicitRules_GREATER_THAN: uri
  implicitRules_GREATER_THAN_OR_EQUALS: uri
  implicitRules_LOWER_THAN: uri
  implicitRules_LOWER_THAN_OR_EQUALS: uri
  implicitRules_NOT_EQUALS: uri
  implicitRules_STARTS_WITH: uri
  language_CONTAINS: code
  language_ENDS_WITH: code
  language_EQUALS: code
  language_GREATER_THAN: code
  language_GREATER_THAN_OR_EQUALS: code
  language_LOWER_THAN: code
  language_LOWER_THAN_OR_EQUALS: code
  language_NOT_EQUALS: code
  language_STARTS_WITH: code
  meta: MetaFilterOption
  modifierExtension_ALL_MATCH: ExtensionFilterOption
  modifierExtension_ANY_MATCH: ExtensionFilterOption
  modifierExtension_NONE_MATCH: ExtensionFilterOption
  text: NarrativeFilterOption
}

input DomainResourceSortOption {
  contained: ResourceSortOption
  extension: ExtensionSortOption
  id: SortDirection
  implicitRules: SortDirection
  language: SortDirection
  meta: MetaSortOption
  modifierExtension: ExtensionSortOption
  text: NarrativeSortOption
}

input DurationCommandInput {
  code: code
  comparator: code
  extension: [ExtensionCommandInput!]
  id: String
  system: uri
  unit: String
  value: Float
}

input DurationFilterOption {
  code_CONTAINS: code
  code_ENDS_WITH: code
  code_EQUALS: code
  code_GREATER_THAN: code
  code_GREATER_THAN_OR_EQUALS: code
  code_LOWER_THAN: code
  code_LOWER_THAN_OR_EQUALS: code
  code_NOT_EQUALS: code
  code_STARTS_WITH: code
  comparator_CONTAINS: code
  comparator_ENDS_WITH: code
  comparator_EQUALS: code
  comparator_GREATER_THAN: code
  comparator_GREATER_THAN_OR_EQUALS: code
  comparator_LOWER_THAN: code
  comparator_LOWER_THAN_OR_EQUALS: code
  comparator_NOT_EQUALS: code
  comparator_STARTS_WITH: code
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  system_CONTAINS: uri
  system_ENDS_WITH: uri
  system_EQUALS: uri
  system_GREATER_THAN: uri
  system_GREATER_THAN_OR_EQUALS: uri
  system_LOWER_THAN: uri
  system_LOWER_THAN_OR_EQUALS: uri
  system_NOT_EQUALS: uri
  system_STARTS_WITH: uri
  unit_CONTAINS: String
  unit_ENDS_WITH: String
  unit_EQUALS: String
  unit_GREATER_THAN: String
  unit_GREATER_THAN_OR_EQUALS: String
  unit_LOWER_THAN: String
  unit_LOWER_THAN_OR_EQUALS: String
  unit_NOT_EQUALS: String
  unit_STARTS_WITH: String
  value_EQUALS: Float
  value_GREATER_THAN: Float
  value_GREATER_THAN_OR_EQUALS: Float
  value_LOWER_THAN: Float
  value_LOWER_THAN_OR_EQUALS: Float
  value_NOT_EQUALS: Float
}

input DurationLogicalFilterOption {
  AND: [DurationLogicalFilterOption!]
  NOT: DurationLogicalFilterOption
  OR: [DurationLogicalFilterOption!]
  code_CONTAINS: code
  code_ENDS_WITH: code
  code_EQUALS: code
  code_GREATER_THAN: code
  code_GREATER_THAN_OR_EQUALS: code
  code_LOWER_THAN: code
  code_LOWER_THAN_OR_EQUALS: code
  code_NOT_EQUALS: code
  code_STARTS_WITH: code
  comparator_CONTAINS: code
  comparator_ENDS_WITH: code
  comparator_EQUALS: code
  comparator_GREATER_THAN: code
  comparator_GREATER_THAN_OR_EQUALS: code
  comparator_LOWER_THAN: code
  comparator_LOWER_THAN_OR_EQUALS: code
  comparator_NOT_EQUALS: code
  comparator_STARTS_WITH: code
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  system_CONTAINS: uri
  system_ENDS_WITH: uri
  system_EQUALS: uri
  system_GREATER_THAN: uri
  system_GREATER_THAN_OR_EQUALS: uri
  system_LOWER_THAN: uri
  system_LOWER_THAN_OR_EQUALS: uri
  system_NOT_EQUALS: uri
  system_STARTS_WITH: uri
  unit_CONTAINS: String
  unit_ENDS_WITH: String
  unit_EQUALS: String
  unit_GREATER_THAN: String
  unit_GREATER_THAN_OR_EQUALS: String
  unit_LOWER_THAN: String
  unit_LOWER_THAN_OR_EQUALS: String
  unit_NOT_EQUALS: String
  unit_STARTS_WITH: String
  value_EQUALS: Float
  value_GREATER_THAN: Float
  value_GREATER_THAN_OR_EQUALS: Float
  value_LOWER_THAN: Float
  value_LOWER_THAN_OR_EQUALS: Float
  value_NOT_EQUALS: Float
}

input DurationSortOption {
  code: SortDirection
  comparator: SortDirection
  extension: ExtensionSortOption
  id: SortDirection
  system: SortDirection
  unit: SortDirection
  value: SortDirection
}

input ElementCommandInput {
  extension: [ExtensionCommandInput!]
  id: String
}

input ElementDefinitionAliasChildFilterOption {
  CONTAINS: String
  ENDS_WITH: String
  EQUALS: String
  GREATER_THAN: String
  GREATER_THAN_OR_EQUALS: String
  LOWER_THAN: String
  LOWER_THAN_OR_EQUALS: String
  NOT_EQUALS: String
  STARTS_WITH: String
}

input ElementDefinitionBaseCommandInput {
  extension: [ExtensionCommandInput!]
  id: String
  max: String!
  min: unsignedInt!
  path: String!
}

input ElementDefinitionBaseFilterOption {
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  max_CONTAINS: String
  max_ENDS_WITH: String
  max_EQUALS: String
  max_GREATER_THAN: String
  max_GREATER_THAN_OR_EQUALS: String
  max_LOWER_THAN: String
  max_LOWER_THAN_OR_EQUALS: String
  max_NOT_EQUALS: String
  max_STARTS_WITH: String
  min_EQUALS: unsignedInt
  min_GREATER_THAN: unsignedInt
  min_GREATER_THAN_OR_EQUALS: unsignedInt
  min_LOWER_THAN: unsignedInt
  min_LOWER_THAN_OR_EQUALS: unsignedInt
  min_NOT_EQUALS: unsignedInt
  path_CONTAINS: String
  path_ENDS_WITH: String
  path_EQUALS: String
  path_GREATER_THAN: String
  path_GREATER_THAN_OR_EQUALS: String
  path_LOWER_THAN: String
  path_LOWER_THAN_OR_EQUALS: String
  path_NOT_EQUALS: String
  path_STARTS_WITH: String
}

input ElementDefinitionBaseLogicalFilterOption {
  AND: [ElementDefinitionBaseLogicalFilterOption!]
  NOT: ElementDefinitionBaseLogicalFilterOption
  OR: [ElementDefinitionBaseLogicalFilterOption!]
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  max_CONTAINS: String
  max_ENDS_WITH: String
  max_EQUALS: String
  max_GREATER_THAN: String
  max_GREATER_THAN_OR_EQUALS: String
  max_LOWER_THAN: String
  max_LOWER_THAN_OR_EQUALS: String
  max_NOT_EQUALS: String
  max_STARTS_WITH: String
  min_EQUALS: unsignedInt
  min_GREATER_THAN: unsignedInt
  min_GREATER_THAN_OR_EQUALS: unsignedInt
  min_LOWER_THAN: unsignedInt
  min_LOWER_THAN_OR_EQUALS: unsignedInt
  min_NOT_EQUALS: unsignedInt
  path_CONTAINS: String
  path_ENDS_WITH: String
  path_EQUALS: String
  path_GREATER_THAN: String
  path_GREATER_THAN_OR_EQUALS: String
  path_LOWER_THAN: String
  path_LOWER_THAN_OR_EQUALS: String
  path_NOT_EQUALS: String
  path_STARTS_WITH: String
}

input ElementDefinitionBaseSortOption {
  extension: ExtensionSortOption
  id: SortDirection
  max: SortDirection
  min: SortDirection
  path: SortDirection
}

input ElementDefinitionBindingCommandInput {
  description: String
  extension: [ExtensionCommandInput!]
  id: String
  strength: code!
  valueSet: canonical
}

input ElementDefinitionBindingFilterOption {
  description_CONTAINS: String
  description_ENDS_WITH: String
  description_EQUALS: String
  description_GREATER_THAN: String
  description_GREATER_THAN_OR_EQUALS: String
  description_LOWER_THAN: String
  description_LOWER_THAN_OR_EQUALS: String
  description_NOT_EQUALS: String
  description_STARTS_WITH: String
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  strength_CONTAINS: code
  strength_ENDS_WITH: code
  strength_EQUALS: code
  strength_GREATER_THAN: code
  strength_GREATER_THAN_OR_EQUALS: code
  strength_LOWER_THAN: code
  strength_LOWER_THAN_OR_EQUALS: code
  strength_NOT_EQUALS: code
  strength_STARTS_WITH: code
  valueSet_CONTAINS: canonical
  valueSet_ENDS_WITH: canonical
  valueSet_EQUALS: canonical
  valueSet_GREATER_THAN: canonical
  valueSet_GREATER_THAN_OR_EQUALS: canonical
  valueSet_LOWER_THAN: canonical
  valueSet_LOWER_THAN_OR_EQUALS: canonical
  valueSet_NOT_EQUALS: canonical
  valueSet_STARTS_WITH: canonical
}

input ElementDefinitionBindingLogicalFilterOption {
  AND: [ElementDefinitionBindingLogicalFilterOption!]
  NOT: ElementDefinitionBindingLogicalFilterOption
  OR: [ElementDefinitionBindingLogicalFilterOption!]
  description_CONTAINS: String
  description_ENDS_WITH: String
  description_EQUALS: String
  description_GREATER_THAN: String
  description_GREATER_THAN_OR_EQUALS: String
  description_LOWER_THAN: String
  description_LOWER_THAN_OR_EQUALS: String
  description_NOT_EQUALS: String
  description_STARTS_WITH: String
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  strength_CONTAINS: code
  strength_ENDS_WITH: code
  strength_EQUALS: code
  strength_GREATER_THAN: code
  strength_GREATER_THAN_OR_EQUALS: code
  strength_LOWER_THAN: code
  strength_LOWER_THAN_OR_EQUALS: code
  strength_NOT_EQUALS: code
  strength_STARTS_WITH: code
  valueSet_CONTAINS: canonical
  valueSet_ENDS_WITH: canonical
  valueSet_EQUALS: canonical
  valueSet_GREATER_THAN: canonical
  valueSet_GREATER_THAN_OR_EQUALS: canonical
  valueSet_LOWER_THAN: canonical
  valueSet_LOWER_THAN_OR_EQUALS: canonical
  valueSet_NOT_EQUALS: canonical
  valueSet_STARTS_WITH: canonical
}

input ElementDefinitionBindingSortOption {
  description: SortDirection
  extension: ExtensionSortOption
  id: SortDirection
  strength: SortDirection
  valueSet: SortDirection
}

input ElementDefinitionCommandInput {
  alias: [String!]
  base: ElementDefinitionBaseCommandInput
  binding: ElementDefinitionBindingCommandInput
  code: [CodingCommandInput!]
  comment: markdown
  condition: [ID!]
  constraint: [ElementDefinitionConstraintCommandInput!]
  contentReference: uri
  defaultValue: ElementDefinitionCommandInputDefaultValue
  definition: markdown
  example: [ElementDefinitionExampleCommandInput!]
  extension: [ExtensionCommandInput!]
  fixed: ElementDefinitionCommandInputFixed
  id: String
  isModifier: Boolean
  isModifierReason: String
  isSummary: Boolean
  label: String
  mapping: [ElementDefinitionMappingCommandInput!]
  max: String
  maxLength: Int
  maxValue: ElementDefinitionCommandInputMaxValue
  meaningWhenMissing: markdown
  min: unsignedInt
  minValue: ElementDefinitionCommandInputMinValue
  modifierExtension: [ExtensionCommandInput!]
  mustSupport: Boolean
  orderMeaning: String
  path: String!
  pattern: ElementDefinitionCommandInputPattern
  representation: [code!]
  requirements: markdown
  short: String
  sliceIsConstraining: Boolean
  sliceName: String
  slicing: ElementDefinitionSlicingCommandInput
  type: [ElementDefinitionTypeCommandInput!]
  typeReference: ID
}

"Generated Input Type, which works as a Union type. Only one field should be filled."
input ElementDefinitionCommandInputDefaultValue {
  CodeableConcept: CodeableConceptCommandInput
  CodeableReference: CodeableReferenceCommandInput
  Coding: CodingCommandInput
  DataRequirement: DataRequirementCommandInput
  Expression: ExpressionCommandInput
  Identifier: IdentifierCommandInput
  ParameterDefinition: ParameterDefinitionCommandInput
  Reference: ID
  TriggerDefinition: TriggerDefinitionCommandInput
  base64Binary: base64Binary
  boolean: Boolean
  canonical: canonical
  code: code
  date: date
  dateTime: dateTime
  decimal: Float
  id: ID
  instant: instant
  integer: Int
  markdown: markdown
  oid: oid
  positiveInt: positiveInt
  string: String
  time: time
  unsignedInt: unsignedInt
  uri: uri
  url: url
  uuid: uuid
}

"Generated Input Type, which works as a Union type. Only one field should be filled."
input ElementDefinitionCommandInputFixed {
  CodeableConcept: CodeableConceptCommandInput
  CodeableReference: CodeableReferenceCommandInput
  Coding: CodingCommandInput
  DataRequirement: DataRequirementCommandInput
  Expression: ExpressionCommandInput
  Identifier: IdentifierCommandInput
  ParameterDefinition: ParameterDefinitionCommandInput
  Reference: ID
  TriggerDefinition: TriggerDefinitionCommandInput
  base64Binary: base64Binary
  boolean: Boolean
  canonical: canonical
  code: code
  date: date
  dateTime: dateTime
  decimal: Float
  id: ID
  instant: instant
  integer: Int
  markdown: markdown
  oid: oid
  positiveInt: positiveInt
  string: String
  time: time
  unsignedInt: unsignedInt
  uri: uri
  url: url
  uuid: uuid
}

"Generated Input Type, which works as a Union type. Only one field should be filled."
input ElementDefinitionCommandInputMaxValue {
  date: date
  dateTime: dateTime
  decimal: Float
  instant: instant
  integer: Int
  positiveInt: positiveInt
  time: time
  unsignedInt: unsignedInt
}

"Generated Input Type, which works as a Union type. Only one field should be filled."
input ElementDefinitionCommandInputMinValue {
  date: date
  dateTime: dateTime
  decimal: Float
  instant: instant
  integer: Int
  positiveInt: positiveInt
  time: time
  unsignedInt: unsignedInt
}

"Generated Input Type, which works as a Union type. Only one field should be filled."
input ElementDefinitionCommandInputPattern {
  CodeableConcept: CodeableConceptCommandInput
  CodeableReference: CodeableReferenceCommandInput
  Coding: CodingCommandInput
  DataRequirement: DataRequirementCommandInput
  Expression: ExpressionCommandInput
  Identifier: IdentifierCommandInput
  ParameterDefinition: ParameterDefinitionCommandInput
  Reference: ID
  TriggerDefinition: TriggerDefinitionCommandInput
  base64Binary: base64Binary
  boolean: Boolean
  canonical: canonical
  code: code
  date: date
  dateTime: dateTime
  decimal: Float
  id: ID
  instant: instant
  integer: Int
  markdown: markdown
  oid: oid
  positiveInt: positiveInt
  string: String
  time: time
  unsignedInt: unsignedInt
  uri: uri
  url: url
  uuid: uuid
}

input ElementDefinitionConditionChildFilterOption {
  CONTAINS: ID
  ENDS_WITH: ID
  EQUALS: ID
  GREATER_THAN: ID
  GREATER_THAN_OR_EQUALS: ID
  LOWER_THAN: ID
  LOWER_THAN_OR_EQUALS: ID
  NOT_EQUALS: ID
  STARTS_WITH: ID
}

input ElementDefinitionConstraintCommandInput {
  expression: String
  extension: [ExtensionCommandInput!]
  human: String!
  id: String
  key: ID!
  requirements: String
  severity: code!
  source: canonical
  xpath: String
}

input ElementDefinitionConstraintFilterOption {
  expression_CONTAINS: String
  expression_ENDS_WITH: String
  expression_EQUALS: String
  expression_GREATER_THAN: String
  expression_GREATER_THAN_OR_EQUALS: String
  expression_LOWER_THAN: String
  expression_LOWER_THAN_OR_EQUALS: String
  expression_NOT_EQUALS: String
  expression_STARTS_WITH: String
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  human_CONTAINS: String
  human_ENDS_WITH: String
  human_EQUALS: String
  human_GREATER_THAN: String
  human_GREATER_THAN_OR_EQUALS: String
  human_LOWER_THAN: String
  human_LOWER_THAN_OR_EQUALS: String
  human_NOT_EQUALS: String
  human_STARTS_WITH: String
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  key_CONTAINS: ID
  key_ENDS_WITH: ID
  key_EQUALS: ID
  key_GREATER_THAN: ID
  key_GREATER_THAN_OR_EQUALS: ID
  key_LOWER_THAN: ID
  key_LOWER_THAN_OR_EQUALS: ID
  key_NOT_EQUALS: ID
  key_STARTS_WITH: ID
  requirements_CONTAINS: String
  requirements_ENDS_WITH: String
  requirements_EQUALS: String
  requirements_GREATER_THAN: String
  requirements_GREATER_THAN_OR_EQUALS: String
  requirements_LOWER_THAN: String
  requirements_LOWER_THAN_OR_EQUALS: String
  requirements_NOT_EQUALS: String
  requirements_STARTS_WITH: String
  severity_CONTAINS: code
  severity_ENDS_WITH: code
  severity_EQUALS: code
  severity_GREATER_THAN: code
  severity_GREATER_THAN_OR_EQUALS: code
  severity_LOWER_THAN: code
  severity_LOWER_THAN_OR_EQUALS: code
  severity_NOT_EQUALS: code
  severity_STARTS_WITH: code
  source_CONTAINS: canonical
  source_ENDS_WITH: canonical
  source_EQUALS: canonical
  source_GREATER_THAN: canonical
  source_GREATER_THAN_OR_EQUALS: canonical
  source_LOWER_THAN: canonical
  source_LOWER_THAN_OR_EQUALS: canonical
  source_NOT_EQUALS: canonical
  source_STARTS_WITH: canonical
  xpath_CONTAINS: String
  xpath_ENDS_WITH: String
  xpath_EQUALS: String
  xpath_GREATER_THAN: String
  xpath_GREATER_THAN_OR_EQUALS: String
  xpath_LOWER_THAN: String
  xpath_LOWER_THAN_OR_EQUALS: String
  xpath_NOT_EQUALS: String
  xpath_STARTS_WITH: String
}

input ElementDefinitionConstraintLogicalFilterOption {
  AND: [ElementDefinitionConstraintLogicalFilterOption!]
  NOT: ElementDefinitionConstraintLogicalFilterOption
  OR: [ElementDefinitionConstraintLogicalFilterOption!]
  expression_CONTAINS: String
  expression_ENDS_WITH: String
  expression_EQUALS: String
  expression_GREATER_THAN: String
  expression_GREATER_THAN_OR_EQUALS: String
  expression_LOWER_THAN: String
  expression_LOWER_THAN_OR_EQUALS: String
  expression_NOT_EQUALS: String
  expression_STARTS_WITH: String
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  human_CONTAINS: String
  human_ENDS_WITH: String
  human_EQUALS: String
  human_GREATER_THAN: String
  human_GREATER_THAN_OR_EQUALS: String
  human_LOWER_THAN: String
  human_LOWER_THAN_OR_EQUALS: String
  human_NOT_EQUALS: String
  human_STARTS_WITH: String
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  key_CONTAINS: ID
  key_ENDS_WITH: ID
  key_EQUALS: ID
  key_GREATER_THAN: ID
  key_GREATER_THAN_OR_EQUALS: ID
  key_LOWER_THAN: ID
  key_LOWER_THAN_OR_EQUALS: ID
  key_NOT_EQUALS: ID
  key_STARTS_WITH: ID
  requirements_CONTAINS: String
  requirements_ENDS_WITH: String
  requirements_EQUALS: String
  requirements_GREATER_THAN: String
  requirements_GREATER_THAN_OR_EQUALS: String
  requirements_LOWER_THAN: String
  requirements_LOWER_THAN_OR_EQUALS: String
  requirements_NOT_EQUALS: String
  requirements_STARTS_WITH: String
  severity_CONTAINS: code
  severity_ENDS_WITH: code
  severity_EQUALS: code
  severity_GREATER_THAN: code
  severity_GREATER_THAN_OR_EQUALS: code
  severity_LOWER_THAN: code
  severity_LOWER_THAN_OR_EQUALS: code
  severity_NOT_EQUALS: code
  severity_STARTS_WITH: code
  source_CONTAINS: canonical
  source_ENDS_WITH: canonical
  source_EQUALS: canonical
  source_GREATER_THAN: canonical
  source_GREATER_THAN_OR_EQUALS: canonical
  source_LOWER_THAN: canonical
  source_LOWER_THAN_OR_EQUALS: canonical
  source_NOT_EQUALS: canonical
  source_STARTS_WITH: canonical
  xpath_CONTAINS: String
  xpath_ENDS_WITH: String
  xpath_EQUALS: String
  xpath_GREATER_THAN: String
  xpath_GREATER_THAN_OR_EQUALS: String
  xpath_LOWER_THAN: String
  xpath_LOWER_THAN_OR_EQUALS: String
  xpath_NOT_EQUALS: String
  xpath_STARTS_WITH: String
}

input ElementDefinitionConstraintSortOption {
  expression: SortDirection
  extension: ExtensionSortOption
  human: SortDirection
  id: SortDirection
  key: SortDirection
  requirements: SortDirection
  severity: SortDirection
  source: SortDirection
  xpath: SortDirection
}

input ElementDefinitionExampleCommandInput {
  extension: [ExtensionCommandInput!]
  id: String
  label: String!
  value: ElementDefinitionExampleCommandInputValue!
}

"Generated Input Type, which works as a Union type. Only one field should be filled."
input ElementDefinitionExampleCommandInputValue {
  CodeableConcept: CodeableConceptCommandInput
  CodeableReference: CodeableReferenceCommandInput
  Coding: CodingCommandInput
  DataRequirement: DataRequirementCommandInput
  Expression: ExpressionCommandInput
  Identifier: IdentifierCommandInput
  ParameterDefinition: ParameterDefinitionCommandInput
  Reference: ID
  TriggerDefinition: TriggerDefinitionCommandInput
  base64Binary: base64Binary
  boolean: Boolean
  canonical: canonical
  code: code
  date: date
  dateTime: dateTime
  decimal: Float
  id: ID
  instant: instant
  integer: Int
  markdown: markdown
  oid: oid
  positiveInt: positiveInt
  string: String
  time: time
  unsignedInt: unsignedInt
  uri: uri
  url: url
  uuid: uuid
}

input ElementDefinitionExampleFilterOption {
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  label_CONTAINS: String
  label_ENDS_WITH: String
  label_EQUALS: String
  label_GREATER_THAN: String
  label_GREATER_THAN_OR_EQUALS: String
  label_LOWER_THAN: String
  label_LOWER_THAN_OR_EQUALS: String
  label_NOT_EQUALS: String
  label_STARTS_WITH: String
}

input ElementDefinitionExampleLogicalFilterOption {
  AND: [ElementDefinitionExampleLogicalFilterOption!]
  NOT: ElementDefinitionExampleLogicalFilterOption
  OR: [ElementDefinitionExampleLogicalFilterOption!]
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  label_CONTAINS: String
  label_ENDS_WITH: String
  label_EQUALS: String
  label_GREATER_THAN: String
  label_GREATER_THAN_OR_EQUALS: String
  label_LOWER_THAN: String
  label_LOWER_THAN_OR_EQUALS: String
  label_NOT_EQUALS: String
  label_STARTS_WITH: String
}

input ElementDefinitionExampleSortOption {
  extension: ExtensionSortOption
  id: SortDirection
  label: SortDirection
}

input ElementDefinitionFilterOption {
  alias_ALL_MATCH: ElementDefinitionAliasChildFilterOption
  alias_ANY_MATCH: ElementDefinitionAliasChildFilterOption
  alias_EQUALS: [String!]
  alias_NONE_MATCH: ElementDefinitionAliasChildFilterOption
  alias_NOT_EQUALS: [String!]
  base: ElementDefinitionBaseFilterOption
  binding: ElementDefinitionBindingFilterOption
  code_ALL_MATCH: CodingFilterOption
  code_ANY_MATCH: CodingFilterOption
  code_NONE_MATCH: CodingFilterOption
  comment_CONTAINS: markdown
  comment_ENDS_WITH: markdown
  comment_EQUALS: markdown
  comment_GREATER_THAN: markdown
  comment_GREATER_THAN_OR_EQUALS: markdown
  comment_LOWER_THAN: markdown
  comment_LOWER_THAN_OR_EQUALS: markdown
  comment_NOT_EQUALS: markdown
  comment_STARTS_WITH: markdown
  condition_ALL_MATCH: ElementDefinitionConditionChildFilterOption
  condition_ANY_MATCH: ElementDefinitionConditionChildFilterOption
  condition_EQUALS: [ID!]
  condition_NONE_MATCH: ElementDefinitionConditionChildFilterOption
  condition_NOT_EQUALS: [ID!]
  constraint_ALL_MATCH: ElementDefinitionConstraintFilterOption
  constraint_ANY_MATCH: ElementDefinitionConstraintFilterOption
  constraint_NONE_MATCH: ElementDefinitionConstraintFilterOption
  contentReference_CONTAINS: uri
  contentReference_ENDS_WITH: uri
  contentReference_EQUALS: uri
  contentReference_GREATER_THAN: uri
  contentReference_GREATER_THAN_OR_EQUALS: uri
  contentReference_LOWER_THAN: uri
  contentReference_LOWER_THAN_OR_EQUALS: uri
  contentReference_NOT_EQUALS: uri
  contentReference_STARTS_WITH: uri
  definition_CONTAINS: markdown
  definition_ENDS_WITH: markdown
  definition_EQUALS: markdown
  definition_GREATER_THAN: markdown
  definition_GREATER_THAN_OR_EQUALS: markdown
  definition_LOWER_THAN: markdown
  definition_LOWER_THAN_OR_EQUALS: markdown
  definition_NOT_EQUALS: markdown
  definition_STARTS_WITH: markdown
  example_ALL_MATCH: ElementDefinitionExampleFilterOption
  example_ANY_MATCH: ElementDefinitionExampleFilterOption
  example_NONE_MATCH: ElementDefinitionExampleFilterOption
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  isModifierReason_CONTAINS: String
  isModifierReason_ENDS_WITH: String
  isModifierReason_EQUALS: String
  isModifierReason_GREATER_THAN: String
  isModifierReason_GREATER_THAN_OR_EQUALS: String
  isModifierReason_LOWER_THAN: String
  isModifierReason_LOWER_THAN_OR_EQUALS: String
  isModifierReason_NOT_EQUALS: String
  isModifierReason_STARTS_WITH: String
  isModifier_EQUALS: Boolean
  isModifier_NOT_EQUALS: Boolean
  isSummary_EQUALS: Boolean
  isSummary_NOT_EQUALS: Boolean
  label_CONTAINS: String
  label_ENDS_WITH: String
  label_EQUALS: String
  label_GREATER_THAN: String
  label_GREATER_THAN_OR_EQUALS: String
  label_LOWER_THAN: String
  label_LOWER_THAN_OR_EQUALS: String
  label_NOT_EQUALS: String
  label_STARTS_WITH: String
  mapping_ALL_MATCH: ElementDefinitionMappingFilterOption
  mapping_ANY_MATCH: ElementDefinitionMappingFilterOption
  mapping_NONE_MATCH: ElementDefinitionMappingFilterOption
  maxLength_EQUALS: Int
  maxLength_GREATER_THAN: Int
  maxLength_GREATER_THAN_OR_EQUALS: Int
  maxLength_LOWER_THAN: Int
  maxLength_LOWER_THAN_OR_EQUALS: Int
  maxLength_NOT_EQUALS: Int
  max_CONTAINS: String
  max_ENDS_WITH: String
  max_EQUALS: String
  max_GREATER_THAN: String
  max_GREATER_THAN_OR_EQUALS: String
  max_LOWER_THAN: String
  max_LOWER_THAN_OR_EQUALS: String
  max_NOT_EQUALS: String
  max_STARTS_WITH: String
  meaningWhenMissing_CONTAINS: markdown
  meaningWhenMissing_ENDS_WITH: markdown
  meaningWhenMissing_EQUALS: markdown
  meaningWhenMissing_GREATER_THAN: markdown
  meaningWhenMissing_GREATER_THAN_OR_EQUALS: markdown
  meaningWhenMissing_LOWER_THAN: markdown
  meaningWhenMissing_LOWER_THAN_OR_EQUALS: markdown
  meaningWhenMissing_NOT_EQUALS: markdown
  meaningWhenMissing_STARTS_WITH: markdown
  min_EQUALS: unsignedInt
  min_GREATER_THAN: unsignedInt
  min_GREATER_THAN_OR_EQUALS: unsignedInt
  min_LOWER_THAN: unsignedInt
  min_LOWER_THAN_OR_EQUALS: unsignedInt
  min_NOT_EQUALS: unsignedInt
  modifierExtension_ALL_MATCH: ExtensionFilterOption
  modifierExtension_ANY_MATCH: ExtensionFilterOption
  modifierExtension_NONE_MATCH: ExtensionFilterOption
  mustSupport_EQUALS: Boolean
  mustSupport_NOT_EQUALS: Boolean
  orderMeaning_CONTAINS: String
  orderMeaning_ENDS_WITH: String
  orderMeaning_EQUALS: String
  orderMeaning_GREATER_THAN: String
  orderMeaning_GREATER_THAN_OR_EQUALS: String
  orderMeaning_LOWER_THAN: String
  orderMeaning_LOWER_THAN_OR_EQUALS: String
  orderMeaning_NOT_EQUALS: String
  orderMeaning_STARTS_WITH: String
  path_CONTAINS: String
  path_ENDS_WITH: String
  path_EQUALS: String
  path_GREATER_THAN: String
  path_GREATER_THAN_OR_EQUALS: String
  path_LOWER_THAN: String
  path_LOWER_THAN_OR_EQUALS: String
  path_NOT_EQUALS: String
  path_STARTS_WITH: String
  representation_ALL_MATCH: ElementDefinitionRepresentationChildFilterOption
  representation_ANY_MATCH: ElementDefinitionRepresentationChildFilterOption
  representation_EQUALS: [code!]
  representation_NONE_MATCH: ElementDefinitionRepresentationChildFilterOption
  representation_NOT_EQUALS: [code!]
  requirements_CONTAINS: markdown
  requirements_ENDS_WITH: markdown
  requirements_EQUALS: markdown
  requirements_GREATER_THAN: markdown
  requirements_GREATER_THAN_OR_EQUALS: markdown
  requirements_LOWER_THAN: markdown
  requirements_LOWER_THAN_OR_EQUALS: markdown
  requirements_NOT_EQUALS: markdown
  requirements_STARTS_WITH: markdown
  short_CONTAINS: String
  short_ENDS_WITH: String
  short_EQUALS: String
  short_GREATER_THAN: String
  short_GREATER_THAN_OR_EQUALS: String
  short_LOWER_THAN: String
  short_LOWER_THAN_OR_EQUALS: String
  short_NOT_EQUALS: String
  short_STARTS_WITH: String
  sliceIsConstraining_EQUALS: Boolean
  sliceIsConstraining_NOT_EQUALS: Boolean
  sliceName_CONTAINS: String
  sliceName_ENDS_WITH: String
  sliceName_EQUALS: String
  sliceName_GREATER_THAN: String
  sliceName_GREATER_THAN_OR_EQUALS: String
  sliceName_LOWER_THAN: String
  sliceName_LOWER_THAN_OR_EQUALS: String
  sliceName_NOT_EQUALS: String
  sliceName_STARTS_WITH: String
  slicing: ElementDefinitionSlicingFilterOption
  typeReference: StructureDefinitionFilterOption
  type_ALL_MATCH: ElementDefinitionTypeFilterOption
  type_ANY_MATCH: ElementDefinitionTypeFilterOption
  type_NONE_MATCH: ElementDefinitionTypeFilterOption
}

input ElementDefinitionLogicalFilterOption {
  AND: [ElementDefinitionLogicalFilterOption!]
  NOT: ElementDefinitionLogicalFilterOption
  OR: [ElementDefinitionLogicalFilterOption!]
  alias_ALL_MATCH: ElementDefinitionAliasChildFilterOption
  alias_ANY_MATCH: ElementDefinitionAliasChildFilterOption
  alias_EQUALS: [String!]
  alias_NONE_MATCH: ElementDefinitionAliasChildFilterOption
  alias_NOT_EQUALS: [String!]
  base: ElementDefinitionBaseFilterOption
  binding: ElementDefinitionBindingFilterOption
  code_ALL_MATCH: CodingFilterOption
  code_ANY_MATCH: CodingFilterOption
  code_NONE_MATCH: CodingFilterOption
  comment_CONTAINS: markdown
  comment_ENDS_WITH: markdown
  comment_EQUALS: markdown
  comment_GREATER_THAN: markdown
  comment_GREATER_THAN_OR_EQUALS: markdown
  comment_LOWER_THAN: markdown
  comment_LOWER_THAN_OR_EQUALS: markdown
  comment_NOT_EQUALS: markdown
  comment_STARTS_WITH: markdown
  condition_ALL_MATCH: ElementDefinitionConditionChildFilterOption
  condition_ANY_MATCH: ElementDefinitionConditionChildFilterOption
  condition_EQUALS: [ID!]
  condition_NONE_MATCH: ElementDefinitionConditionChildFilterOption
  condition_NOT_EQUALS: [ID!]
  constraint_ALL_MATCH: ElementDefinitionConstraintFilterOption
  constraint_ANY_MATCH: ElementDefinitionConstraintFilterOption
  constraint_NONE_MATCH: ElementDefinitionConstraintFilterOption
  contentReference_CONTAINS: uri
  contentReference_ENDS_WITH: uri
  contentReference_EQUALS: uri
  contentReference_GREATER_THAN: uri
  contentReference_GREATER_THAN_OR_EQUALS: uri
  contentReference_LOWER_THAN: uri
  contentReference_LOWER_THAN_OR_EQUALS: uri
  contentReference_NOT_EQUALS: uri
  contentReference_STARTS_WITH: uri
  definition_CONTAINS: markdown
  definition_ENDS_WITH: markdown
  definition_EQUALS: markdown
  definition_GREATER_THAN: markdown
  definition_GREATER_THAN_OR_EQUALS: markdown
  definition_LOWER_THAN: markdown
  definition_LOWER_THAN_OR_EQUALS: markdown
  definition_NOT_EQUALS: markdown
  definition_STARTS_WITH: markdown
  example_ALL_MATCH: ElementDefinitionExampleFilterOption
  example_ANY_MATCH: ElementDefinitionExampleFilterOption
  example_NONE_MATCH: ElementDefinitionExampleFilterOption
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  isModifierReason_CONTAINS: String
  isModifierReason_ENDS_WITH: String
  isModifierReason_EQUALS: String
  isModifierReason_GREATER_THAN: String
  isModifierReason_GREATER_THAN_OR_EQUALS: String
  isModifierReason_LOWER_THAN: String
  isModifierReason_LOWER_THAN_OR_EQUALS: String
  isModifierReason_NOT_EQUALS: String
  isModifierReason_STARTS_WITH: String
  isModifier_EQUALS: Boolean
  isModifier_NOT_EQUALS: Boolean
  isSummary_EQUALS: Boolean
  isSummary_NOT_EQUALS: Boolean
  label_CONTAINS: String
  label_ENDS_WITH: String
  label_EQUALS: String
  label_GREATER_THAN: String
  label_GREATER_THAN_OR_EQUALS: String
  label_LOWER_THAN: String
  label_LOWER_THAN_OR_EQUALS: String
  label_NOT_EQUALS: String
  label_STARTS_WITH: String
  mapping_ALL_MATCH: ElementDefinitionMappingFilterOption
  mapping_ANY_MATCH: ElementDefinitionMappingFilterOption
  mapping_NONE_MATCH: ElementDefinitionMappingFilterOption
  maxLength_EQUALS: Int
  maxLength_GREATER_THAN: Int
  maxLength_GREATER_THAN_OR_EQUALS: Int
  maxLength_LOWER_THAN: Int
  maxLength_LOWER_THAN_OR_EQUALS: Int
  maxLength_NOT_EQUALS: Int
  max_CONTAINS: String
  max_ENDS_WITH: String
  max_EQUALS: String
  max_GREATER_THAN: String
  max_GREATER_THAN_OR_EQUALS: String
  max_LOWER_THAN: String
  max_LOWER_THAN_OR_EQUALS: String
  max_NOT_EQUALS: String
  max_STARTS_WITH: String
  meaningWhenMissing_CONTAINS: markdown
  meaningWhenMissing_ENDS_WITH: markdown
  meaningWhenMissing_EQUALS: markdown
  meaningWhenMissing_GREATER_THAN: markdown
  meaningWhenMissing_GREATER_THAN_OR_EQUALS: markdown
  meaningWhenMissing_LOWER_THAN: markdown
  meaningWhenMissing_LOWER_THAN_OR_EQUALS: markdown
  meaningWhenMissing_NOT_EQUALS: markdown
  meaningWhenMissing_STARTS_WITH: markdown
  min_EQUALS: unsignedInt
  min_GREATER_THAN: unsignedInt
  min_GREATER_THAN_OR_EQUALS: unsignedInt
  min_LOWER_THAN: unsignedInt
  min_LOWER_THAN_OR_EQUALS: unsignedInt
  min_NOT_EQUALS: unsignedInt
  modifierExtension_ALL_MATCH: ExtensionFilterOption
  modifierExtension_ANY_MATCH: ExtensionFilterOption
  modifierExtension_NONE_MATCH: ExtensionFilterOption
  mustSupport_EQUALS: Boolean
  mustSupport_NOT_EQUALS: Boolean
  orderMeaning_CONTAINS: String
  orderMeaning_ENDS_WITH: String
  orderMeaning_EQUALS: String
  orderMeaning_GREATER_THAN: String
  orderMeaning_GREATER_THAN_OR_EQUALS: String
  orderMeaning_LOWER_THAN: String
  orderMeaning_LOWER_THAN_OR_EQUALS: String
  orderMeaning_NOT_EQUALS: String
  orderMeaning_STARTS_WITH: String
  path_CONTAINS: String
  path_ENDS_WITH: String
  path_EQUALS: String
  path_GREATER_THAN: String
  path_GREATER_THAN_OR_EQUALS: String
  path_LOWER_THAN: String
  path_LOWER_THAN_OR_EQUALS: String
  path_NOT_EQUALS: String
  path_STARTS_WITH: String
  representation_ALL_MATCH: ElementDefinitionRepresentationChildFilterOption
  representation_ANY_MATCH: ElementDefinitionRepresentationChildFilterOption
  representation_EQUALS: [code!]
  representation_NONE_MATCH: ElementDefinitionRepresentationChildFilterOption
  representation_NOT_EQUALS: [code!]
  requirements_CONTAINS: markdown
  requirements_ENDS_WITH: markdown
  requirements_EQUALS: markdown
  requirements_GREATER_THAN: markdown
  requirements_GREATER_THAN_OR_EQUALS: markdown
  requirements_LOWER_THAN: markdown
  requirements_LOWER_THAN_OR_EQUALS: markdown
  requirements_NOT_EQUALS: markdown
  requirements_STARTS_WITH: markdown
  short_CONTAINS: String
  short_ENDS_WITH: String
  short_EQUALS: String
  short_GREATER_THAN: String
  short_GREATER_THAN_OR_EQUALS: String
  short_LOWER_THAN: String
  short_LOWER_THAN_OR_EQUALS: String
  short_NOT_EQUALS: String
  short_STARTS_WITH: String
  sliceIsConstraining_EQUALS: Boolean
  sliceIsConstraining_NOT_EQUALS: Boolean
  sliceName_CONTAINS: String
  sliceName_ENDS_WITH: String
  sliceName_EQUALS: String
  sliceName_GREATER_THAN: String
  sliceName_GREATER_THAN_OR_EQUALS: String
  sliceName_LOWER_THAN: String
  sliceName_LOWER_THAN_OR_EQUALS: String
  sliceName_NOT_EQUALS: String
  sliceName_STARTS_WITH: String
  slicing: ElementDefinitionSlicingFilterOption
  typeReference: StructureDefinitionFilterOption
  type_ALL_MATCH: ElementDefinitionTypeFilterOption
  type_ANY_MATCH: ElementDefinitionTypeFilterOption
  type_NONE_MATCH: ElementDefinitionTypeFilterOption
}

input ElementDefinitionMappingCommandInput {
  comment: String
  extension: [ExtensionCommandInput!]
  id: String
  identity: ID!
  language: code
  map: String!
}

input ElementDefinitionMappingFilterOption {
  comment_CONTAINS: String
  comment_ENDS_WITH: String
  comment_EQUALS: String
  comment_GREATER_THAN: String
  comment_GREATER_THAN_OR_EQUALS: String
  comment_LOWER_THAN: String
  comment_LOWER_THAN_OR_EQUALS: String
  comment_NOT_EQUALS: String
  comment_STARTS_WITH: String
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  identity_CONTAINS: ID
  identity_ENDS_WITH: ID
  identity_EQUALS: ID
  identity_GREATER_THAN: ID
  identity_GREATER_THAN_OR_EQUALS: ID
  identity_LOWER_THAN: ID
  identity_LOWER_THAN_OR_EQUALS: ID
  identity_NOT_EQUALS: ID
  identity_STARTS_WITH: ID
  language_CONTAINS: code
  language_ENDS_WITH: code
  language_EQUALS: code
  language_GREATER_THAN: code
  language_GREATER_THAN_OR_EQUALS: code
  language_LOWER_THAN: code
  language_LOWER_THAN_OR_EQUALS: code
  language_NOT_EQUALS: code
  language_STARTS_WITH: code
  map_CONTAINS: String
  map_ENDS_WITH: String
  map_EQUALS: String
  map_GREATER_THAN: String
  map_GREATER_THAN_OR_EQUALS: String
  map_LOWER_THAN: String
  map_LOWER_THAN_OR_EQUALS: String
  map_NOT_EQUALS: String
  map_STARTS_WITH: String
}

input ElementDefinitionMappingLogicalFilterOption {
  AND: [ElementDefinitionMappingLogicalFilterOption!]
  NOT: ElementDefinitionMappingLogicalFilterOption
  OR: [ElementDefinitionMappingLogicalFilterOption!]
  comment_CONTAINS: String
  comment_ENDS_WITH: String
  comment_EQUALS: String
  comment_GREATER_THAN: String
  comment_GREATER_THAN_OR_EQUALS: String
  comment_LOWER_THAN: String
  comment_LOWER_THAN_OR_EQUALS: String
  comment_NOT_EQUALS: String
  comment_STARTS_WITH: String
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  identity_CONTAINS: ID
  identity_ENDS_WITH: ID
  identity_EQUALS: ID
  identity_GREATER_THAN: ID
  identity_GREATER_THAN_OR_EQUALS: ID
  identity_LOWER_THAN: ID
  identity_LOWER_THAN_OR_EQUALS: ID
  identity_NOT_EQUALS: ID
  identity_STARTS_WITH: ID
  language_CONTAINS: code
  language_ENDS_WITH: code
  language_EQUALS: code
  language_GREATER_THAN: code
  language_GREATER_THAN_OR_EQUALS: code
  language_LOWER_THAN: code
  language_LOWER_THAN_OR_EQUALS: code
  language_NOT_EQUALS: code
  language_STARTS_WITH: code
  map_CONTAINS: String
  map_ENDS_WITH: String
  map_EQUALS: String
  map_GREATER_THAN: String
  map_GREATER_THAN_OR_EQUALS: String
  map_LOWER_THAN: String
  map_LOWER_THAN_OR_EQUALS: String
  map_NOT_EQUALS: String
  map_STARTS_WITH: String
}

input ElementDefinitionMappingSortOption {
  comment: SortDirection
  extension: ExtensionSortOption
  id: SortDirection
  identity: SortDirection
  language: SortDirection
  map: SortDirection
}

input ElementDefinitionRepresentationChildFilterOption {
  CONTAINS: code
  ENDS_WITH: code
  EQUALS: code
  GREATER_THAN: code
  GREATER_THAN_OR_EQUALS: code
  LOWER_THAN: code
  LOWER_THAN_OR_EQUALS: code
  NOT_EQUALS: code
  STARTS_WITH: code
}

input ElementDefinitionSlicingCommandInput {
  description: String
  discriminator: [ElementDefinitionSlicingDiscriminatorCommandInput!]
  extension: [ExtensionCommandInput!]
  id: String
  ordered: Boolean
  rules: code!
}

input ElementDefinitionSlicingDiscriminatorCommandInput {
  extension: [ExtensionCommandInput!]
  id: String
  path: String!
  type: code!
}

input ElementDefinitionSlicingDiscriminatorFilterOption {
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  path_CONTAINS: String
  path_ENDS_WITH: String
  path_EQUALS: String
  path_GREATER_THAN: String
  path_GREATER_THAN_OR_EQUALS: String
  path_LOWER_THAN: String
  path_LOWER_THAN_OR_EQUALS: String
  path_NOT_EQUALS: String
  path_STARTS_WITH: String
  type_CONTAINS: code
  type_ENDS_WITH: code
  type_EQUALS: code
  type_GREATER_THAN: code
  type_GREATER_THAN_OR_EQUALS: code
  type_LOWER_THAN: code
  type_LOWER_THAN_OR_EQUALS: code
  type_NOT_EQUALS: code
  type_STARTS_WITH: code
}

input ElementDefinitionSlicingDiscriminatorLogicalFilterOption {
  AND: [ElementDefinitionSlicingDiscriminatorLogicalFilterOption!]
  NOT: ElementDefinitionSlicingDiscriminatorLogicalFilterOption
  OR: [ElementDefinitionSlicingDiscriminatorLogicalFilterOption!]
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  path_CONTAINS: String
  path_ENDS_WITH: String
  path_EQUALS: String
  path_GREATER_THAN: String
  path_GREATER_THAN_OR_EQUALS: String
  path_LOWER_THAN: String
  path_LOWER_THAN_OR_EQUALS: String
  path_NOT_EQUALS: String
  path_STARTS_WITH: String
  type_CONTAINS: code
  type_ENDS_WITH: code
  type_EQUALS: code
  type_GREATER_THAN: code
  type_GREATER_THAN_OR_EQUALS: code
  type_LOWER_THAN: code
  type_LOWER_THAN_OR_EQUALS: code
  type_NOT_EQUALS: code
  type_STARTS_WITH: code
}

input ElementDefinitionSlicingDiscriminatorSortOption {
  extension: ExtensionSortOption
  id: SortDirection
  path: SortDirection
  type: SortDirection
}

input ElementDefinitionSlicingFilterOption {
  description_CONTAINS: String
  description_ENDS_WITH: String
  description_EQUALS: String
  description_GREATER_THAN: String
  description_GREATER_THAN_OR_EQUALS: String
  description_LOWER_THAN: String
  description_LOWER_THAN_OR_EQUALS: String
  description_NOT_EQUALS: String
  description_STARTS_WITH: String
  discriminator_ALL_MATCH: ElementDefinitionSlicingDiscriminatorFilterOption
  discriminator_ANY_MATCH: ElementDefinitionSlicingDiscriminatorFilterOption
  discriminator_NONE_MATCH: ElementDefinitionSlicingDiscriminatorFilterOption
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  ordered_EQUALS: Boolean
  ordered_NOT_EQUALS: Boolean
  rules_CONTAINS: code
  rules_ENDS_WITH: code
  rules_EQUALS: code
  rules_GREATER_THAN: code
  rules_GREATER_THAN_OR_EQUALS: code
  rules_LOWER_THAN: code
  rules_LOWER_THAN_OR_EQUALS: code
  rules_NOT_EQUALS: code
  rules_STARTS_WITH: code
}

input ElementDefinitionSlicingLogicalFilterOption {
  AND: [ElementDefinitionSlicingLogicalFilterOption!]
  NOT: ElementDefinitionSlicingLogicalFilterOption
  OR: [ElementDefinitionSlicingLogicalFilterOption!]
  description_CONTAINS: String
  description_ENDS_WITH: String
  description_EQUALS: String
  description_GREATER_THAN: String
  description_GREATER_THAN_OR_EQUALS: String
  description_LOWER_THAN: String
  description_LOWER_THAN_OR_EQUALS: String
  description_NOT_EQUALS: String
  description_STARTS_WITH: String
  discriminator_ALL_MATCH: ElementDefinitionSlicingDiscriminatorFilterOption
  discriminator_ANY_MATCH: ElementDefinitionSlicingDiscriminatorFilterOption
  discriminator_NONE_MATCH: ElementDefinitionSlicingDiscriminatorFilterOption
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  ordered_EQUALS: Boolean
  ordered_NOT_EQUALS: Boolean
  rules_CONTAINS: code
  rules_ENDS_WITH: code
  rules_EQUALS: code
  rules_GREATER_THAN: code
  rules_GREATER_THAN_OR_EQUALS: code
  rules_LOWER_THAN: code
  rules_LOWER_THAN_OR_EQUALS: code
  rules_NOT_EQUALS: code
  rules_STARTS_WITH: code
}

input ElementDefinitionSlicingSortOption {
  description: SortDirection
  discriminator: ElementDefinitionSlicingDiscriminatorSortOption
  extension: ExtensionSortOption
  id: SortDirection
  ordered: SortDirection
  rules: SortDirection
}

input ElementDefinitionSortOption {
  alias: SortDirection
  base: ElementDefinitionBaseSortOption
  binding: ElementDefinitionBindingSortOption
  code: CodingSortOption
  comment: SortDirection
  condition: SortDirection
  constraint: ElementDefinitionConstraintSortOption
  contentReference: SortDirection
  definition: SortDirection
  example: ElementDefinitionExampleSortOption
  extension: ExtensionSortOption
  id: SortDirection
  isModifier: SortDirection
  isModifierReason: SortDirection
  isSummary: SortDirection
  label: SortDirection
  mapping: ElementDefinitionMappingSortOption
  max: SortDirection
  maxLength: SortDirection
  maxValue: SortDirection
  meaningWhenMissing: SortDirection
  min: SortDirection
  minValue: SortDirection
  modifierExtension: ExtensionSortOption
  mustSupport: SortDirection
  orderMeaning: SortDirection
  path: SortDirection
  representation: SortDirection
  requirements: SortDirection
  short: SortDirection
  sliceIsConstraining: SortDirection
  sliceName: SortDirection
  slicing: ElementDefinitionSlicingSortOption
  type: ElementDefinitionTypeSortOption
  typeReference: StructureDefinitionSortOption
}

input ElementDefinitionTypeAggregationChildFilterOption {
  CONTAINS: code
  ENDS_WITH: code
  EQUALS: code
  GREATER_THAN: code
  GREATER_THAN_OR_EQUALS: code
  LOWER_THAN: code
  LOWER_THAN_OR_EQUALS: code
  NOT_EQUALS: code
  STARTS_WITH: code
}

input ElementDefinitionTypeCommandInput {
  aggregation: [code!]
  code: uri!
  extension: [ExtensionCommandInput!]
  id: String
  profile: [canonical!]
  targetProfile: [canonical!]
  versioning: code
}

input ElementDefinitionTypeFilterOption {
  aggregation_ALL_MATCH: ElementDefinitionTypeAggregationChildFilterOption
  aggregation_ANY_MATCH: ElementDefinitionTypeAggregationChildFilterOption
  aggregation_EQUALS: [code!]
  aggregation_NONE_MATCH: ElementDefinitionTypeAggregationChildFilterOption
  aggregation_NOT_EQUALS: [code!]
  code_CONTAINS: uri
  code_ENDS_WITH: uri
  code_EQUALS: uri
  code_GREATER_THAN: uri
  code_GREATER_THAN_OR_EQUALS: uri
  code_LOWER_THAN: uri
  code_LOWER_THAN_OR_EQUALS: uri
  code_NOT_EQUALS: uri
  code_STARTS_WITH: uri
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  profile_ALL_MATCH: ElementDefinitionTypeProfileChildFilterOption
  profile_ANY_MATCH: ElementDefinitionTypeProfileChildFilterOption
  profile_EQUALS: [canonical!]
  profile_NONE_MATCH: ElementDefinitionTypeProfileChildFilterOption
  profile_NOT_EQUALS: [canonical!]
  targetProfile_ALL_MATCH: ElementDefinitionTypeTargetProfileChildFilterOption
  targetProfile_ANY_MATCH: ElementDefinitionTypeTargetProfileChildFilterOption
  targetProfile_EQUALS: [canonical!]
  targetProfile_NONE_MATCH: ElementDefinitionTypeTargetProfileChildFilterOption
  targetProfile_NOT_EQUALS: [canonical!]
  versioning_CONTAINS: code
  versioning_ENDS_WITH: code
  versioning_EQUALS: code
  versioning_GREATER_THAN: code
  versioning_GREATER_THAN_OR_EQUALS: code
  versioning_LOWER_THAN: code
  versioning_LOWER_THAN_OR_EQUALS: code
  versioning_NOT_EQUALS: code
  versioning_STARTS_WITH: code
}

input ElementDefinitionTypeLogicalFilterOption {
  AND: [ElementDefinitionTypeLogicalFilterOption!]
  NOT: ElementDefinitionTypeLogicalFilterOption
  OR: [ElementDefinitionTypeLogicalFilterOption!]
  aggregation_ALL_MATCH: ElementDefinitionTypeAggregationChildFilterOption
  aggregation_ANY_MATCH: ElementDefinitionTypeAggregationChildFilterOption
  aggregation_EQUALS: [code!]
  aggregation_NONE_MATCH: ElementDefinitionTypeAggregationChildFilterOption
  aggregation_NOT_EQUALS: [code!]
  code_CONTAINS: uri
  code_ENDS_WITH: uri
  code_EQUALS: uri
  code_GREATER_THAN: uri
  code_GREATER_THAN_OR_EQUALS: uri
  code_LOWER_THAN: uri
  code_LOWER_THAN_OR_EQUALS: uri
  code_NOT_EQUALS: uri
  code_STARTS_WITH: uri
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  profile_ALL_MATCH: ElementDefinitionTypeProfileChildFilterOption
  profile_ANY_MATCH: ElementDefinitionTypeProfileChildFilterOption
  profile_EQUALS: [canonical!]
  profile_NONE_MATCH: ElementDefinitionTypeProfileChildFilterOption
  profile_NOT_EQUALS: [canonical!]
  targetProfile_ALL_MATCH: ElementDefinitionTypeTargetProfileChildFilterOption
  targetProfile_ANY_MATCH: ElementDefinitionTypeTargetProfileChildFilterOption
  targetProfile_EQUALS: [canonical!]
  targetProfile_NONE_MATCH: ElementDefinitionTypeTargetProfileChildFilterOption
  targetProfile_NOT_EQUALS: [canonical!]
  versioning_CONTAINS: code
  versioning_ENDS_WITH: code
  versioning_EQUALS: code
  versioning_GREATER_THAN: code
  versioning_GREATER_THAN_OR_EQUALS: code
  versioning_LOWER_THAN: code
  versioning_LOWER_THAN_OR_EQUALS: code
  versioning_NOT_EQUALS: code
  versioning_STARTS_WITH: code
}

input ElementDefinitionTypeProfileChildFilterOption {
  CONTAINS: canonical
  ENDS_WITH: canonical
  EQUALS: canonical
  GREATER_THAN: canonical
  GREATER_THAN_OR_EQUALS: canonical
  LOWER_THAN: canonical
  LOWER_THAN_OR_EQUALS: canonical
  NOT_EQUALS: canonical
  STARTS_WITH: canonical
}

input ElementDefinitionTypeSortOption {
  aggregation: SortDirection
  code: SortDirection
  extension: ExtensionSortOption
  id: SortDirection
  profile: SortDirection
  targetProfile: SortDirection
  versioning: SortDirection
}

input ElementDefinitionTypeTargetProfileChildFilterOption {
  CONTAINS: canonical
  ENDS_WITH: canonical
  EQUALS: canonical
  GREATER_THAN: canonical
  GREATER_THAN_OR_EQUALS: canonical
  LOWER_THAN: canonical
  LOWER_THAN_OR_EQUALS: canonical
  NOT_EQUALS: canonical
  STARTS_WITH: canonical
}

input ElementFilterOption {
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
}

input ElementLogicalFilterOption {
  AND: [ElementLogicalFilterOption!]
  NOT: ElementLogicalFilterOption
  OR: [ElementLogicalFilterOption!]
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
}

input ElementSortOption {
  extension: ExtensionSortOption
  id: SortDirection
}

input EventMessageDefinitionFilterOption {
  description_CONTAINS: String
  description_ENDS_WITH: String
  description_EQUALS: String
  description_GREATER_THAN: String
  description_GREATER_THAN_OR_EQUALS: String
  description_LOWER_THAN: String
  description_LOWER_THAN_OR_EQUALS: String
  description_NOT_EQUALS: String
  description_STARTS_WITH: String
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  implicitRules_CONTAINS: uri
  implicitRules_ENDS_WITH: uri
  implicitRules_EQUALS: uri
  implicitRules_GREATER_THAN: uri
  implicitRules_GREATER_THAN_OR_EQUALS: uri
  implicitRules_LOWER_THAN: uri
  implicitRules_LOWER_THAN_OR_EQUALS: uri
  implicitRules_NOT_EQUALS: uri
  implicitRules_STARTS_WITH: uri
  language_CONTAINS: code
  language_ENDS_WITH: code
  language_EQUALS: code
  language_GREATER_THAN: code
  language_GREATER_THAN_OR_EQUALS: code
  language_LOWER_THAN: code
  language_LOWER_THAN_OR_EQUALS: code
  language_NOT_EQUALS: code
  language_STARTS_WITH: code
  meta: MetaFilterOption
  name_CONTAINS: String
  name_ENDS_WITH: String
  name_EQUALS: String
  name_GREATER_THAN: String
  name_GREATER_THAN_OR_EQUALS: String
  name_LOWER_THAN: String
  name_LOWER_THAN_OR_EQUALS: String
  name_NOT_EQUALS: String
  name_STARTS_WITH: String
  type: StructureDefinitionFilterOption
}

input EventMessageDefinitionLogicalFilterOption {
  AND: [EventMessageDefinitionLogicalFilterOption!]
  NOT: EventMessageDefinitionLogicalFilterOption
  OR: [EventMessageDefinitionLogicalFilterOption!]
  description_CONTAINS: String
  description_ENDS_WITH: String
  description_EQUALS: String
  description_GREATER_THAN: String
  description_GREATER_THAN_OR_EQUALS: String
  description_LOWER_THAN: String
  description_LOWER_THAN_OR_EQUALS: String
  description_NOT_EQUALS: String
  description_STARTS_WITH: String
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  implicitRules_CONTAINS: uri
  implicitRules_ENDS_WITH: uri
  implicitRules_EQUALS: uri
  implicitRules_GREATER_THAN: uri
  implicitRules_GREATER_THAN_OR_EQUALS: uri
  implicitRules_LOWER_THAN: uri
  implicitRules_LOWER_THAN_OR_EQUALS: uri
  implicitRules_NOT_EQUALS: uri
  implicitRules_STARTS_WITH: uri
  language_CONTAINS: code
  language_ENDS_WITH: code
  language_EQUALS: code
  language_GREATER_THAN: code
  language_GREATER_THAN_OR_EQUALS: code
  language_LOWER_THAN: code
  language_LOWER_THAN_OR_EQUALS: code
  language_NOT_EQUALS: code
  language_STARTS_WITH: code
  meta: MetaFilterOption
  name_CONTAINS: String
  name_ENDS_WITH: String
  name_EQUALS: String
  name_GREATER_THAN: String
  name_GREATER_THAN_OR_EQUALS: String
  name_LOWER_THAN: String
  name_LOWER_THAN_OR_EQUALS: String
  name_NOT_EQUALS: String
  name_STARTS_WITH: String
  type: StructureDefinitionFilterOption
}

input EventMessageDefinitionSortOption {
  description: SortDirection
  id: SortDirection
  implicitRules: SortDirection
  language: SortDirection
  meta: MetaSortOption
  name: SortDirection
  type: StructureDefinitionSortOption
}

input ExpressionCommandInput {
  description: String
  expression: String
  extension: [ExtensionCommandInput!]
  id: String
  language: code!
  name: ID
  reference: uri
}

input ExpressionFilterOption {
  description_CONTAINS: String
  description_ENDS_WITH: String
  description_EQUALS: String
  description_GREATER_THAN: String
  description_GREATER_THAN_OR_EQUALS: String
  description_LOWER_THAN: String
  description_LOWER_THAN_OR_EQUALS: String
  description_NOT_EQUALS: String
  description_STARTS_WITH: String
  expression_CONTAINS: String
  expression_ENDS_WITH: String
  expression_EQUALS: String
  expression_GREATER_THAN: String
  expression_GREATER_THAN_OR_EQUALS: String
  expression_LOWER_THAN: String
  expression_LOWER_THAN_OR_EQUALS: String
  expression_NOT_EQUALS: String
  expression_STARTS_WITH: String
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  language_CONTAINS: code
  language_ENDS_WITH: code
  language_EQUALS: code
  language_GREATER_THAN: code
  language_GREATER_THAN_OR_EQUALS: code
  language_LOWER_THAN: code
  language_LOWER_THAN_OR_EQUALS: code
  language_NOT_EQUALS: code
  language_STARTS_WITH: code
  name_CONTAINS: ID
  name_ENDS_WITH: ID
  name_EQUALS: ID
  name_GREATER_THAN: ID
  name_GREATER_THAN_OR_EQUALS: ID
  name_LOWER_THAN: ID
  name_LOWER_THAN_OR_EQUALS: ID
  name_NOT_EQUALS: ID
  name_STARTS_WITH: ID
  reference_CONTAINS: uri
  reference_ENDS_WITH: uri
  reference_EQUALS: uri
  reference_GREATER_THAN: uri
  reference_GREATER_THAN_OR_EQUALS: uri
  reference_LOWER_THAN: uri
  reference_LOWER_THAN_OR_EQUALS: uri
  reference_NOT_EQUALS: uri
  reference_STARTS_WITH: uri
}

input ExpressionLogicalFilterOption {
  AND: [ExpressionLogicalFilterOption!]
  NOT: ExpressionLogicalFilterOption
  OR: [ExpressionLogicalFilterOption!]
  description_CONTAINS: String
  description_ENDS_WITH: String
  description_EQUALS: String
  description_GREATER_THAN: String
  description_GREATER_THAN_OR_EQUALS: String
  description_LOWER_THAN: String
  description_LOWER_THAN_OR_EQUALS: String
  description_NOT_EQUALS: String
  description_STARTS_WITH: String
  expression_CONTAINS: String
  expression_ENDS_WITH: String
  expression_EQUALS: String
  expression_GREATER_THAN: String
  expression_GREATER_THAN_OR_EQUALS: String
  expression_LOWER_THAN: String
  expression_LOWER_THAN_OR_EQUALS: String
  expression_NOT_EQUALS: String
  expression_STARTS_WITH: String
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  language_CONTAINS: code
  language_ENDS_WITH: code
  language_EQUALS: code
  language_GREATER_THAN: code
  language_GREATER_THAN_OR_EQUALS: code
  language_LOWER_THAN: code
  language_LOWER_THAN_OR_EQUALS: code
  language_NOT_EQUALS: code
  language_STARTS_WITH: code
  name_CONTAINS: ID
  name_ENDS_WITH: ID
  name_EQUALS: ID
  name_GREATER_THAN: ID
  name_GREATER_THAN_OR_EQUALS: ID
  name_LOWER_THAN: ID
  name_LOWER_THAN_OR_EQUALS: ID
  name_NOT_EQUALS: ID
  name_STARTS_WITH: ID
  reference_CONTAINS: uri
  reference_ENDS_WITH: uri
  reference_EQUALS: uri
  reference_GREATER_THAN: uri
  reference_GREATER_THAN_OR_EQUALS: uri
  reference_LOWER_THAN: uri
  reference_LOWER_THAN_OR_EQUALS: uri
  reference_NOT_EQUALS: uri
  reference_STARTS_WITH: uri
}

input ExpressionSortOption {
  description: SortDirection
  expression: SortDirection
  extension: ExtensionSortOption
  id: SortDirection
  language: SortDirection
  name: SortDirection
  reference: SortDirection
}

input ExtensionCommandInput {
  extension: [ExtensionCommandInput!]
  id: String
  url: String!
  value: ExtensionCommandInputValue
}

"Generated Input Type, which works as a Union type. Only one field should be filled."
input ExtensionCommandInputValue {
  CodeableConcept: CodeableConceptCommandInput
  CodeableReference: CodeableReferenceCommandInput
  Coding: CodingCommandInput
  DataRequirement: DataRequirementCommandInput
  Expression: ExpressionCommandInput
  Identifier: IdentifierCommandInput
  ParameterDefinition: ParameterDefinitionCommandInput
  Period: PeriodCommandInput
  Quantity: QuantityCommandInput
  Reference: ID
  SimpleQuantity: SimpleQuantityCommandInput
  TriggerDefinition: TriggerDefinitionCommandInput
  base64Binary: base64Binary
  boolean: Boolean
  canonical: canonical
  code: code
  date: date
  dateTime: dateTime
  decimal: Float
  id: ID
  instant: instant
  integer: Int
  markdown: markdown
  oid: oid
  positiveInt: positiveInt
  string: String
  time: time
  unsignedInt: unsignedInt
  uri: uri
  url: url
  uuid: uuid
}

input ExtensionFilterOption {
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  url_CONTAINS: String
  url_ENDS_WITH: String
  url_EQUALS: String
  url_GREATER_THAN: String
  url_GREATER_THAN_OR_EQUALS: String
  url_LOWER_THAN: String
  url_LOWER_THAN_OR_EQUALS: String
  url_NOT_EQUALS: String
  url_STARTS_WITH: String
}

input ExtensionLogicalFilterOption {
  AND: [ExtensionLogicalFilterOption!]
  NOT: ExtensionLogicalFilterOption
  OR: [ExtensionLogicalFilterOption!]
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  url_CONTAINS: String
  url_ENDS_WITH: String
  url_EQUALS: String
  url_GREATER_THAN: String
  url_GREATER_THAN_OR_EQUALS: String
  url_LOWER_THAN: String
  url_LOWER_THAN_OR_EQUALS: String
  url_NOT_EQUALS: String
  url_STARTS_WITH: String
}

input ExtensionSortOption {
  extension: ExtensionSortOption
  id: SortDirection
  url: SortDirection
}

input IdentifierCommandInput {
  extension: [ExtensionCommandInput!]
  id: String
  period: PeriodCommandInput
  system: uri
  type: CodeableConceptCommandInput
  use: code
  value: String
}

input IdentifierFilterOption {
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  period: PeriodFilterOption
  system_CONTAINS: uri
  system_ENDS_WITH: uri
  system_EQUALS: uri
  system_GREATER_THAN: uri
  system_GREATER_THAN_OR_EQUALS: uri
  system_LOWER_THAN: uri
  system_LOWER_THAN_OR_EQUALS: uri
  system_NOT_EQUALS: uri
  system_STARTS_WITH: uri
  type: CodeableConceptFilterOption
  use_CONTAINS: code
  use_ENDS_WITH: code
  use_EQUALS: code
  use_GREATER_THAN: code
  use_GREATER_THAN_OR_EQUALS: code
  use_LOWER_THAN: code
  use_LOWER_THAN_OR_EQUALS: code
  use_NOT_EQUALS: code
  use_STARTS_WITH: code
  value_CONTAINS: String
  value_ENDS_WITH: String
  value_EQUALS: String
  value_GREATER_THAN: String
  value_GREATER_THAN_OR_EQUALS: String
  value_LOWER_THAN: String
  value_LOWER_THAN_OR_EQUALS: String
  value_NOT_EQUALS: String
  value_STARTS_WITH: String
}

input IdentifierLogicalFilterOption {
  AND: [IdentifierLogicalFilterOption!]
  NOT: IdentifierLogicalFilterOption
  OR: [IdentifierLogicalFilterOption!]
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  period: PeriodFilterOption
  system_CONTAINS: uri
  system_ENDS_WITH: uri
  system_EQUALS: uri
  system_GREATER_THAN: uri
  system_GREATER_THAN_OR_EQUALS: uri
  system_LOWER_THAN: uri
  system_LOWER_THAN_OR_EQUALS: uri
  system_NOT_EQUALS: uri
  system_STARTS_WITH: uri
  type: CodeableConceptFilterOption
  use_CONTAINS: code
  use_ENDS_WITH: code
  use_EQUALS: code
  use_GREATER_THAN: code
  use_GREATER_THAN_OR_EQUALS: code
  use_LOWER_THAN: code
  use_LOWER_THAN_OR_EQUALS: code
  use_NOT_EQUALS: code
  use_STARTS_WITH: code
  value_CONTAINS: String
  value_ENDS_WITH: String
  value_EQUALS: String
  value_GREATER_THAN: String
  value_GREATER_THAN_OR_EQUALS: String
  value_LOWER_THAN: String
  value_LOWER_THAN_OR_EQUALS: String
  value_NOT_EQUALS: String
  value_STARTS_WITH: String
}

input IdentifierSortOption {
  extension: ExtensionSortOption
  id: SortDirection
  period: PeriodSortOption
  system: SortDirection
  type: CodeableConceptSortOption
  use: SortDirection
  value: SortDirection
}

input MetaCommandInput {
  extension: [ExtensionCommandInput!]
  id: String
  lastUpdated: instant
  profile: [canonical!]
  security: [CodingCommandInput!]
  source: uri
  tag: [CodingCommandInput!]
  versionId: ID
}

input MetaFilterOption {
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  lastUpdated_EQUALS: instant
  lastUpdated_GREATER_THAN: instant
  lastUpdated_GREATER_THAN_OR_EQUALS: instant
  lastUpdated_LOWER_THAN: instant
  lastUpdated_LOWER_THAN_OR_EQUALS: instant
  lastUpdated_NOT_EQUALS: instant
  profile_ALL_MATCH: MetaProfileChildFilterOption
  profile_ANY_MATCH: MetaProfileChildFilterOption
  profile_EQUALS: [canonical!]
  profile_NONE_MATCH: MetaProfileChildFilterOption
  profile_NOT_EQUALS: [canonical!]
  security_ALL_MATCH: CodingFilterOption
  security_ANY_MATCH: CodingFilterOption
  security_NONE_MATCH: CodingFilterOption
  source_CONTAINS: uri
  source_ENDS_WITH: uri
  source_EQUALS: uri
  source_GREATER_THAN: uri
  source_GREATER_THAN_OR_EQUALS: uri
  source_LOWER_THAN: uri
  source_LOWER_THAN_OR_EQUALS: uri
  source_NOT_EQUALS: uri
  source_STARTS_WITH: uri
  tag_ALL_MATCH: CodingFilterOption
  tag_ANY_MATCH: CodingFilterOption
  tag_NONE_MATCH: CodingFilterOption
  versionId_CONTAINS: ID
  versionId_ENDS_WITH: ID
  versionId_EQUALS: ID
  versionId_GREATER_THAN: ID
  versionId_GREATER_THAN_OR_EQUALS: ID
  versionId_LOWER_THAN: ID
  versionId_LOWER_THAN_OR_EQUALS: ID
  versionId_NOT_EQUALS: ID
  versionId_STARTS_WITH: ID
}

input MetaLogicalFilterOption {
  AND: [MetaLogicalFilterOption!]
  NOT: MetaLogicalFilterOption
  OR: [MetaLogicalFilterOption!]
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  lastUpdated_EQUALS: instant
  lastUpdated_GREATER_THAN: instant
  lastUpdated_GREATER_THAN_OR_EQUALS: instant
  lastUpdated_LOWER_THAN: instant
  lastUpdated_LOWER_THAN_OR_EQUALS: instant
  lastUpdated_NOT_EQUALS: instant
  profile_ALL_MATCH: MetaProfileChildFilterOption
  profile_ANY_MATCH: MetaProfileChildFilterOption
  profile_EQUALS: [canonical!]
  profile_NONE_MATCH: MetaProfileChildFilterOption
  profile_NOT_EQUALS: [canonical!]
  security_ALL_MATCH: CodingFilterOption
  security_ANY_MATCH: CodingFilterOption
  security_NONE_MATCH: CodingFilterOption
  source_CONTAINS: uri
  source_ENDS_WITH: uri
  source_EQUALS: uri
  source_GREATER_THAN: uri
  source_GREATER_THAN_OR_EQUALS: uri
  source_LOWER_THAN: uri
  source_LOWER_THAN_OR_EQUALS: uri
  source_NOT_EQUALS: uri
  source_STARTS_WITH: uri
  tag_ALL_MATCH: CodingFilterOption
  tag_ANY_MATCH: CodingFilterOption
  tag_NONE_MATCH: CodingFilterOption
  versionId_CONTAINS: ID
  versionId_ENDS_WITH: ID
  versionId_EQUALS: ID
  versionId_GREATER_THAN: ID
  versionId_GREATER_THAN_OR_EQUALS: ID
  versionId_LOWER_THAN: ID
  versionId_LOWER_THAN_OR_EQUALS: ID
  versionId_NOT_EQUALS: ID
  versionId_STARTS_WITH: ID
}

input MetaProfileChildFilterOption {
  CONTAINS: canonical
  ENDS_WITH: canonical
  EQUALS: canonical
  GREATER_THAN: canonical
  GREATER_THAN_OR_EQUALS: canonical
  LOWER_THAN: canonical
  LOWER_THAN_OR_EQUALS: canonical
  NOT_EQUALS: canonical
  STARTS_WITH: canonical
}

input MetaSortOption {
  extension: ExtensionSortOption
  id: SortDirection
  lastUpdated: SortDirection
  profile: SortDirection
  security: CodingSortOption
  source: SortDirection
  tag: CodingSortOption
  versionId: SortDirection
}

input NarrativeCommandInput {
  div: xhtml!
  extension: [ExtensionCommandInput!]
  id: String
  status: code!
}

input NarrativeFilterOption {
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  status_CONTAINS: code
  status_ENDS_WITH: code
  status_EQUALS: code
  status_GREATER_THAN: code
  status_GREATER_THAN_OR_EQUALS: code
  status_LOWER_THAN: code
  status_LOWER_THAN_OR_EQUALS: code
  status_NOT_EQUALS: code
  status_STARTS_WITH: code
}

input NarrativeLogicalFilterOption {
  AND: [NarrativeLogicalFilterOption!]
  NOT: NarrativeLogicalFilterOption
  OR: [NarrativeLogicalFilterOption!]
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  status_CONTAINS: code
  status_ENDS_WITH: code
  status_EQUALS: code
  status_GREATER_THAN: code
  status_GREATER_THAN_OR_EQUALS: code
  status_LOWER_THAN: code
  status_LOWER_THAN_OR_EQUALS: code
  status_NOT_EQUALS: code
  status_STARTS_WITH: code
}

input NarrativeSortOption {
  div: SortDirection
  extension: ExtensionSortOption
  id: SortDirection
  status: SortDirection
}

input OffsetPaginationOption {
  limit: Int!
  offset: Int!
}

input OperationDefinitionContactChildFilterOption {
  CONTAINS: String
  ENDS_WITH: String
  EQUALS: String
  GREATER_THAN: String
  GREATER_THAN_OR_EQUALS: String
  LOWER_THAN: String
  LOWER_THAN_OR_EQUALS: String
  NOT_EQUALS: String
  STARTS_WITH: String
}

input OperationDefinitionFilterOption {
  affectsState_EQUALS: Boolean
  affectsState_NOT_EQUALS: Boolean
  base_CONTAINS: canonical
  base_ENDS_WITH: canonical
  base_EQUALS: canonical
  base_GREATER_THAN: canonical
  base_GREATER_THAN_OR_EQUALS: canonical
  base_LOWER_THAN: canonical
  base_LOWER_THAN_OR_EQUALS: canonical
  base_NOT_EQUALS: canonical
  base_STARTS_WITH: canonical
  code_CONTAINS: code
  code_ENDS_WITH: code
  code_EQUALS: code
  code_GREATER_THAN: code
  code_GREATER_THAN_OR_EQUALS: code
  code_LOWER_THAN: code
  code_LOWER_THAN_OR_EQUALS: code
  code_NOT_EQUALS: code
  code_STARTS_WITH: code
  comment_CONTAINS: markdown
  comment_ENDS_WITH: markdown
  comment_EQUALS: markdown
  comment_GREATER_THAN: markdown
  comment_GREATER_THAN_OR_EQUALS: markdown
  comment_LOWER_THAN: markdown
  comment_LOWER_THAN_OR_EQUALS: markdown
  comment_NOT_EQUALS: markdown
  comment_STARTS_WITH: markdown
  contact_ALL_MATCH: OperationDefinitionContactChildFilterOption
  contact_ANY_MATCH: OperationDefinitionContactChildFilterOption
  contact_EQUALS: [String!]
  contact_NONE_MATCH: OperationDefinitionContactChildFilterOption
  contact_NOT_EQUALS: [String!]
  contained_ALL_MATCH: ResourceFilterOption
  contained_ANY_MATCH: ResourceFilterOption
  contained_NONE_MATCH: ResourceFilterOption
  date_EQUALS: dateTime
  date_GREATER_THAN: dateTime
  date_GREATER_THAN_OR_EQUALS: dateTime
  date_LOWER_THAN: dateTime
  date_LOWER_THAN_OR_EQUALS: dateTime
  date_NOT_EQUALS: dateTime
  description_CONTAINS: markdown
  description_ENDS_WITH: markdown
  description_EQUALS: markdown
  description_GREATER_THAN: markdown
  description_GREATER_THAN_OR_EQUALS: markdown
  description_LOWER_THAN: markdown
  description_LOWER_THAN_OR_EQUALS: markdown
  description_NOT_EQUALS: markdown
  description_STARTS_WITH: markdown
  experimental_EQUALS: Boolean
  experimental_NOT_EQUALS: Boolean
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  implicitRules_CONTAINS: uri
  implicitRules_ENDS_WITH: uri
  implicitRules_EQUALS: uri
  implicitRules_GREATER_THAN: uri
  implicitRules_GREATER_THAN_OR_EQUALS: uri
  implicitRules_LOWER_THAN: uri
  implicitRules_LOWER_THAN_OR_EQUALS: uri
  implicitRules_NOT_EQUALS: uri
  implicitRules_STARTS_WITH: uri
  inputProfile_CONTAINS: canonical
  inputProfile_ENDS_WITH: canonical
  inputProfile_EQUALS: canonical
  inputProfile_GREATER_THAN: canonical
  inputProfile_GREATER_THAN_OR_EQUALS: canonical
  inputProfile_LOWER_THAN: canonical
  inputProfile_LOWER_THAN_OR_EQUALS: canonical
  inputProfile_NOT_EQUALS: canonical
  inputProfile_STARTS_WITH: canonical
  instance_EQUALS: Boolean
  instance_NOT_EQUALS: Boolean
  jurisdiction_ALL_MATCH: CodeableConceptFilterOption
  jurisdiction_ANY_MATCH: CodeableConceptFilterOption
  jurisdiction_NONE_MATCH: CodeableConceptFilterOption
  kind_CONTAINS: code
  kind_ENDS_WITH: code
  kind_EQUALS: code
  kind_GREATER_THAN: code
  kind_GREATER_THAN_OR_EQUALS: code
  kind_LOWER_THAN: code
  kind_LOWER_THAN_OR_EQUALS: code
  kind_NOT_EQUALS: code
  kind_STARTS_WITH: code
  language_CONTAINS: code
  language_ENDS_WITH: code
  language_EQUALS: code
  language_GREATER_THAN: code
  language_GREATER_THAN_OR_EQUALS: code
  language_LOWER_THAN: code
  language_LOWER_THAN_OR_EQUALS: code
  language_NOT_EQUALS: code
  language_STARTS_WITH: code
  meta: MetaFilterOption
  modifierExtension_ALL_MATCH: ExtensionFilterOption
  modifierExtension_ANY_MATCH: ExtensionFilterOption
  modifierExtension_NONE_MATCH: ExtensionFilterOption
  name_CONTAINS: String
  name_ENDS_WITH: String
  name_EQUALS: String
  name_GREATER_THAN: String
  name_GREATER_THAN_OR_EQUALS: String
  name_LOWER_THAN: String
  name_LOWER_THAN_OR_EQUALS: String
  name_NOT_EQUALS: String
  name_STARTS_WITH: String
  outputProfile_CONTAINS: canonical
  outputProfile_ENDS_WITH: canonical
  outputProfile_EQUALS: canonical
  outputProfile_GREATER_THAN: canonical
  outputProfile_GREATER_THAN_OR_EQUALS: canonical
  outputProfile_LOWER_THAN: canonical
  outputProfile_LOWER_THAN_OR_EQUALS: canonical
  outputProfile_NOT_EQUALS: canonical
  outputProfile_STARTS_WITH: canonical
  overload_ALL_MATCH: OperationDefinitionOverloadFilterOption
  overload_ANY_MATCH: OperationDefinitionOverloadFilterOption
  overload_NONE_MATCH: OperationDefinitionOverloadFilterOption
  parameter_ALL_MATCH: OperationDefinitionParameterFilterOption
  parameter_ANY_MATCH: OperationDefinitionParameterFilterOption
  parameter_NONE_MATCH: OperationDefinitionParameterFilterOption
  publisher_CONTAINS: String
  publisher_ENDS_WITH: String
  publisher_EQUALS: String
  publisher_GREATER_THAN: String
  publisher_GREATER_THAN_OR_EQUALS: String
  publisher_LOWER_THAN: String
  publisher_LOWER_THAN_OR_EQUALS: String
  publisher_NOT_EQUALS: String
  publisher_STARTS_WITH: String
  purpose_CONTAINS: markdown
  purpose_ENDS_WITH: markdown
  purpose_EQUALS: markdown
  purpose_GREATER_THAN: markdown
  purpose_GREATER_THAN_OR_EQUALS: markdown
  purpose_LOWER_THAN: markdown
  purpose_LOWER_THAN_OR_EQUALS: markdown
  purpose_NOT_EQUALS: markdown
  purpose_STARTS_WITH: markdown
  resource_ALL_MATCH: OperationDefinitionResourceChildFilterOption
  resource_ANY_MATCH: OperationDefinitionResourceChildFilterOption
  resource_EQUALS: [code!]
  resource_NONE_MATCH: OperationDefinitionResourceChildFilterOption
  resource_NOT_EQUALS: [code!]
  status_CONTAINS: code
  status_ENDS_WITH: code
  status_EQUALS: code
  status_GREATER_THAN: code
  status_GREATER_THAN_OR_EQUALS: code
  status_LOWER_THAN: code
  status_LOWER_THAN_OR_EQUALS: code
  status_NOT_EQUALS: code
  status_STARTS_WITH: code
  system_EQUALS: Boolean
  system_NOT_EQUALS: Boolean
  text: NarrativeFilterOption
  title_CONTAINS: String
  title_ENDS_WITH: String
  title_EQUALS: String
  title_GREATER_THAN: String
  title_GREATER_THAN_OR_EQUALS: String
  title_LOWER_THAN: String
  title_LOWER_THAN_OR_EQUALS: String
  title_NOT_EQUALS: String
  title_STARTS_WITH: String
  type_EQUALS: Boolean
  type_NOT_EQUALS: Boolean
  url_CONTAINS: uri
  url_ENDS_WITH: uri
  url_EQUALS: uri
  url_GREATER_THAN: uri
  url_GREATER_THAN_OR_EQUALS: uri
  url_LOWER_THAN: uri
  url_LOWER_THAN_OR_EQUALS: uri
  url_NOT_EQUALS: uri
  url_STARTS_WITH: uri
  useContext_ALL_MATCH: UsageContextFilterOption
  useContext_ANY_MATCH: UsageContextFilterOption
  useContext_NONE_MATCH: UsageContextFilterOption
  version_CONTAINS: String
  version_ENDS_WITH: String
  version_EQUALS: String
  version_GREATER_THAN: String
  version_GREATER_THAN_OR_EQUALS: String
  version_LOWER_THAN: String
  version_LOWER_THAN_OR_EQUALS: String
  version_NOT_EQUALS: String
  version_STARTS_WITH: String
}

input OperationDefinitionLogicalFilterOption {
  AND: [OperationDefinitionLogicalFilterOption!]
  NOT: OperationDefinitionLogicalFilterOption
  OR: [OperationDefinitionLogicalFilterOption!]
  affectsState_EQUALS: Boolean
  affectsState_NOT_EQUALS: Boolean
  base_CONTAINS: canonical
  base_ENDS_WITH: canonical
  base_EQUALS: canonical
  base_GREATER_THAN: canonical
  base_GREATER_THAN_OR_EQUALS: canonical
  base_LOWER_THAN: canonical
  base_LOWER_THAN_OR_EQUALS: canonical
  base_NOT_EQUALS: canonical
  base_STARTS_WITH: canonical
  code_CONTAINS: code
  code_ENDS_WITH: code
  code_EQUALS: code
  code_GREATER_THAN: code
  code_GREATER_THAN_OR_EQUALS: code
  code_LOWER_THAN: code
  code_LOWER_THAN_OR_EQUALS: code
  code_NOT_EQUALS: code
  code_STARTS_WITH: code
  comment_CONTAINS: markdown
  comment_ENDS_WITH: markdown
  comment_EQUALS: markdown
  comment_GREATER_THAN: markdown
  comment_GREATER_THAN_OR_EQUALS: markdown
  comment_LOWER_THAN: markdown
  comment_LOWER_THAN_OR_EQUALS: markdown
  comment_NOT_EQUALS: markdown
  comment_STARTS_WITH: markdown
  contact_ALL_MATCH: OperationDefinitionContactChildFilterOption
  contact_ANY_MATCH: OperationDefinitionContactChildFilterOption
  contact_EQUALS: [String!]
  contact_NONE_MATCH: OperationDefinitionContactChildFilterOption
  contact_NOT_EQUALS: [String!]
  contained_ALL_MATCH: ResourceFilterOption
  contained_ANY_MATCH: ResourceFilterOption
  contained_NONE_MATCH: ResourceFilterOption
  date_EQUALS: dateTime
  date_GREATER_THAN: dateTime
  date_GREATER_THAN_OR_EQUALS: dateTime
  date_LOWER_THAN: dateTime
  date_LOWER_THAN_OR_EQUALS: dateTime
  date_NOT_EQUALS: dateTime
  description_CONTAINS: markdown
  description_ENDS_WITH: markdown
  description_EQUALS: markdown
  description_GREATER_THAN: markdown
  description_GREATER_THAN_OR_EQUALS: markdown
  description_LOWER_THAN: markdown
  description_LOWER_THAN_OR_EQUALS: markdown
  description_NOT_EQUALS: markdown
  description_STARTS_WITH: markdown
  experimental_EQUALS: Boolean
  experimental_NOT_EQUALS: Boolean
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  implicitRules_CONTAINS: uri
  implicitRules_ENDS_WITH: uri
  implicitRules_EQUALS: uri
  implicitRules_GREATER_THAN: uri
  implicitRules_GREATER_THAN_OR_EQUALS: uri
  implicitRules_LOWER_THAN: uri
  implicitRules_LOWER_THAN_OR_EQUALS: uri
  implicitRules_NOT_EQUALS: uri
  implicitRules_STARTS_WITH: uri
  inputProfile_CONTAINS: canonical
  inputProfile_ENDS_WITH: canonical
  inputProfile_EQUALS: canonical
  inputProfile_GREATER_THAN: canonical
  inputProfile_GREATER_THAN_OR_EQUALS: canonical
  inputProfile_LOWER_THAN: canonical
  inputProfile_LOWER_THAN_OR_EQUALS: canonical
  inputProfile_NOT_EQUALS: canonical
  inputProfile_STARTS_WITH: canonical
  instance_EQUALS: Boolean
  instance_NOT_EQUALS: Boolean
  jurisdiction_ALL_MATCH: CodeableConceptFilterOption
  jurisdiction_ANY_MATCH: CodeableConceptFilterOption
  jurisdiction_NONE_MATCH: CodeableConceptFilterOption
  kind_CONTAINS: code
  kind_ENDS_WITH: code
  kind_EQUALS: code
  kind_GREATER_THAN: code
  kind_GREATER_THAN_OR_EQUALS: code
  kind_LOWER_THAN: code
  kind_LOWER_THAN_OR_EQUALS: code
  kind_NOT_EQUALS: code
  kind_STARTS_WITH: code
  language_CONTAINS: code
  language_ENDS_WITH: code
  language_EQUALS: code
  language_GREATER_THAN: code
  language_GREATER_THAN_OR_EQUALS: code
  language_LOWER_THAN: code
  language_LOWER_THAN_OR_EQUALS: code
  language_NOT_EQUALS: code
  language_STARTS_WITH: code
  meta: MetaFilterOption
  modifierExtension_ALL_MATCH: ExtensionFilterOption
  modifierExtension_ANY_MATCH: ExtensionFilterOption
  modifierExtension_NONE_MATCH: ExtensionFilterOption
  name_CONTAINS: String
  name_ENDS_WITH: String
  name_EQUALS: String
  name_GREATER_THAN: String
  name_GREATER_THAN_OR_EQUALS: String
  name_LOWER_THAN: String
  name_LOWER_THAN_OR_EQUALS: String
  name_NOT_EQUALS: String
  name_STARTS_WITH: String
  outputProfile_CONTAINS: canonical
  outputProfile_ENDS_WITH: canonical
  outputProfile_EQUALS: canonical
  outputProfile_GREATER_THAN: canonical
  outputProfile_GREATER_THAN_OR_EQUALS: canonical
  outputProfile_LOWER_THAN: canonical
  outputProfile_LOWER_THAN_OR_EQUALS: canonical
  outputProfile_NOT_EQUALS: canonical
  outputProfile_STARTS_WITH: canonical
  overload_ALL_MATCH: OperationDefinitionOverloadFilterOption
  overload_ANY_MATCH: OperationDefinitionOverloadFilterOption
  overload_NONE_MATCH: OperationDefinitionOverloadFilterOption
  parameter_ALL_MATCH: OperationDefinitionParameterFilterOption
  parameter_ANY_MATCH: OperationDefinitionParameterFilterOption
  parameter_NONE_MATCH: OperationDefinitionParameterFilterOption
  publisher_CONTAINS: String
  publisher_ENDS_WITH: String
  publisher_EQUALS: String
  publisher_GREATER_THAN: String
  publisher_GREATER_THAN_OR_EQUALS: String
  publisher_LOWER_THAN: String
  publisher_LOWER_THAN_OR_EQUALS: String
  publisher_NOT_EQUALS: String
  publisher_STARTS_WITH: String
  purpose_CONTAINS: markdown
  purpose_ENDS_WITH: markdown
  purpose_EQUALS: markdown
  purpose_GREATER_THAN: markdown
  purpose_GREATER_THAN_OR_EQUALS: markdown
  purpose_LOWER_THAN: markdown
  purpose_LOWER_THAN_OR_EQUALS: markdown
  purpose_NOT_EQUALS: markdown
  purpose_STARTS_WITH: markdown
  resource_ALL_MATCH: OperationDefinitionResourceChildFilterOption
  resource_ANY_MATCH: OperationDefinitionResourceChildFilterOption
  resource_EQUALS: [code!]
  resource_NONE_MATCH: OperationDefinitionResourceChildFilterOption
  resource_NOT_EQUALS: [code!]
  status_CONTAINS: code
  status_ENDS_WITH: code
  status_EQUALS: code
  status_GREATER_THAN: code
  status_GREATER_THAN_OR_EQUALS: code
  status_LOWER_THAN: code
  status_LOWER_THAN_OR_EQUALS: code
  status_NOT_EQUALS: code
  status_STARTS_WITH: code
  system_EQUALS: Boolean
  system_NOT_EQUALS: Boolean
  text: NarrativeFilterOption
  title_CONTAINS: String
  title_ENDS_WITH: String
  title_EQUALS: String
  title_GREATER_THAN: String
  title_GREATER_THAN_OR_EQUALS: String
  title_LOWER_THAN: String
  title_LOWER_THAN_OR_EQUALS: String
  title_NOT_EQUALS: String
  title_STARTS_WITH: String
  type_EQUALS: Boolean
  type_NOT_EQUALS: Boolean
  url_CONTAINS: uri
  url_ENDS_WITH: uri
  url_EQUALS: uri
  url_GREATER_THAN: uri
  url_GREATER_THAN_OR_EQUALS: uri
  url_LOWER_THAN: uri
  url_LOWER_THAN_OR_EQUALS: uri
  url_NOT_EQUALS: uri
  url_STARTS_WITH: uri
  useContext_ALL_MATCH: UsageContextFilterOption
  useContext_ANY_MATCH: UsageContextFilterOption
  useContext_NONE_MATCH: UsageContextFilterOption
  version_CONTAINS: String
  version_ENDS_WITH: String
  version_EQUALS: String
  version_GREATER_THAN: String
  version_GREATER_THAN_OR_EQUALS: String
  version_LOWER_THAN: String
  version_LOWER_THAN_OR_EQUALS: String
  version_NOT_EQUALS: String
  version_STARTS_WITH: String
}

input OperationDefinitionOverloadCommandInput {
  comment: String
  extension: [ExtensionCommandInput!]
  id: String
  modifierExtension: [ExtensionCommandInput!]
  parameterName: [String!]
}

input OperationDefinitionOverloadFilterOption {
  comment_CONTAINS: String
  comment_ENDS_WITH: String
  comment_EQUALS: String
  comment_GREATER_THAN: String
  comment_GREATER_THAN_OR_EQUALS: String
  comment_LOWER_THAN: String
  comment_LOWER_THAN_OR_EQUALS: String
  comment_NOT_EQUALS: String
  comment_STARTS_WITH: String
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  modifierExtension_ALL_MATCH: ExtensionFilterOption
  modifierExtension_ANY_MATCH: ExtensionFilterOption
  modifierExtension_NONE_MATCH: ExtensionFilterOption
  parameterName_ALL_MATCH: OperationDefinitionOverloadParameterNameChildFilterOption
  parameterName_ANY_MATCH: OperationDefinitionOverloadParameterNameChildFilterOption
  parameterName_EQUALS: [String!]
  parameterName_NONE_MATCH: OperationDefinitionOverloadParameterNameChildFilterOption
  parameterName_NOT_EQUALS: [String!]
}

input OperationDefinitionOverloadLogicalFilterOption {
  AND: [OperationDefinitionOverloadLogicalFilterOption!]
  NOT: OperationDefinitionOverloadLogicalFilterOption
  OR: [OperationDefinitionOverloadLogicalFilterOption!]
  comment_CONTAINS: String
  comment_ENDS_WITH: String
  comment_EQUALS: String
  comment_GREATER_THAN: String
  comment_GREATER_THAN_OR_EQUALS: String
  comment_LOWER_THAN: String
  comment_LOWER_THAN_OR_EQUALS: String
  comment_NOT_EQUALS: String
  comment_STARTS_WITH: String
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  modifierExtension_ALL_MATCH: ExtensionFilterOption
  modifierExtension_ANY_MATCH: ExtensionFilterOption
  modifierExtension_NONE_MATCH: ExtensionFilterOption
  parameterName_ALL_MATCH: OperationDefinitionOverloadParameterNameChildFilterOption
  parameterName_ANY_MATCH: OperationDefinitionOverloadParameterNameChildFilterOption
  parameterName_EQUALS: [String!]
  parameterName_NONE_MATCH: OperationDefinitionOverloadParameterNameChildFilterOption
  parameterName_NOT_EQUALS: [String!]
}

input OperationDefinitionOverloadParameterNameChildFilterOption {
  CONTAINS: String
  ENDS_WITH: String
  EQUALS: String
  GREATER_THAN: String
  GREATER_THAN_OR_EQUALS: String
  LOWER_THAN: String
  LOWER_THAN_OR_EQUALS: String
  NOT_EQUALS: String
  STARTS_WITH: String
}

input OperationDefinitionOverloadSortOption {
  comment: SortDirection
  extension: ExtensionSortOption
  id: SortDirection
  modifierExtension: ExtensionSortOption
  parameterName: SortDirection
}

input OperationDefinitionParameterBindingCommandInput {
  extension: [ExtensionCommandInput!]
  id: String
  modifierExtension: [ExtensionCommandInput!]
  strength: code!
  valueSet: canonical!
}

input OperationDefinitionParameterBindingFilterOption {
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  modifierExtension_ALL_MATCH: ExtensionFilterOption
  modifierExtension_ANY_MATCH: ExtensionFilterOption
  modifierExtension_NONE_MATCH: ExtensionFilterOption
  strength_CONTAINS: code
  strength_ENDS_WITH: code
  strength_EQUALS: code
  strength_GREATER_THAN: code
  strength_GREATER_THAN_OR_EQUALS: code
  strength_LOWER_THAN: code
  strength_LOWER_THAN_OR_EQUALS: code
  strength_NOT_EQUALS: code
  strength_STARTS_WITH: code
  valueSet_CONTAINS: canonical
  valueSet_ENDS_WITH: canonical
  valueSet_EQUALS: canonical
  valueSet_GREATER_THAN: canonical
  valueSet_GREATER_THAN_OR_EQUALS: canonical
  valueSet_LOWER_THAN: canonical
  valueSet_LOWER_THAN_OR_EQUALS: canonical
  valueSet_NOT_EQUALS: canonical
  valueSet_STARTS_WITH: canonical
}

input OperationDefinitionParameterBindingLogicalFilterOption {
  AND: [OperationDefinitionParameterBindingLogicalFilterOption!]
  NOT: OperationDefinitionParameterBindingLogicalFilterOption
  OR: [OperationDefinitionParameterBindingLogicalFilterOption!]
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  modifierExtension_ALL_MATCH: ExtensionFilterOption
  modifierExtension_ANY_MATCH: ExtensionFilterOption
  modifierExtension_NONE_MATCH: ExtensionFilterOption
  strength_CONTAINS: code
  strength_ENDS_WITH: code
  strength_EQUALS: code
  strength_GREATER_THAN: code
  strength_GREATER_THAN_OR_EQUALS: code
  strength_LOWER_THAN: code
  strength_LOWER_THAN_OR_EQUALS: code
  strength_NOT_EQUALS: code
  strength_STARTS_WITH: code
  valueSet_CONTAINS: canonical
  valueSet_ENDS_WITH: canonical
  valueSet_EQUALS: canonical
  valueSet_GREATER_THAN: canonical
  valueSet_GREATER_THAN_OR_EQUALS: canonical
  valueSet_LOWER_THAN: canonical
  valueSet_LOWER_THAN_OR_EQUALS: canonical
  valueSet_NOT_EQUALS: canonical
  valueSet_STARTS_WITH: canonical
}

input OperationDefinitionParameterBindingSortOption {
  extension: ExtensionSortOption
  id: SortDirection
  modifierExtension: ExtensionSortOption
  strength: SortDirection
  valueSet: SortDirection
}

input OperationDefinitionParameterCommandInput {
  binding: OperationDefinitionParameterBindingCommandInput
  documentation: String
  extension: [ExtensionCommandInput!]
  id: String
  max: String!
  min: Int!
  modifierExtension: [ExtensionCommandInput!]
  name: code!
  part: [OperationDefinitionParameterCommandInput!]
  referencedFrom: [OperationDefinitionParameterReferencedFromCommandInput!]
  searchType: code
  targetProfile: [canonical!]
  targetProfileReference: [ID!]
  type: code
  use: code!
}

input OperationDefinitionParameterFilterOption {
  binding: OperationDefinitionParameterBindingFilterOption
  documentation_CONTAINS: String
  documentation_ENDS_WITH: String
  documentation_EQUALS: String
  documentation_GREATER_THAN: String
  documentation_GREATER_THAN_OR_EQUALS: String
  documentation_LOWER_THAN: String
  documentation_LOWER_THAN_OR_EQUALS: String
  documentation_NOT_EQUALS: String
  documentation_STARTS_WITH: String
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  max_CONTAINS: String
  max_ENDS_WITH: String
  max_EQUALS: String
  max_GREATER_THAN: String
  max_GREATER_THAN_OR_EQUALS: String
  max_LOWER_THAN: String
  max_LOWER_THAN_OR_EQUALS: String
  max_NOT_EQUALS: String
  max_STARTS_WITH: String
  min_EQUALS: Int
  min_GREATER_THAN: Int
  min_GREATER_THAN_OR_EQUALS: Int
  min_LOWER_THAN: Int
  min_LOWER_THAN_OR_EQUALS: Int
  min_NOT_EQUALS: Int
  modifierExtension_ALL_MATCH: ExtensionFilterOption
  modifierExtension_ANY_MATCH: ExtensionFilterOption
  modifierExtension_NONE_MATCH: ExtensionFilterOption
  name_CONTAINS: code
  name_ENDS_WITH: code
  name_EQUALS: code
  name_GREATER_THAN: code
  name_GREATER_THAN_OR_EQUALS: code
  name_LOWER_THAN: code
  name_LOWER_THAN_OR_EQUALS: code
  name_NOT_EQUALS: code
  name_STARTS_WITH: code
  part_ALL_MATCH: OperationDefinitionParameterFilterOption
  part_ANY_MATCH: OperationDefinitionParameterFilterOption
  part_NONE_MATCH: OperationDefinitionParameterFilterOption
  referencedFrom_ALL_MATCH: OperationDefinitionParameterReferencedFromFilterOption
  referencedFrom_ANY_MATCH: OperationDefinitionParameterReferencedFromFilterOption
  referencedFrom_NONE_MATCH: OperationDefinitionParameterReferencedFromFilterOption
  searchType_CONTAINS: code
  searchType_ENDS_WITH: code
  searchType_EQUALS: code
  searchType_GREATER_THAN: code
  searchType_GREATER_THAN_OR_EQUALS: code
  searchType_LOWER_THAN: code
  searchType_LOWER_THAN_OR_EQUALS: code
  searchType_NOT_EQUALS: code
  searchType_STARTS_WITH: code
  targetProfileReference_ALL_MATCH: StructureDefinitionFilterOption
  targetProfileReference_ANY_MATCH: StructureDefinitionFilterOption
  targetProfileReference_NONE_MATCH: StructureDefinitionFilterOption
  targetProfile_ALL_MATCH: OperationDefinitionParameterTargetProfileChildFilterOption
  targetProfile_ANY_MATCH: OperationDefinitionParameterTargetProfileChildFilterOption
  targetProfile_EQUALS: [canonical!]
  targetProfile_NONE_MATCH: OperationDefinitionParameterTargetProfileChildFilterOption
  targetProfile_NOT_EQUALS: [canonical!]
  type_CONTAINS: code
  type_ENDS_WITH: code
  type_EQUALS: code
  type_GREATER_THAN: code
  type_GREATER_THAN_OR_EQUALS: code
  type_LOWER_THAN: code
  type_LOWER_THAN_OR_EQUALS: code
  type_NOT_EQUALS: code
  type_STARTS_WITH: code
  use_CONTAINS: code
  use_ENDS_WITH: code
  use_EQUALS: code
  use_GREATER_THAN: code
  use_GREATER_THAN_OR_EQUALS: code
  use_LOWER_THAN: code
  use_LOWER_THAN_OR_EQUALS: code
  use_NOT_EQUALS: code
  use_STARTS_WITH: code
}

input OperationDefinitionParameterLogicalFilterOption {
  AND: [OperationDefinitionParameterLogicalFilterOption!]
  NOT: OperationDefinitionParameterLogicalFilterOption
  OR: [OperationDefinitionParameterLogicalFilterOption!]
  binding: OperationDefinitionParameterBindingFilterOption
  documentation_CONTAINS: String
  documentation_ENDS_WITH: String
  documentation_EQUALS: String
  documentation_GREATER_THAN: String
  documentation_GREATER_THAN_OR_EQUALS: String
  documentation_LOWER_THAN: String
  documentation_LOWER_THAN_OR_EQUALS: String
  documentation_NOT_EQUALS: String
  documentation_STARTS_WITH: String
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  max_CONTAINS: String
  max_ENDS_WITH: String
  max_EQUALS: String
  max_GREATER_THAN: String
  max_GREATER_THAN_OR_EQUALS: String
  max_LOWER_THAN: String
  max_LOWER_THAN_OR_EQUALS: String
  max_NOT_EQUALS: String
  max_STARTS_WITH: String
  min_EQUALS: Int
  min_GREATER_THAN: Int
  min_GREATER_THAN_OR_EQUALS: Int
  min_LOWER_THAN: Int
  min_LOWER_THAN_OR_EQUALS: Int
  min_NOT_EQUALS: Int
  modifierExtension_ALL_MATCH: ExtensionFilterOption
  modifierExtension_ANY_MATCH: ExtensionFilterOption
  modifierExtension_NONE_MATCH: ExtensionFilterOption
  name_CONTAINS: code
  name_ENDS_WITH: code
  name_EQUALS: code
  name_GREATER_THAN: code
  name_GREATER_THAN_OR_EQUALS: code
  name_LOWER_THAN: code
  name_LOWER_THAN_OR_EQUALS: code
  name_NOT_EQUALS: code
  name_STARTS_WITH: code
  part_ALL_MATCH: OperationDefinitionParameterFilterOption
  part_ANY_MATCH: OperationDefinitionParameterFilterOption
  part_NONE_MATCH: OperationDefinitionParameterFilterOption
  referencedFrom_ALL_MATCH: OperationDefinitionParameterReferencedFromFilterOption
  referencedFrom_ANY_MATCH: OperationDefinitionParameterReferencedFromFilterOption
  referencedFrom_NONE_MATCH: OperationDefinitionParameterReferencedFromFilterOption
  searchType_CONTAINS: code
  searchType_ENDS_WITH: code
  searchType_EQUALS: code
  searchType_GREATER_THAN: code
  searchType_GREATER_THAN_OR_EQUALS: code
  searchType_LOWER_THAN: code
  searchType_LOWER_THAN_OR_EQUALS: code
  searchType_NOT_EQUALS: code
  searchType_STARTS_WITH: code
  targetProfileReference_ALL_MATCH: StructureDefinitionFilterOption
  targetProfileReference_ANY_MATCH: StructureDefinitionFilterOption
  targetProfileReference_NONE_MATCH: StructureDefinitionFilterOption
  targetProfile_ALL_MATCH: OperationDefinitionParameterTargetProfileChildFilterOption
  targetProfile_ANY_MATCH: OperationDefinitionParameterTargetProfileChildFilterOption
  targetProfile_EQUALS: [canonical!]
  targetProfile_NONE_MATCH: OperationDefinitionParameterTargetProfileChildFilterOption
  targetProfile_NOT_EQUALS: [canonical!]
  type_CONTAINS: code
  type_ENDS_WITH: code
  type_EQUALS: code
  type_GREATER_THAN: code
  type_GREATER_THAN_OR_EQUALS: code
  type_LOWER_THAN: code
  type_LOWER_THAN_OR_EQUALS: code
  type_NOT_EQUALS: code
  type_STARTS_WITH: code
  use_CONTAINS: code
  use_ENDS_WITH: code
  use_EQUALS: code
  use_GREATER_THAN: code
  use_GREATER_THAN_OR_EQUALS: code
  use_LOWER_THAN: code
  use_LOWER_THAN_OR_EQUALS: code
  use_NOT_EQUALS: code
  use_STARTS_WITH: code
}

input OperationDefinitionParameterReferencedFromCommandInput {
  extension: [ExtensionCommandInput!]
  id: String
  modifierExtension: [ExtensionCommandInput!]
  source: String!
  sourceId: String
}

input OperationDefinitionParameterReferencedFromFilterOption {
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  modifierExtension_ALL_MATCH: ExtensionFilterOption
  modifierExtension_ANY_MATCH: ExtensionFilterOption
  modifierExtension_NONE_MATCH: ExtensionFilterOption
  sourceId_CONTAINS: String
  sourceId_ENDS_WITH: String
  sourceId_EQUALS: String
  sourceId_GREATER_THAN: String
  sourceId_GREATER_THAN_OR_EQUALS: String
  sourceId_LOWER_THAN: String
  sourceId_LOWER_THAN_OR_EQUALS: String
  sourceId_NOT_EQUALS: String
  sourceId_STARTS_WITH: String
  source_CONTAINS: String
  source_ENDS_WITH: String
  source_EQUALS: String
  source_GREATER_THAN: String
  source_GREATER_THAN_OR_EQUALS: String
  source_LOWER_THAN: String
  source_LOWER_THAN_OR_EQUALS: String
  source_NOT_EQUALS: String
  source_STARTS_WITH: String
}

input OperationDefinitionParameterReferencedFromLogicalFilterOption {
  AND: [OperationDefinitionParameterReferencedFromLogicalFilterOption!]
  NOT: OperationDefinitionParameterReferencedFromLogicalFilterOption
  OR: [OperationDefinitionParameterReferencedFromLogicalFilterOption!]
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  modifierExtension_ALL_MATCH: ExtensionFilterOption
  modifierExtension_ANY_MATCH: ExtensionFilterOption
  modifierExtension_NONE_MATCH: ExtensionFilterOption
  sourceId_CONTAINS: String
  sourceId_ENDS_WITH: String
  sourceId_EQUALS: String
  sourceId_GREATER_THAN: String
  sourceId_GREATER_THAN_OR_EQUALS: String
  sourceId_LOWER_THAN: String
  sourceId_LOWER_THAN_OR_EQUALS: String
  sourceId_NOT_EQUALS: String
  sourceId_STARTS_WITH: String
  source_CONTAINS: String
  source_ENDS_WITH: String
  source_EQUALS: String
  source_GREATER_THAN: String
  source_GREATER_THAN_OR_EQUALS: String
  source_LOWER_THAN: String
  source_LOWER_THAN_OR_EQUALS: String
  source_NOT_EQUALS: String
  source_STARTS_WITH: String
}

input OperationDefinitionParameterReferencedFromSortOption {
  extension: ExtensionSortOption
  id: SortDirection
  modifierExtension: ExtensionSortOption
  source: SortDirection
  sourceId: SortDirection
}

input OperationDefinitionParameterSortOption {
  binding: OperationDefinitionParameterBindingSortOption
  documentation: SortDirection
  extension: ExtensionSortOption
  id: SortDirection
  max: SortDirection
  min: SortDirection
  modifierExtension: ExtensionSortOption
  name: SortDirection
  part: OperationDefinitionParameterSortOption
  referencedFrom: OperationDefinitionParameterReferencedFromSortOption
  searchType: SortDirection
  targetProfile: SortDirection
  targetProfileReference: StructureDefinitionSortOption
  type: SortDirection
  use: SortDirection
}

input OperationDefinitionParameterTargetProfileChildFilterOption {
  CONTAINS: canonical
  ENDS_WITH: canonical
  EQUALS: canonical
  GREATER_THAN: canonical
  GREATER_THAN_OR_EQUALS: canonical
  LOWER_THAN: canonical
  LOWER_THAN_OR_EQUALS: canonical
  NOT_EQUALS: canonical
  STARTS_WITH: canonical
}

input OperationDefinitionResourceChildFilterOption {
  CONTAINS: code
  ENDS_WITH: code
  EQUALS: code
  GREATER_THAN: code
  GREATER_THAN_OR_EQUALS: code
  LOWER_THAN: code
  LOWER_THAN_OR_EQUALS: code
  NOT_EQUALS: code
  STARTS_WITH: code
}

input OperationDefinitionSortOption {
  affectsState: SortDirection
  base: SortDirection
  code: SortDirection
  comment: SortDirection
  contact: SortDirection
  contained: ResourceSortOption
  date: SortDirection
  description: SortDirection
  experimental: SortDirection
  extension: ExtensionSortOption
  id: SortDirection
  implicitRules: SortDirection
  inputProfile: SortDirection
  instance: SortDirection
  jurisdiction: CodeableConceptSortOption
  kind: SortDirection
  language: SortDirection
  meta: MetaSortOption
  modifierExtension: ExtensionSortOption
  name: SortDirection
  outputProfile: SortDirection
  overload: OperationDefinitionOverloadSortOption
  parameter: OperationDefinitionParameterSortOption
  publisher: SortDirection
  purpose: SortDirection
  resource: SortDirection
  status: SortDirection
  system: SortDirection
  text: NarrativeSortOption
  title: SortDirection
  type: SortDirection
  url: SortDirection
  useContext: UsageContextSortOption
  version: SortDirection
}

input OperationOutcomeFilterOption {
  contained_ALL_MATCH: ResourceFilterOption
  contained_ANY_MATCH: ResourceFilterOption
  contained_NONE_MATCH: ResourceFilterOption
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  implicitRules_CONTAINS: uri
  implicitRules_ENDS_WITH: uri
  implicitRules_EQUALS: uri
  implicitRules_GREATER_THAN: uri
  implicitRules_GREATER_THAN_OR_EQUALS: uri
  implicitRules_LOWER_THAN: uri
  implicitRules_LOWER_THAN_OR_EQUALS: uri
  implicitRules_NOT_EQUALS: uri
  implicitRules_STARTS_WITH: uri
  issue_ALL_MATCH: OperationOutcomeIssueFilterOption
  issue_ANY_MATCH: OperationOutcomeIssueFilterOption
  issue_NONE_MATCH: OperationOutcomeIssueFilterOption
  language_CONTAINS: code
  language_ENDS_WITH: code
  language_EQUALS: code
  language_GREATER_THAN: code
  language_GREATER_THAN_OR_EQUALS: code
  language_LOWER_THAN: code
  language_LOWER_THAN_OR_EQUALS: code
  language_NOT_EQUALS: code
  language_STARTS_WITH: code
  meta: MetaFilterOption
  modifierExtension_ALL_MATCH: ExtensionFilterOption
  modifierExtension_ANY_MATCH: ExtensionFilterOption
  modifierExtension_NONE_MATCH: ExtensionFilterOption
  text: NarrativeFilterOption
}

input OperationOutcomeIssueCommandInput {
  code: code!
  details: CodeableConceptCommandInput
  diagnostics: String
  expression: [String!]
  extension: [ExtensionCommandInput!]
  id: String
  location: [String!]
  modifierExtension: [ExtensionCommandInput!]
  severity: code!
}

input OperationOutcomeIssueExpressionChildFilterOption {
  CONTAINS: String
  ENDS_WITH: String
  EQUALS: String
  GREATER_THAN: String
  GREATER_THAN_OR_EQUALS: String
  LOWER_THAN: String
  LOWER_THAN_OR_EQUALS: String
  NOT_EQUALS: String
  STARTS_WITH: String
}

input OperationOutcomeIssueFilterOption {
  code_CONTAINS: code
  code_ENDS_WITH: code
  code_EQUALS: code
  code_GREATER_THAN: code
  code_GREATER_THAN_OR_EQUALS: code
  code_LOWER_THAN: code
  code_LOWER_THAN_OR_EQUALS: code
  code_NOT_EQUALS: code
  code_STARTS_WITH: code
  details: CodeableConceptFilterOption
  diagnostics_CONTAINS: String
  diagnostics_ENDS_WITH: String
  diagnostics_EQUALS: String
  diagnostics_GREATER_THAN: String
  diagnostics_GREATER_THAN_OR_EQUALS: String
  diagnostics_LOWER_THAN: String
  diagnostics_LOWER_THAN_OR_EQUALS: String
  diagnostics_NOT_EQUALS: String
  diagnostics_STARTS_WITH: String
  expression_ALL_MATCH: OperationOutcomeIssueExpressionChildFilterOption
  expression_ANY_MATCH: OperationOutcomeIssueExpressionChildFilterOption
  expression_EQUALS: [String!]
  expression_NONE_MATCH: OperationOutcomeIssueExpressionChildFilterOption
  expression_NOT_EQUALS: [String!]
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  location_ALL_MATCH: OperationOutcomeIssueLocationChildFilterOption
  location_ANY_MATCH: OperationOutcomeIssueLocationChildFilterOption
  location_EQUALS: [String!]
  location_NONE_MATCH: OperationOutcomeIssueLocationChildFilterOption
  location_NOT_EQUALS: [String!]
  modifierExtension_ALL_MATCH: ExtensionFilterOption
  modifierExtension_ANY_MATCH: ExtensionFilterOption
  modifierExtension_NONE_MATCH: ExtensionFilterOption
  severity_CONTAINS: code
  severity_ENDS_WITH: code
  severity_EQUALS: code
  severity_GREATER_THAN: code
  severity_GREATER_THAN_OR_EQUALS: code
  severity_LOWER_THAN: code
  severity_LOWER_THAN_OR_EQUALS: code
  severity_NOT_EQUALS: code
  severity_STARTS_WITH: code
}

input OperationOutcomeIssueLocationChildFilterOption {
  CONTAINS: String
  ENDS_WITH: String
  EQUALS: String
  GREATER_THAN: String
  GREATER_THAN_OR_EQUALS: String
  LOWER_THAN: String
  LOWER_THAN_OR_EQUALS: String
  NOT_EQUALS: String
  STARTS_WITH: String
}

input OperationOutcomeIssueLogicalFilterOption {
  AND: [OperationOutcomeIssueLogicalFilterOption!]
  NOT: OperationOutcomeIssueLogicalFilterOption
  OR: [OperationOutcomeIssueLogicalFilterOption!]
  code_CONTAINS: code
  code_ENDS_WITH: code
  code_EQUALS: code
  code_GREATER_THAN: code
  code_GREATER_THAN_OR_EQUALS: code
  code_LOWER_THAN: code
  code_LOWER_THAN_OR_EQUALS: code
  code_NOT_EQUALS: code
  code_STARTS_WITH: code
  details: CodeableConceptFilterOption
  diagnostics_CONTAINS: String
  diagnostics_ENDS_WITH: String
  diagnostics_EQUALS: String
  diagnostics_GREATER_THAN: String
  diagnostics_GREATER_THAN_OR_EQUALS: String
  diagnostics_LOWER_THAN: String
  diagnostics_LOWER_THAN_OR_EQUALS: String
  diagnostics_NOT_EQUALS: String
  diagnostics_STARTS_WITH: String
  expression_ALL_MATCH: OperationOutcomeIssueExpressionChildFilterOption
  expression_ANY_MATCH: OperationOutcomeIssueExpressionChildFilterOption
  expression_EQUALS: [String!]
  expression_NONE_MATCH: OperationOutcomeIssueExpressionChildFilterOption
  expression_NOT_EQUALS: [String!]
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  location_ALL_MATCH: OperationOutcomeIssueLocationChildFilterOption
  location_ANY_MATCH: OperationOutcomeIssueLocationChildFilterOption
  location_EQUALS: [String!]
  location_NONE_MATCH: OperationOutcomeIssueLocationChildFilterOption
  location_NOT_EQUALS: [String!]
  modifierExtension_ALL_MATCH: ExtensionFilterOption
  modifierExtension_ANY_MATCH: ExtensionFilterOption
  modifierExtension_NONE_MATCH: ExtensionFilterOption
  severity_CONTAINS: code
  severity_ENDS_WITH: code
  severity_EQUALS: code
  severity_GREATER_THAN: code
  severity_GREATER_THAN_OR_EQUALS: code
  severity_LOWER_THAN: code
  severity_LOWER_THAN_OR_EQUALS: code
  severity_NOT_EQUALS: code
  severity_STARTS_WITH: code
}

input OperationOutcomeIssueSortOption {
  code: SortDirection
  details: CodeableConceptSortOption
  diagnostics: SortDirection
  expression: SortDirection
  extension: ExtensionSortOption
  id: SortDirection
  location: SortDirection
  modifierExtension: ExtensionSortOption
  severity: SortDirection
}

input OperationOutcomeLogicalFilterOption {
  AND: [OperationOutcomeLogicalFilterOption!]
  NOT: OperationOutcomeLogicalFilterOption
  OR: [OperationOutcomeLogicalFilterOption!]
  contained_ALL_MATCH: ResourceFilterOption
  contained_ANY_MATCH: ResourceFilterOption
  contained_NONE_MATCH: ResourceFilterOption
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  implicitRules_CONTAINS: uri
  implicitRules_ENDS_WITH: uri
  implicitRules_EQUALS: uri
  implicitRules_GREATER_THAN: uri
  implicitRules_GREATER_THAN_OR_EQUALS: uri
  implicitRules_LOWER_THAN: uri
  implicitRules_LOWER_THAN_OR_EQUALS: uri
  implicitRules_NOT_EQUALS: uri
  implicitRules_STARTS_WITH: uri
  issue_ALL_MATCH: OperationOutcomeIssueFilterOption
  issue_ANY_MATCH: OperationOutcomeIssueFilterOption
  issue_NONE_MATCH: OperationOutcomeIssueFilterOption
  language_CONTAINS: code
  language_ENDS_WITH: code
  language_EQUALS: code
  language_GREATER_THAN: code
  language_GREATER_THAN_OR_EQUALS: code
  language_LOWER_THAN: code
  language_LOWER_THAN_OR_EQUALS: code
  language_NOT_EQUALS: code
  language_STARTS_WITH: code
  meta: MetaFilterOption
  modifierExtension_ALL_MATCH: ExtensionFilterOption
  modifierExtension_ANY_MATCH: ExtensionFilterOption
  modifierExtension_NONE_MATCH: ExtensionFilterOption
  text: NarrativeFilterOption
}

input OperationOutcomeSortOption {
  contained: ResourceSortOption
  extension: ExtensionSortOption
  id: SortDirection
  implicitRules: SortDirection
  issue: OperationOutcomeIssueSortOption
  language: SortDirection
  meta: MetaSortOption
  modifierExtension: ExtensionSortOption
  text: NarrativeSortOption
}

input ParameterDefinitionCommandInput {
  documentation: String
  extension: [ExtensionCommandInput!]
  id: String
  max: String
  min: Int
  name: code
  profile: canonical
  type: code!
  use: code!
}

input ParameterDefinitionFilterOption {
  documentation_CONTAINS: String
  documentation_ENDS_WITH: String
  documentation_EQUALS: String
  documentation_GREATER_THAN: String
  documentation_GREATER_THAN_OR_EQUALS: String
  documentation_LOWER_THAN: String
  documentation_LOWER_THAN_OR_EQUALS: String
  documentation_NOT_EQUALS: String
  documentation_STARTS_WITH: String
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  max_CONTAINS: String
  max_ENDS_WITH: String
  max_EQUALS: String
  max_GREATER_THAN: String
  max_GREATER_THAN_OR_EQUALS: String
  max_LOWER_THAN: String
  max_LOWER_THAN_OR_EQUALS: String
  max_NOT_EQUALS: String
  max_STARTS_WITH: String
  min_EQUALS: Int
  min_GREATER_THAN: Int
  min_GREATER_THAN_OR_EQUALS: Int
  min_LOWER_THAN: Int
  min_LOWER_THAN_OR_EQUALS: Int
  min_NOT_EQUALS: Int
  name_CONTAINS: code
  name_ENDS_WITH: code
  name_EQUALS: code
  name_GREATER_THAN: code
  name_GREATER_THAN_OR_EQUALS: code
  name_LOWER_THAN: code
  name_LOWER_THAN_OR_EQUALS: code
  name_NOT_EQUALS: code
  name_STARTS_WITH: code
  profile_CONTAINS: canonical
  profile_ENDS_WITH: canonical
  profile_EQUALS: canonical
  profile_GREATER_THAN: canonical
  profile_GREATER_THAN_OR_EQUALS: canonical
  profile_LOWER_THAN: canonical
  profile_LOWER_THAN_OR_EQUALS: canonical
  profile_NOT_EQUALS: canonical
  profile_STARTS_WITH: canonical
  type_CONTAINS: code
  type_ENDS_WITH: code
  type_EQUALS: code
  type_GREATER_THAN: code
  type_GREATER_THAN_OR_EQUALS: code
  type_LOWER_THAN: code
  type_LOWER_THAN_OR_EQUALS: code
  type_NOT_EQUALS: code
  type_STARTS_WITH: code
  use_CONTAINS: code
  use_ENDS_WITH: code
  use_EQUALS: code
  use_GREATER_THAN: code
  use_GREATER_THAN_OR_EQUALS: code
  use_LOWER_THAN: code
  use_LOWER_THAN_OR_EQUALS: code
  use_NOT_EQUALS: code
  use_STARTS_WITH: code
}

input ParameterDefinitionLogicalFilterOption {
  AND: [ParameterDefinitionLogicalFilterOption!]
  NOT: ParameterDefinitionLogicalFilterOption
  OR: [ParameterDefinitionLogicalFilterOption!]
  documentation_CONTAINS: String
  documentation_ENDS_WITH: String
  documentation_EQUALS: String
  documentation_GREATER_THAN: String
  documentation_GREATER_THAN_OR_EQUALS: String
  documentation_LOWER_THAN: String
  documentation_LOWER_THAN_OR_EQUALS: String
  documentation_NOT_EQUALS: String
  documentation_STARTS_WITH: String
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  max_CONTAINS: String
  max_ENDS_WITH: String
  max_EQUALS: String
  max_GREATER_THAN: String
  max_GREATER_THAN_OR_EQUALS: String
  max_LOWER_THAN: String
  max_LOWER_THAN_OR_EQUALS: String
  max_NOT_EQUALS: String
  max_STARTS_WITH: String
  min_EQUALS: Int
  min_GREATER_THAN: Int
  min_GREATER_THAN_OR_EQUALS: Int
  min_LOWER_THAN: Int
  min_LOWER_THAN_OR_EQUALS: Int
  min_NOT_EQUALS: Int
  name_CONTAINS: code
  name_ENDS_WITH: code
  name_EQUALS: code
  name_GREATER_THAN: code
  name_GREATER_THAN_OR_EQUALS: code
  name_LOWER_THAN: code
  name_LOWER_THAN_OR_EQUALS: code
  name_NOT_EQUALS: code
  name_STARTS_WITH: code
  profile_CONTAINS: canonical
  profile_ENDS_WITH: canonical
  profile_EQUALS: canonical
  profile_GREATER_THAN: canonical
  profile_GREATER_THAN_OR_EQUALS: canonical
  profile_LOWER_THAN: canonical
  profile_LOWER_THAN_OR_EQUALS: canonical
  profile_NOT_EQUALS: canonical
  profile_STARTS_WITH: canonical
  type_CONTAINS: code
  type_ENDS_WITH: code
  type_EQUALS: code
  type_GREATER_THAN: code
  type_GREATER_THAN_OR_EQUALS: code
  type_LOWER_THAN: code
  type_LOWER_THAN_OR_EQUALS: code
  type_NOT_EQUALS: code
  type_STARTS_WITH: code
  use_CONTAINS: code
  use_ENDS_WITH: code
  use_EQUALS: code
  use_GREATER_THAN: code
  use_GREATER_THAN_OR_EQUALS: code
  use_LOWER_THAN: code
  use_LOWER_THAN_OR_EQUALS: code
  use_NOT_EQUALS: code
  use_STARTS_WITH: code
}

input ParameterDefinitionSortOption {
  documentation: SortDirection
  extension: ExtensionSortOption
  id: SortDirection
  max: SortDirection
  min: SortDirection
  name: SortDirection
  profile: SortDirection
  type: SortDirection
  use: SortDirection
}

input ParametersFilterOption {
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  implicitRules_CONTAINS: uri
  implicitRules_ENDS_WITH: uri
  implicitRules_EQUALS: uri
  implicitRules_GREATER_THAN: uri
  implicitRules_GREATER_THAN_OR_EQUALS: uri
  implicitRules_LOWER_THAN: uri
  implicitRules_LOWER_THAN_OR_EQUALS: uri
  implicitRules_NOT_EQUALS: uri
  implicitRules_STARTS_WITH: uri
  language_CONTAINS: code
  language_ENDS_WITH: code
  language_EQUALS: code
  language_GREATER_THAN: code
  language_GREATER_THAN_OR_EQUALS: code
  language_LOWER_THAN: code
  language_LOWER_THAN_OR_EQUALS: code
  language_NOT_EQUALS: code
  language_STARTS_WITH: code
  meta: MetaFilterOption
  parameter_ALL_MATCH: ParametersParameterFilterOption
  parameter_ANY_MATCH: ParametersParameterFilterOption
  parameter_NONE_MATCH: ParametersParameterFilterOption
}

input ParametersLogicalFilterOption {
  AND: [ParametersLogicalFilterOption!]
  NOT: ParametersLogicalFilterOption
  OR: [ParametersLogicalFilterOption!]
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  implicitRules_CONTAINS: uri
  implicitRules_ENDS_WITH: uri
  implicitRules_EQUALS: uri
  implicitRules_GREATER_THAN: uri
  implicitRules_GREATER_THAN_OR_EQUALS: uri
  implicitRules_LOWER_THAN: uri
  implicitRules_LOWER_THAN_OR_EQUALS: uri
  implicitRules_NOT_EQUALS: uri
  implicitRules_STARTS_WITH: uri
  language_CONTAINS: code
  language_ENDS_WITH: code
  language_EQUALS: code
  language_GREATER_THAN: code
  language_GREATER_THAN_OR_EQUALS: code
  language_LOWER_THAN: code
  language_LOWER_THAN_OR_EQUALS: code
  language_NOT_EQUALS: code
  language_STARTS_WITH: code
  meta: MetaFilterOption
  parameter_ALL_MATCH: ParametersParameterFilterOption
  parameter_ANY_MATCH: ParametersParameterFilterOption
  parameter_NONE_MATCH: ParametersParameterFilterOption
}

input ParametersParameterCommandInput {
  extension: [ExtensionCommandInput!]
  id: String
  modifierExtension: [ExtensionCommandInput!]
  name: String!
  part: [ParametersParameterCommandInput!]
  resource: ResourceCommandInput
  value: ParametersParameterCommandInputValue
}

"Generated Input Type, which works as a Union type. Only one field should be filled."
input ParametersParameterCommandInputValue {
  CodeableConcept: CodeableConceptCommandInput
  Coding: CodingCommandInput
  DataRequirement: DataRequirementCommandInput
  Expression: ExpressionCommandInput
  Identifier: IdentifierCommandInput
  ParameterDefinition: ParameterDefinitionCommandInput
  Reference: ID
  TriggerDefinition: TriggerDefinitionCommandInput
  base64Binary: base64Binary
  boolean: Boolean
  canonical: canonical
  code: code
  date: date
  dateTime: dateTime
  decimal: Float
  id: ID
  instant: instant
  integer: Int
  markdown: markdown
  oid: oid
  positiveInt: positiveInt
  string: String
  time: time
  unsignedInt: unsignedInt
  uri: uri
  url: url
  uuid: uuid
}

input ParametersParameterFilterOption {
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  modifierExtension_ALL_MATCH: ExtensionFilterOption
  modifierExtension_ANY_MATCH: ExtensionFilterOption
  modifierExtension_NONE_MATCH: ExtensionFilterOption
  name_CONTAINS: String
  name_ENDS_WITH: String
  name_EQUALS: String
  name_GREATER_THAN: String
  name_GREATER_THAN_OR_EQUALS: String
  name_LOWER_THAN: String
  name_LOWER_THAN_OR_EQUALS: String
  name_NOT_EQUALS: String
  name_STARTS_WITH: String
  part_ALL_MATCH: ParametersParameterFilterOption
  part_ANY_MATCH: ParametersParameterFilterOption
  part_NONE_MATCH: ParametersParameterFilterOption
  resource: ResourceFilterOption
}

input ParametersParameterLogicalFilterOption {
  AND: [ParametersParameterLogicalFilterOption!]
  NOT: ParametersParameterLogicalFilterOption
  OR: [ParametersParameterLogicalFilterOption!]
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  modifierExtension_ALL_MATCH: ExtensionFilterOption
  modifierExtension_ANY_MATCH: ExtensionFilterOption
  modifierExtension_NONE_MATCH: ExtensionFilterOption
  name_CONTAINS: String
  name_ENDS_WITH: String
  name_EQUALS: String
  name_GREATER_THAN: String
  name_GREATER_THAN_OR_EQUALS: String
  name_LOWER_THAN: String
  name_LOWER_THAN_OR_EQUALS: String
  name_NOT_EQUALS: String
  name_STARTS_WITH: String
  part_ALL_MATCH: ParametersParameterFilterOption
  part_ANY_MATCH: ParametersParameterFilterOption
  part_NONE_MATCH: ParametersParameterFilterOption
  resource: ResourceFilterOption
}

input ParametersParameterSortOption {
  extension: ExtensionSortOption
  id: SortDirection
  modifierExtension: ExtensionSortOption
  name: SortDirection
  part: ParametersParameterSortOption
  resource: ResourceSortOption
}

input ParametersSortOption {
  id: SortDirection
  implicitRules: SortDirection
  language: SortDirection
  meta: MetaSortOption
  parameter: ParametersParameterSortOption
}

input PeriodCommandInput {
  end: dateTime
  extension: [ExtensionCommandInput!]
  id: String
  start: dateTime
}

input PeriodFilterOption {
  end_EQUALS: dateTime
  end_GREATER_THAN: dateTime
  end_GREATER_THAN_OR_EQUALS: dateTime
  end_LOWER_THAN: dateTime
  end_LOWER_THAN_OR_EQUALS: dateTime
  end_NOT_EQUALS: dateTime
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  start_EQUALS: dateTime
  start_GREATER_THAN: dateTime
  start_GREATER_THAN_OR_EQUALS: dateTime
  start_LOWER_THAN: dateTime
  start_LOWER_THAN_OR_EQUALS: dateTime
  start_NOT_EQUALS: dateTime
}

input PeriodLogicalFilterOption {
  AND: [PeriodLogicalFilterOption!]
  NOT: PeriodLogicalFilterOption
  OR: [PeriodLogicalFilterOption!]
  end_EQUALS: dateTime
  end_GREATER_THAN: dateTime
  end_GREATER_THAN_OR_EQUALS: dateTime
  end_LOWER_THAN: dateTime
  end_LOWER_THAN_OR_EQUALS: dateTime
  end_NOT_EQUALS: dateTime
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  start_EQUALS: dateTime
  start_GREATER_THAN: dateTime
  start_GREATER_THAN_OR_EQUALS: dateTime
  start_LOWER_THAN: dateTime
  start_LOWER_THAN_OR_EQUALS: dateTime
  start_NOT_EQUALS: dateTime
}

input PeriodSortOption {
  end: SortDirection
  extension: ExtensionSortOption
  id: SortDirection
  start: SortDirection
}

input QuantityCommandInput {
  code: code
  comparator: code
  extension: [ExtensionCommandInput!]
  id: String
  system: uri
  unit: String
  value: Float
}

input QuantityFilterOption {
  code_CONTAINS: code
  code_ENDS_WITH: code
  code_EQUALS: code
  code_GREATER_THAN: code
  code_GREATER_THAN_OR_EQUALS: code
  code_LOWER_THAN: code
  code_LOWER_THAN_OR_EQUALS: code
  code_NOT_EQUALS: code
  code_STARTS_WITH: code
  comparator_CONTAINS: code
  comparator_ENDS_WITH: code
  comparator_EQUALS: code
  comparator_GREATER_THAN: code
  comparator_GREATER_THAN_OR_EQUALS: code
  comparator_LOWER_THAN: code
  comparator_LOWER_THAN_OR_EQUALS: code
  comparator_NOT_EQUALS: code
  comparator_STARTS_WITH: code
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  system_CONTAINS: uri
  system_ENDS_WITH: uri
  system_EQUALS: uri
  system_GREATER_THAN: uri
  system_GREATER_THAN_OR_EQUALS: uri
  system_LOWER_THAN: uri
  system_LOWER_THAN_OR_EQUALS: uri
  system_NOT_EQUALS: uri
  system_STARTS_WITH: uri
  unit_CONTAINS: String
  unit_ENDS_WITH: String
  unit_EQUALS: String
  unit_GREATER_THAN: String
  unit_GREATER_THAN_OR_EQUALS: String
  unit_LOWER_THAN: String
  unit_LOWER_THAN_OR_EQUALS: String
  unit_NOT_EQUALS: String
  unit_STARTS_WITH: String
  value_EQUALS: Float
  value_GREATER_THAN: Float
  value_GREATER_THAN_OR_EQUALS: Float
  value_LOWER_THAN: Float
  value_LOWER_THAN_OR_EQUALS: Float
  value_NOT_EQUALS: Float
}

input QuantityLogicalFilterOption {
  AND: [QuantityLogicalFilterOption!]
  NOT: QuantityLogicalFilterOption
  OR: [QuantityLogicalFilterOption!]
  code_CONTAINS: code
  code_ENDS_WITH: code
  code_EQUALS: code
  code_GREATER_THAN: code
  code_GREATER_THAN_OR_EQUALS: code
  code_LOWER_THAN: code
  code_LOWER_THAN_OR_EQUALS: code
  code_NOT_EQUALS: code
  code_STARTS_WITH: code
  comparator_CONTAINS: code
  comparator_ENDS_WITH: code
  comparator_EQUALS: code
  comparator_GREATER_THAN: code
  comparator_GREATER_THAN_OR_EQUALS: code
  comparator_LOWER_THAN: code
  comparator_LOWER_THAN_OR_EQUALS: code
  comparator_NOT_EQUALS: code
  comparator_STARTS_WITH: code
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  system_CONTAINS: uri
  system_ENDS_WITH: uri
  system_EQUALS: uri
  system_GREATER_THAN: uri
  system_GREATER_THAN_OR_EQUALS: uri
  system_LOWER_THAN: uri
  system_LOWER_THAN_OR_EQUALS: uri
  system_NOT_EQUALS: uri
  system_STARTS_WITH: uri
  unit_CONTAINS: String
  unit_ENDS_WITH: String
  unit_EQUALS: String
  unit_GREATER_THAN: String
  unit_GREATER_THAN_OR_EQUALS: String
  unit_LOWER_THAN: String
  unit_LOWER_THAN_OR_EQUALS: String
  unit_NOT_EQUALS: String
  unit_STARTS_WITH: String
  value_EQUALS: Float
  value_GREATER_THAN: Float
  value_GREATER_THAN_OR_EQUALS: Float
  value_LOWER_THAN: Float
  value_LOWER_THAN_OR_EQUALS: Float
  value_NOT_EQUALS: Float
}

input QuantitySortOption {
  code: SortDirection
  comparator: SortDirection
  extension: ExtensionSortOption
  id: SortDirection
  system: SortDirection
  unit: SortDirection
  value: SortDirection
}

input RangeCommandInput {
  extension: [ExtensionCommandInput!]
  high: QuantityCommandInput
  id: String
  low: QuantityCommandInput
}

input RangeFilterOption {
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  high: QuantityFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  low: QuantityFilterOption
}

input RangeLogicalFilterOption {
  AND: [RangeLogicalFilterOption!]
  NOT: RangeLogicalFilterOption
  OR: [RangeLogicalFilterOption!]
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  high: QuantityFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  low: QuantityFilterOption
}

input RangeSortOption {
  extension: ExtensionSortOption
  high: QuantitySortOption
  id: SortDirection
  low: QuantitySortOption
}

input ReferenceCommandInput {
  display: String
  extension: [ExtensionCommandInput!]
  id: String
  identifier: IdentifierCommandInput
  reference: String
  type: uri
}

input ReferenceFilterOption {
  display_CONTAINS: String
  display_ENDS_WITH: String
  display_EQUALS: String
  display_GREATER_THAN: String
  display_GREATER_THAN_OR_EQUALS: String
  display_LOWER_THAN: String
  display_LOWER_THAN_OR_EQUALS: String
  display_NOT_EQUALS: String
  display_STARTS_WITH: String
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  identifier: IdentifierFilterOption
  reference_CONTAINS: String
  reference_ENDS_WITH: String
  reference_EQUALS: String
  reference_GREATER_THAN: String
  reference_GREATER_THAN_OR_EQUALS: String
  reference_LOWER_THAN: String
  reference_LOWER_THAN_OR_EQUALS: String
  reference_NOT_EQUALS: String
  reference_STARTS_WITH: String
  type_CONTAINS: uri
  type_ENDS_WITH: uri
  type_EQUALS: uri
  type_GREATER_THAN: uri
  type_GREATER_THAN_OR_EQUALS: uri
  type_LOWER_THAN: uri
  type_LOWER_THAN_OR_EQUALS: uri
  type_NOT_EQUALS: uri
  type_STARTS_WITH: uri
}

input ReferenceLogicalFilterOption {
  AND: [ReferenceLogicalFilterOption!]
  NOT: ReferenceLogicalFilterOption
  OR: [ReferenceLogicalFilterOption!]
  display_CONTAINS: String
  display_ENDS_WITH: String
  display_EQUALS: String
  display_GREATER_THAN: String
  display_GREATER_THAN_OR_EQUALS: String
  display_LOWER_THAN: String
  display_LOWER_THAN_OR_EQUALS: String
  display_NOT_EQUALS: String
  display_STARTS_WITH: String
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  identifier: IdentifierFilterOption
  reference_CONTAINS: String
  reference_ENDS_WITH: String
  reference_EQUALS: String
  reference_GREATER_THAN: String
  reference_GREATER_THAN_OR_EQUALS: String
  reference_LOWER_THAN: String
  reference_LOWER_THAN_OR_EQUALS: String
  reference_NOT_EQUALS: String
  reference_STARTS_WITH: String
  type_CONTAINS: uri
  type_ENDS_WITH: uri
  type_EQUALS: uri
  type_GREATER_THAN: uri
  type_GREATER_THAN_OR_EQUALS: uri
  type_LOWER_THAN: uri
  type_LOWER_THAN_OR_EQUALS: uri
  type_NOT_EQUALS: uri
  type_STARTS_WITH: uri
}

input ReferenceSortOption {
  display: SortDirection
  extension: ExtensionSortOption
  id: SortDirection
  identifier: IdentifierSortOption
  reference: SortDirection
  type: SortDirection
}

input ResourceCommandInput {
  id: String
  implicitRules: uri
  language: code
  meta: MetaCommandInput
}

input ResourceFilterOption {
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  implicitRules_CONTAINS: uri
  implicitRules_ENDS_WITH: uri
  implicitRules_EQUALS: uri
  implicitRules_GREATER_THAN: uri
  implicitRules_GREATER_THAN_OR_EQUALS: uri
  implicitRules_LOWER_THAN: uri
  implicitRules_LOWER_THAN_OR_EQUALS: uri
  implicitRules_NOT_EQUALS: uri
  implicitRules_STARTS_WITH: uri
  language_CONTAINS: code
  language_ENDS_WITH: code
  language_EQUALS: code
  language_GREATER_THAN: code
  language_GREATER_THAN_OR_EQUALS: code
  language_LOWER_THAN: code
  language_LOWER_THAN_OR_EQUALS: code
  language_NOT_EQUALS: code
  language_STARTS_WITH: code
  meta: MetaFilterOption
}

input ResourceLogicalFilterOption {
  AND: [ResourceLogicalFilterOption!]
  NOT: ResourceLogicalFilterOption
  OR: [ResourceLogicalFilterOption!]
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  implicitRules_CONTAINS: uri
  implicitRules_ENDS_WITH: uri
  implicitRules_EQUALS: uri
  implicitRules_GREATER_THAN: uri
  implicitRules_GREATER_THAN_OR_EQUALS: uri
  implicitRules_LOWER_THAN: uri
  implicitRules_LOWER_THAN_OR_EQUALS: uri
  implicitRules_NOT_EQUALS: uri
  implicitRules_STARTS_WITH: uri
  language_CONTAINS: code
  language_ENDS_WITH: code
  language_EQUALS: code
  language_GREATER_THAN: code
  language_GREATER_THAN_OR_EQUALS: code
  language_LOWER_THAN: code
  language_LOWER_THAN_OR_EQUALS: code
  language_NOT_EQUALS: code
  language_STARTS_WITH: code
  meta: MetaFilterOption
}

input ResourceSortOption {
  id: SortDirection
  implicitRules: SortDirection
  language: SortDirection
  meta: MetaSortOption
}

input SimpleQuantityCommandInput {
  code: code
  extension: [ExtensionCommandInput!]
  id: String
  system: uri
  unit: String
  value: Float
}

input SimpleQuantityFilterOption {
  code_CONTAINS: code
  code_ENDS_WITH: code
  code_EQUALS: code
  code_GREATER_THAN: code
  code_GREATER_THAN_OR_EQUALS: code
  code_LOWER_THAN: code
  code_LOWER_THAN_OR_EQUALS: code
  code_NOT_EQUALS: code
  code_STARTS_WITH: code
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  system_CONTAINS: uri
  system_ENDS_WITH: uri
  system_EQUALS: uri
  system_GREATER_THAN: uri
  system_GREATER_THAN_OR_EQUALS: uri
  system_LOWER_THAN: uri
  system_LOWER_THAN_OR_EQUALS: uri
  system_NOT_EQUALS: uri
  system_STARTS_WITH: uri
  unit_CONTAINS: String
  unit_ENDS_WITH: String
  unit_EQUALS: String
  unit_GREATER_THAN: String
  unit_GREATER_THAN_OR_EQUALS: String
  unit_LOWER_THAN: String
  unit_LOWER_THAN_OR_EQUALS: String
  unit_NOT_EQUALS: String
  unit_STARTS_WITH: String
  value_EQUALS: Float
  value_GREATER_THAN: Float
  value_GREATER_THAN_OR_EQUALS: Float
  value_LOWER_THAN: Float
  value_LOWER_THAN_OR_EQUALS: Float
  value_NOT_EQUALS: Float
}

input SimpleQuantityLogicalFilterOption {
  AND: [SimpleQuantityLogicalFilterOption!]
  NOT: SimpleQuantityLogicalFilterOption
  OR: [SimpleQuantityLogicalFilterOption!]
  code_CONTAINS: code
  code_ENDS_WITH: code
  code_EQUALS: code
  code_GREATER_THAN: code
  code_GREATER_THAN_OR_EQUALS: code
  code_LOWER_THAN: code
  code_LOWER_THAN_OR_EQUALS: code
  code_NOT_EQUALS: code
  code_STARTS_WITH: code
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  system_CONTAINS: uri
  system_ENDS_WITH: uri
  system_EQUALS: uri
  system_GREATER_THAN: uri
  system_GREATER_THAN_OR_EQUALS: uri
  system_LOWER_THAN: uri
  system_LOWER_THAN_OR_EQUALS: uri
  system_NOT_EQUALS: uri
  system_STARTS_WITH: uri
  unit_CONTAINS: String
  unit_ENDS_WITH: String
  unit_EQUALS: String
  unit_GREATER_THAN: String
  unit_GREATER_THAN_OR_EQUALS: String
  unit_LOWER_THAN: String
  unit_LOWER_THAN_OR_EQUALS: String
  unit_NOT_EQUALS: String
  unit_STARTS_WITH: String
  value_EQUALS: Float
  value_GREATER_THAN: Float
  value_GREATER_THAN_OR_EQUALS: Float
  value_LOWER_THAN: Float
  value_LOWER_THAN_OR_EQUALS: Float
  value_NOT_EQUALS: Float
}

input SimpleQuantitySortOption {
  code: SortDirection
  comparator: SortDirection
  extension: ExtensionSortOption
  id: SortDirection
  system: SortDirection
  unit: SortDirection
  value: SortDirection
}

input StructureDefinitionContextCommandInput {
  expression: String!
  extension: [ExtensionCommandInput!]
  id: String
  modifierExtension: [ExtensionCommandInput!]
  type: code!
}

input StructureDefinitionContextFilterOption {
  expression_CONTAINS: String
  expression_ENDS_WITH: String
  expression_EQUALS: String
  expression_GREATER_THAN: String
  expression_GREATER_THAN_OR_EQUALS: String
  expression_LOWER_THAN: String
  expression_LOWER_THAN_OR_EQUALS: String
  expression_NOT_EQUALS: String
  expression_STARTS_WITH: String
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  modifierExtension_ALL_MATCH: ExtensionFilterOption
  modifierExtension_ANY_MATCH: ExtensionFilterOption
  modifierExtension_NONE_MATCH: ExtensionFilterOption
  type_CONTAINS: code
  type_ENDS_WITH: code
  type_EQUALS: code
  type_GREATER_THAN: code
  type_GREATER_THAN_OR_EQUALS: code
  type_LOWER_THAN: code
  type_LOWER_THAN_OR_EQUALS: code
  type_NOT_EQUALS: code
  type_STARTS_WITH: code
}

input StructureDefinitionContextInvariantChildFilterOption {
  CONTAINS: String
  ENDS_WITH: String
  EQUALS: String
  GREATER_THAN: String
  GREATER_THAN_OR_EQUALS: String
  LOWER_THAN: String
  LOWER_THAN_OR_EQUALS: String
  NOT_EQUALS: String
  STARTS_WITH: String
}

input StructureDefinitionContextLogicalFilterOption {
  AND: [StructureDefinitionContextLogicalFilterOption!]
  NOT: StructureDefinitionContextLogicalFilterOption
  OR: [StructureDefinitionContextLogicalFilterOption!]
  expression_CONTAINS: String
  expression_ENDS_WITH: String
  expression_EQUALS: String
  expression_GREATER_THAN: String
  expression_GREATER_THAN_OR_EQUALS: String
  expression_LOWER_THAN: String
  expression_LOWER_THAN_OR_EQUALS: String
  expression_NOT_EQUALS: String
  expression_STARTS_WITH: String
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  modifierExtension_ALL_MATCH: ExtensionFilterOption
  modifierExtension_ANY_MATCH: ExtensionFilterOption
  modifierExtension_NONE_MATCH: ExtensionFilterOption
  type_CONTAINS: code
  type_ENDS_WITH: code
  type_EQUALS: code
  type_GREATER_THAN: code
  type_GREATER_THAN_OR_EQUALS: code
  type_LOWER_THAN: code
  type_LOWER_THAN_OR_EQUALS: code
  type_NOT_EQUALS: code
  type_STARTS_WITH: code
}

input StructureDefinitionContextSortOption {
  expression: SortDirection
  extension: ExtensionSortOption
  id: SortDirection
  modifierExtension: ExtensionSortOption
  type: SortDirection
}

input StructureDefinitionDifferentialCommandInput {
  element: [ElementDefinitionCommandInput!]!
  extension: [ExtensionCommandInput!]
  id: String
  modifierExtension: [ExtensionCommandInput!]
  parent: String!
}

input StructureDefinitionDifferentialFilterOption {
  element_ALL_MATCH: ElementDefinitionFilterOption
  element_ANY_MATCH: ElementDefinitionFilterOption
  element_NONE_MATCH: ElementDefinitionFilterOption
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  modifierExtension_ALL_MATCH: ExtensionFilterOption
  modifierExtension_ANY_MATCH: ExtensionFilterOption
  modifierExtension_NONE_MATCH: ExtensionFilterOption
  parent_CONTAINS: String
  parent_ENDS_WITH: String
  parent_EQUALS: String
  parent_GREATER_THAN: String
  parent_GREATER_THAN_OR_EQUALS: String
  parent_LOWER_THAN: String
  parent_LOWER_THAN_OR_EQUALS: String
  parent_NOT_EQUALS: String
  parent_STARTS_WITH: String
}

input StructureDefinitionDifferentialLogicalFilterOption {
  AND: [StructureDefinitionDifferentialLogicalFilterOption!]
  NOT: StructureDefinitionDifferentialLogicalFilterOption
  OR: [StructureDefinitionDifferentialLogicalFilterOption!]
  element_ALL_MATCH: ElementDefinitionFilterOption
  element_ANY_MATCH: ElementDefinitionFilterOption
  element_NONE_MATCH: ElementDefinitionFilterOption
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  modifierExtension_ALL_MATCH: ExtensionFilterOption
  modifierExtension_ANY_MATCH: ExtensionFilterOption
  modifierExtension_NONE_MATCH: ExtensionFilterOption
  parent_CONTAINS: String
  parent_ENDS_WITH: String
  parent_EQUALS: String
  parent_GREATER_THAN: String
  parent_GREATER_THAN_OR_EQUALS: String
  parent_LOWER_THAN: String
  parent_LOWER_THAN_OR_EQUALS: String
  parent_NOT_EQUALS: String
  parent_STARTS_WITH: String
}

input StructureDefinitionDifferentialSortOption {
  element: ElementDefinitionSortOption
  extension: ExtensionSortOption
  id: SortDirection
  modifierExtension: ExtensionSortOption
  parent: SortDirection
}

input StructureDefinitionFilterOption {
  abstract_EQUALS: Boolean
  abstract_NOT_EQUALS: Boolean
  baseDefinitionReference: StructureDefinitionFilterOption
  baseDefinition_CONTAINS: canonical
  baseDefinition_ENDS_WITH: canonical
  baseDefinition_EQUALS: canonical
  baseDefinition_GREATER_THAN: canonical
  baseDefinition_GREATER_THAN_OR_EQUALS: canonical
  baseDefinition_LOWER_THAN: canonical
  baseDefinition_LOWER_THAN_OR_EQUALS: canonical
  baseDefinition_NOT_EQUALS: canonical
  baseDefinition_STARTS_WITH: canonical
  contained_ALL_MATCH: ResourceFilterOption
  contained_ANY_MATCH: ResourceFilterOption
  contained_NONE_MATCH: ResourceFilterOption
  contextInvariant_ALL_MATCH: StructureDefinitionContextInvariantChildFilterOption
  contextInvariant_ANY_MATCH: StructureDefinitionContextInvariantChildFilterOption
  contextInvariant_EQUALS: [String!]
  contextInvariant_NONE_MATCH: StructureDefinitionContextInvariantChildFilterOption
  contextInvariant_NOT_EQUALS: [String!]
  context_ALL_MATCH: StructureDefinitionContextFilterOption
  context_ANY_MATCH: StructureDefinitionContextFilterOption
  context_NONE_MATCH: StructureDefinitionContextFilterOption
  copyright_CONTAINS: markdown
  copyright_ENDS_WITH: markdown
  copyright_EQUALS: markdown
  copyright_GREATER_THAN: markdown
  copyright_GREATER_THAN_OR_EQUALS: markdown
  copyright_LOWER_THAN: markdown
  copyright_LOWER_THAN_OR_EQUALS: markdown
  copyright_NOT_EQUALS: markdown
  copyright_STARTS_WITH: markdown
  date_EQUALS: dateTime
  date_GREATER_THAN: dateTime
  date_GREATER_THAN_OR_EQUALS: dateTime
  date_LOWER_THAN: dateTime
  date_LOWER_THAN_OR_EQUALS: dateTime
  date_NOT_EQUALS: dateTime
  derivation_CONTAINS: code
  derivation_ENDS_WITH: code
  derivation_EQUALS: code
  derivation_GREATER_THAN: code
  derivation_GREATER_THAN_OR_EQUALS: code
  derivation_LOWER_THAN: code
  derivation_LOWER_THAN_OR_EQUALS: code
  derivation_NOT_EQUALS: code
  derivation_STARTS_WITH: code
  description_CONTAINS: markdown
  description_ENDS_WITH: markdown
  description_EQUALS: markdown
  description_GREATER_THAN: markdown
  description_GREATER_THAN_OR_EQUALS: markdown
  description_LOWER_THAN: markdown
  description_LOWER_THAN_OR_EQUALS: markdown
  description_NOT_EQUALS: markdown
  description_STARTS_WITH: markdown
  differential: StructureDefinitionDifferentialFilterOption
  experimental_EQUALS: Boolean
  experimental_NOT_EQUALS: Boolean
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  fhirVersion_CONTAINS: code
  fhirVersion_ENDS_WITH: code
  fhirVersion_EQUALS: code
  fhirVersion_GREATER_THAN: code
  fhirVersion_GREATER_THAN_OR_EQUALS: code
  fhirVersion_LOWER_THAN: code
  fhirVersion_LOWER_THAN_OR_EQUALS: code
  fhirVersion_NOT_EQUALS: code
  fhirVersion_STARTS_WITH: code
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  identifier_ALL_MATCH: IdentifierFilterOption
  identifier_ANY_MATCH: IdentifierFilterOption
  identifier_NONE_MATCH: IdentifierFilterOption
  implicitRules_CONTAINS: uri
  implicitRules_ENDS_WITH: uri
  implicitRules_EQUALS: uri
  implicitRules_GREATER_THAN: uri
  implicitRules_GREATER_THAN_OR_EQUALS: uri
  implicitRules_LOWER_THAN: uri
  implicitRules_LOWER_THAN_OR_EQUALS: uri
  implicitRules_NOT_EQUALS: uri
  implicitRules_STARTS_WITH: uri
  jurisdiction_ALL_MATCH: CodeableConceptFilterOption
  jurisdiction_ANY_MATCH: CodeableConceptFilterOption
  jurisdiction_NONE_MATCH: CodeableConceptFilterOption
  keyword_ALL_MATCH: CodingFilterOption
  keyword_ANY_MATCH: CodingFilterOption
  keyword_NONE_MATCH: CodingFilterOption
  kind_CONTAINS: code
  kind_ENDS_WITH: code
  kind_EQUALS: code
  kind_GREATER_THAN: code
  kind_GREATER_THAN_OR_EQUALS: code
  kind_LOWER_THAN: code
  kind_LOWER_THAN_OR_EQUALS: code
  kind_NOT_EQUALS: code
  kind_STARTS_WITH: code
  language_CONTAINS: code
  language_ENDS_WITH: code
  language_EQUALS: code
  language_GREATER_THAN: code
  language_GREATER_THAN_OR_EQUALS: code
  language_LOWER_THAN: code
  language_LOWER_THAN_OR_EQUALS: code
  language_NOT_EQUALS: code
  language_STARTS_WITH: code
  mapping_ALL_MATCH: StructureDefinitionMappingFilterOption
  mapping_ANY_MATCH: StructureDefinitionMappingFilterOption
  mapping_NONE_MATCH: StructureDefinitionMappingFilterOption
  meta: MetaFilterOption
  modifierExtension_ALL_MATCH: ExtensionFilterOption
  modifierExtension_ANY_MATCH: ExtensionFilterOption
  modifierExtension_NONE_MATCH: ExtensionFilterOption
  name_CONTAINS: String
  name_ENDS_WITH: String
  name_EQUALS: String
  name_GREATER_THAN: String
  name_GREATER_THAN_OR_EQUALS: String
  name_LOWER_THAN: String
  name_LOWER_THAN_OR_EQUALS: String
  name_NOT_EQUALS: String
  name_STARTS_WITH: String
  publisher_CONTAINS: String
  publisher_ENDS_WITH: String
  publisher_EQUALS: String
  publisher_GREATER_THAN: String
  publisher_GREATER_THAN_OR_EQUALS: String
  publisher_LOWER_THAN: String
  publisher_LOWER_THAN_OR_EQUALS: String
  publisher_NOT_EQUALS: String
  publisher_STARTS_WITH: String
  purpose_CONTAINS: markdown
  purpose_ENDS_WITH: markdown
  purpose_EQUALS: markdown
  purpose_GREATER_THAN: markdown
  purpose_GREATER_THAN_OR_EQUALS: markdown
  purpose_LOWER_THAN: markdown
  purpose_LOWER_THAN_OR_EQUALS: markdown
  purpose_NOT_EQUALS: markdown
  purpose_STARTS_WITH: markdown
  snapshot: StructureDefinitionSnapshotFilterOption
  status_CONTAINS: code
  status_ENDS_WITH: code
  status_EQUALS: code
  status_GREATER_THAN: code
  status_GREATER_THAN_OR_EQUALS: code
  status_LOWER_THAN: code
  status_LOWER_THAN_OR_EQUALS: code
  status_NOT_EQUALS: code
  status_STARTS_WITH: code
  text: NarrativeFilterOption
  title_CONTAINS: String
  title_ENDS_WITH: String
  title_EQUALS: String
  title_GREATER_THAN: String
  title_GREATER_THAN_OR_EQUALS: String
  title_LOWER_THAN: String
  title_LOWER_THAN_OR_EQUALS: String
  title_NOT_EQUALS: String
  title_STARTS_WITH: String
  type_CONTAINS: uri
  type_ENDS_WITH: uri
  type_EQUALS: uri
  type_GREATER_THAN: uri
  type_GREATER_THAN_OR_EQUALS: uri
  type_LOWER_THAN: uri
  type_LOWER_THAN_OR_EQUALS: uri
  type_NOT_EQUALS: uri
  type_STARTS_WITH: uri
  url_CONTAINS: uri
  url_ENDS_WITH: uri
  url_EQUALS: uri
  url_GREATER_THAN: uri
  url_GREATER_THAN_OR_EQUALS: uri
  url_LOWER_THAN: uri
  url_LOWER_THAN_OR_EQUALS: uri
  url_NOT_EQUALS: uri
  url_STARTS_WITH: uri
  useContext_ALL_MATCH: UsageContextFilterOption
  useContext_ANY_MATCH: UsageContextFilterOption
  useContext_NONE_MATCH: UsageContextFilterOption
  version_CONTAINS: String
  version_ENDS_WITH: String
  version_EQUALS: String
  version_GREATER_THAN: String
  version_GREATER_THAN_OR_EQUALS: String
  version_LOWER_THAN: String
  version_LOWER_THAN_OR_EQUALS: String
  version_NOT_EQUALS: String
  version_STARTS_WITH: String
}

input StructureDefinitionLogicalFilterOption {
  AND: [StructureDefinitionLogicalFilterOption!]
  NOT: StructureDefinitionLogicalFilterOption
  OR: [StructureDefinitionLogicalFilterOption!]
  abstract_EQUALS: Boolean
  abstract_NOT_EQUALS: Boolean
  baseDefinitionReference: StructureDefinitionFilterOption
  baseDefinition_CONTAINS: canonical
  baseDefinition_ENDS_WITH: canonical
  baseDefinition_EQUALS: canonical
  baseDefinition_GREATER_THAN: canonical
  baseDefinition_GREATER_THAN_OR_EQUALS: canonical
  baseDefinition_LOWER_THAN: canonical
  baseDefinition_LOWER_THAN_OR_EQUALS: canonical
  baseDefinition_NOT_EQUALS: canonical
  baseDefinition_STARTS_WITH: canonical
  contained_ALL_MATCH: ResourceFilterOption
  contained_ANY_MATCH: ResourceFilterOption
  contained_NONE_MATCH: ResourceFilterOption
  contextInvariant_ALL_MATCH: StructureDefinitionContextInvariantChildFilterOption
  contextInvariant_ANY_MATCH: StructureDefinitionContextInvariantChildFilterOption
  contextInvariant_EQUALS: [String!]
  contextInvariant_NONE_MATCH: StructureDefinitionContextInvariantChildFilterOption
  contextInvariant_NOT_EQUALS: [String!]
  context_ALL_MATCH: StructureDefinitionContextFilterOption
  context_ANY_MATCH: StructureDefinitionContextFilterOption
  context_NONE_MATCH: StructureDefinitionContextFilterOption
  copyright_CONTAINS: markdown
  copyright_ENDS_WITH: markdown
  copyright_EQUALS: markdown
  copyright_GREATER_THAN: markdown
  copyright_GREATER_THAN_OR_EQUALS: markdown
  copyright_LOWER_THAN: markdown
  copyright_LOWER_THAN_OR_EQUALS: markdown
  copyright_NOT_EQUALS: markdown
  copyright_STARTS_WITH: markdown
  date_EQUALS: dateTime
  date_GREATER_THAN: dateTime
  date_GREATER_THAN_OR_EQUALS: dateTime
  date_LOWER_THAN: dateTime
  date_LOWER_THAN_OR_EQUALS: dateTime
  date_NOT_EQUALS: dateTime
  derivation_CONTAINS: code
  derivation_ENDS_WITH: code
  derivation_EQUALS: code
  derivation_GREATER_THAN: code
  derivation_GREATER_THAN_OR_EQUALS: code
  derivation_LOWER_THAN: code
  derivation_LOWER_THAN_OR_EQUALS: code
  derivation_NOT_EQUALS: code
  derivation_STARTS_WITH: code
  description_CONTAINS: markdown
  description_ENDS_WITH: markdown
  description_EQUALS: markdown
  description_GREATER_THAN: markdown
  description_GREATER_THAN_OR_EQUALS: markdown
  description_LOWER_THAN: markdown
  description_LOWER_THAN_OR_EQUALS: markdown
  description_NOT_EQUALS: markdown
  description_STARTS_WITH: markdown
  differential: StructureDefinitionDifferentialFilterOption
  experimental_EQUALS: Boolean
  experimental_NOT_EQUALS: Boolean
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  fhirVersion_CONTAINS: code
  fhirVersion_ENDS_WITH: code
  fhirVersion_EQUALS: code
  fhirVersion_GREATER_THAN: code
  fhirVersion_GREATER_THAN_OR_EQUALS: code
  fhirVersion_LOWER_THAN: code
  fhirVersion_LOWER_THAN_OR_EQUALS: code
  fhirVersion_NOT_EQUALS: code
  fhirVersion_STARTS_WITH: code
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  identifier_ALL_MATCH: IdentifierFilterOption
  identifier_ANY_MATCH: IdentifierFilterOption
  identifier_NONE_MATCH: IdentifierFilterOption
  implicitRules_CONTAINS: uri
  implicitRules_ENDS_WITH: uri
  implicitRules_EQUALS: uri
  implicitRules_GREATER_THAN: uri
  implicitRules_GREATER_THAN_OR_EQUALS: uri
  implicitRules_LOWER_THAN: uri
  implicitRules_LOWER_THAN_OR_EQUALS: uri
  implicitRules_NOT_EQUALS: uri
  implicitRules_STARTS_WITH: uri
  jurisdiction_ALL_MATCH: CodeableConceptFilterOption
  jurisdiction_ANY_MATCH: CodeableConceptFilterOption
  jurisdiction_NONE_MATCH: CodeableConceptFilterOption
  keyword_ALL_MATCH: CodingFilterOption
  keyword_ANY_MATCH: CodingFilterOption
  keyword_NONE_MATCH: CodingFilterOption
  kind_CONTAINS: code
  kind_ENDS_WITH: code
  kind_EQUALS: code
  kind_GREATER_THAN: code
  kind_GREATER_THAN_OR_EQUALS: code
  kind_LOWER_THAN: code
  kind_LOWER_THAN_OR_EQUALS: code
  kind_NOT_EQUALS: code
  kind_STARTS_WITH: code
  language_CONTAINS: code
  language_ENDS_WITH: code
  language_EQUALS: code
  language_GREATER_THAN: code
  language_GREATER_THAN_OR_EQUALS: code
  language_LOWER_THAN: code
  language_LOWER_THAN_OR_EQUALS: code
  language_NOT_EQUALS: code
  language_STARTS_WITH: code
  mapping_ALL_MATCH: StructureDefinitionMappingFilterOption
  mapping_ANY_MATCH: StructureDefinitionMappingFilterOption
  mapping_NONE_MATCH: StructureDefinitionMappingFilterOption
  meta: MetaFilterOption
  modifierExtension_ALL_MATCH: ExtensionFilterOption
  modifierExtension_ANY_MATCH: ExtensionFilterOption
  modifierExtension_NONE_MATCH: ExtensionFilterOption
  name_CONTAINS: String
  name_ENDS_WITH: String
  name_EQUALS: String
  name_GREATER_THAN: String
  name_GREATER_THAN_OR_EQUALS: String
  name_LOWER_THAN: String
  name_LOWER_THAN_OR_EQUALS: String
  name_NOT_EQUALS: String
  name_STARTS_WITH: String
  publisher_CONTAINS: String
  publisher_ENDS_WITH: String
  publisher_EQUALS: String
  publisher_GREATER_THAN: String
  publisher_GREATER_THAN_OR_EQUALS: String
  publisher_LOWER_THAN: String
  publisher_LOWER_THAN_OR_EQUALS: String
  publisher_NOT_EQUALS: String
  publisher_STARTS_WITH: String
  purpose_CONTAINS: markdown
  purpose_ENDS_WITH: markdown
  purpose_EQUALS: markdown
  purpose_GREATER_THAN: markdown
  purpose_GREATER_THAN_OR_EQUALS: markdown
  purpose_LOWER_THAN: markdown
  purpose_LOWER_THAN_OR_EQUALS: markdown
  purpose_NOT_EQUALS: markdown
  purpose_STARTS_WITH: markdown
  snapshot: StructureDefinitionSnapshotFilterOption
  status_CONTAINS: code
  status_ENDS_WITH: code
  status_EQUALS: code
  status_GREATER_THAN: code
  status_GREATER_THAN_OR_EQUALS: code
  status_LOWER_THAN: code
  status_LOWER_THAN_OR_EQUALS: code
  status_NOT_EQUALS: code
  status_STARTS_WITH: code
  text: NarrativeFilterOption
  title_CONTAINS: String
  title_ENDS_WITH: String
  title_EQUALS: String
  title_GREATER_THAN: String
  title_GREATER_THAN_OR_EQUALS: String
  title_LOWER_THAN: String
  title_LOWER_THAN_OR_EQUALS: String
  title_NOT_EQUALS: String
  title_STARTS_WITH: String
  type_CONTAINS: uri
  type_ENDS_WITH: uri
  type_EQUALS: uri
  type_GREATER_THAN: uri
  type_GREATER_THAN_OR_EQUALS: uri
  type_LOWER_THAN: uri
  type_LOWER_THAN_OR_EQUALS: uri
  type_NOT_EQUALS: uri
  type_STARTS_WITH: uri
  url_CONTAINS: uri
  url_ENDS_WITH: uri
  url_EQUALS: uri
  url_GREATER_THAN: uri
  url_GREATER_THAN_OR_EQUALS: uri
  url_LOWER_THAN: uri
  url_LOWER_THAN_OR_EQUALS: uri
  url_NOT_EQUALS: uri
  url_STARTS_WITH: uri
  useContext_ALL_MATCH: UsageContextFilterOption
  useContext_ANY_MATCH: UsageContextFilterOption
  useContext_NONE_MATCH: UsageContextFilterOption
  version_CONTAINS: String
  version_ENDS_WITH: String
  version_EQUALS: String
  version_GREATER_THAN: String
  version_GREATER_THAN_OR_EQUALS: String
  version_LOWER_THAN: String
  version_LOWER_THAN_OR_EQUALS: String
  version_NOT_EQUALS: String
  version_STARTS_WITH: String
}

input StructureDefinitionMappingCommandInput {
  comment: String
  extension: [ExtensionCommandInput!]
  id: String
  identity: ID!
  modifierExtension: [ExtensionCommandInput!]
  name: String
  uri: uri
}

input StructureDefinitionMappingFilterOption {
  comment_CONTAINS: String
  comment_ENDS_WITH: String
  comment_EQUALS: String
  comment_GREATER_THAN: String
  comment_GREATER_THAN_OR_EQUALS: String
  comment_LOWER_THAN: String
  comment_LOWER_THAN_OR_EQUALS: String
  comment_NOT_EQUALS: String
  comment_STARTS_WITH: String
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  identity_CONTAINS: ID
  identity_ENDS_WITH: ID
  identity_EQUALS: ID
  identity_GREATER_THAN: ID
  identity_GREATER_THAN_OR_EQUALS: ID
  identity_LOWER_THAN: ID
  identity_LOWER_THAN_OR_EQUALS: ID
  identity_NOT_EQUALS: ID
  identity_STARTS_WITH: ID
  modifierExtension_ALL_MATCH: ExtensionFilterOption
  modifierExtension_ANY_MATCH: ExtensionFilterOption
  modifierExtension_NONE_MATCH: ExtensionFilterOption
  name_CONTAINS: String
  name_ENDS_WITH: String
  name_EQUALS: String
  name_GREATER_THAN: String
  name_GREATER_THAN_OR_EQUALS: String
  name_LOWER_THAN: String
  name_LOWER_THAN_OR_EQUALS: String
  name_NOT_EQUALS: String
  name_STARTS_WITH: String
  uri_CONTAINS: uri
  uri_ENDS_WITH: uri
  uri_EQUALS: uri
  uri_GREATER_THAN: uri
  uri_GREATER_THAN_OR_EQUALS: uri
  uri_LOWER_THAN: uri
  uri_LOWER_THAN_OR_EQUALS: uri
  uri_NOT_EQUALS: uri
  uri_STARTS_WITH: uri
}

input StructureDefinitionMappingLogicalFilterOption {
  AND: [StructureDefinitionMappingLogicalFilterOption!]
  NOT: StructureDefinitionMappingLogicalFilterOption
  OR: [StructureDefinitionMappingLogicalFilterOption!]
  comment_CONTAINS: String
  comment_ENDS_WITH: String
  comment_EQUALS: String
  comment_GREATER_THAN: String
  comment_GREATER_THAN_OR_EQUALS: String
  comment_LOWER_THAN: String
  comment_LOWER_THAN_OR_EQUALS: String
  comment_NOT_EQUALS: String
  comment_STARTS_WITH: String
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  identity_CONTAINS: ID
  identity_ENDS_WITH: ID
  identity_EQUALS: ID
  identity_GREATER_THAN: ID
  identity_GREATER_THAN_OR_EQUALS: ID
  identity_LOWER_THAN: ID
  identity_LOWER_THAN_OR_EQUALS: ID
  identity_NOT_EQUALS: ID
  identity_STARTS_WITH: ID
  modifierExtension_ALL_MATCH: ExtensionFilterOption
  modifierExtension_ANY_MATCH: ExtensionFilterOption
  modifierExtension_NONE_MATCH: ExtensionFilterOption
  name_CONTAINS: String
  name_ENDS_WITH: String
  name_EQUALS: String
  name_GREATER_THAN: String
  name_GREATER_THAN_OR_EQUALS: String
  name_LOWER_THAN: String
  name_LOWER_THAN_OR_EQUALS: String
  name_NOT_EQUALS: String
  name_STARTS_WITH: String
  uri_CONTAINS: uri
  uri_ENDS_WITH: uri
  uri_EQUALS: uri
  uri_GREATER_THAN: uri
  uri_GREATER_THAN_OR_EQUALS: uri
  uri_LOWER_THAN: uri
  uri_LOWER_THAN_OR_EQUALS: uri
  uri_NOT_EQUALS: uri
  uri_STARTS_WITH: uri
}

input StructureDefinitionMappingSortOption {
  comment: SortDirection
  extension: ExtensionSortOption
  id: SortDirection
  identity: SortDirection
  modifierExtension: ExtensionSortOption
  name: SortDirection
  uri: SortDirection
}

input StructureDefinitionSnapshotCommandInput {
  element: [ElementDefinitionCommandInput!]!
  extension: [ExtensionCommandInput!]
  id: String
  modifierExtension: [ExtensionCommandInput!]
}

input StructureDefinitionSnapshotFilterOption {
  element_ALL_MATCH: ElementDefinitionFilterOption
  element_ANY_MATCH: ElementDefinitionFilterOption
  element_NONE_MATCH: ElementDefinitionFilterOption
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  modifierExtension_ALL_MATCH: ExtensionFilterOption
  modifierExtension_ANY_MATCH: ExtensionFilterOption
  modifierExtension_NONE_MATCH: ExtensionFilterOption
}

input StructureDefinitionSnapshotLogicalFilterOption {
  AND: [StructureDefinitionSnapshotLogicalFilterOption!]
  NOT: StructureDefinitionSnapshotLogicalFilterOption
  OR: [StructureDefinitionSnapshotLogicalFilterOption!]
  element_ALL_MATCH: ElementDefinitionFilterOption
  element_ANY_MATCH: ElementDefinitionFilterOption
  element_NONE_MATCH: ElementDefinitionFilterOption
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  modifierExtension_ALL_MATCH: ExtensionFilterOption
  modifierExtension_ANY_MATCH: ExtensionFilterOption
  modifierExtension_NONE_MATCH: ExtensionFilterOption
}

input StructureDefinitionSnapshotSortOption {
  element: ElementDefinitionSortOption
  extension: ExtensionSortOption
  id: SortDirection
  modifierExtension: ExtensionSortOption
}

input StructureDefinitionSortOption {
  abstract: SortDirection
  baseDefinition: SortDirection
  baseDefinitionReference: StructureDefinitionSortOption
  contained: ResourceSortOption
  context: StructureDefinitionContextSortOption
  contextInvariant: SortDirection
  copyright: SortDirection
  date: SortDirection
  derivation: SortDirection
  description: SortDirection
  differential: StructureDefinitionDifferentialSortOption
  experimental: SortDirection
  extension: ExtensionSortOption
  fhirVersion: SortDirection
  id: SortDirection
  identifier: IdentifierSortOption
  implicitRules: SortDirection
  jurisdiction: CodeableConceptSortOption
  keyword: CodingSortOption
  kind: SortDirection
  language: SortDirection
  mapping: StructureDefinitionMappingSortOption
  meta: MetaSortOption
  modifierExtension: ExtensionSortOption
  name: SortDirection
  publisher: SortDirection
  purpose: SortDirection
  snapshot: StructureDefinitionSnapshotSortOption
  status: SortDirection
  text: NarrativeSortOption
  title: SortDirection
  type: SortDirection
  url: SortDirection
  useContext: UsageContextSortOption
  version: SortDirection
}

input TimingCommandInput {
  code: CodeableConceptCommandInput
  event: [dateTime!]
  extension: [ExtensionCommandInput!]
  id: String
  modifierExtension: [ExtensionCommandInput!]
  repeat: TimingRepeatCommandInput
}

input TimingEventChildFilterOption {
  EQUALS: dateTime
  GREATER_THAN: dateTime
  GREATER_THAN_OR_EQUALS: dateTime
  LOWER_THAN: dateTime
  LOWER_THAN_OR_EQUALS: dateTime
  NOT_EQUALS: dateTime
}

input TimingFilterOption {
  code: CodeableConceptFilterOption
  event_ALL_MATCH: TimingEventChildFilterOption
  event_ANY_MATCH: TimingEventChildFilterOption
  event_EQUALS: [dateTime!]
  event_NONE_MATCH: TimingEventChildFilterOption
  event_NOT_EQUALS: [dateTime!]
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  modifierExtension_ALL_MATCH: ExtensionFilterOption
  modifierExtension_ANY_MATCH: ExtensionFilterOption
  modifierExtension_NONE_MATCH: ExtensionFilterOption
  repeat: TimingRepeatFilterOption
}

input TimingLogicalFilterOption {
  AND: [TimingLogicalFilterOption!]
  NOT: TimingLogicalFilterOption
  OR: [TimingLogicalFilterOption!]
  code: CodeableConceptFilterOption
  event_ALL_MATCH: TimingEventChildFilterOption
  event_ANY_MATCH: TimingEventChildFilterOption
  event_EQUALS: [dateTime!]
  event_NONE_MATCH: TimingEventChildFilterOption
  event_NOT_EQUALS: [dateTime!]
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  modifierExtension_ALL_MATCH: ExtensionFilterOption
  modifierExtension_ANY_MATCH: ExtensionFilterOption
  modifierExtension_NONE_MATCH: ExtensionFilterOption
  repeat: TimingRepeatFilterOption
}

input TimingRepeatCommandInput {
  bounds: TimingRepeatCommandInputBounds
  count: positiveInt
  countMax: positiveInt
  dayOfWeek: [code!]
  duration: Float
  durationMax: Float
  durationUnit: code
  extension: [ExtensionCommandInput!]
  frequency: positiveInt
  frequencyMax: positiveInt
  id: String
  offset: unsignedInt
  period: Float
  periodMax: Float
  periodUnit: code
  timeOfDay: [time!]
  when: [code!]
}

"Generated Input Type, which works as a Union type. Only one field should be filled."
input TimingRepeatCommandInputBounds {
  Duration: DurationCommandInput
  Period: PeriodCommandInput
  Range: RangeCommandInput
}

input TimingRepeatDayOfWeekChildFilterOption {
  CONTAINS: code
  ENDS_WITH: code
  EQUALS: code
  GREATER_THAN: code
  GREATER_THAN_OR_EQUALS: code
  LOWER_THAN: code
  LOWER_THAN_OR_EQUALS: code
  NOT_EQUALS: code
  STARTS_WITH: code
}

input TimingRepeatFilterOption {
  countMax_EQUALS: positiveInt
  countMax_GREATER_THAN: positiveInt
  countMax_GREATER_THAN_OR_EQUALS: positiveInt
  countMax_LOWER_THAN: positiveInt
  countMax_LOWER_THAN_OR_EQUALS: positiveInt
  countMax_NOT_EQUALS: positiveInt
  count_EQUALS: positiveInt
  count_GREATER_THAN: positiveInt
  count_GREATER_THAN_OR_EQUALS: positiveInt
  count_LOWER_THAN: positiveInt
  count_LOWER_THAN_OR_EQUALS: positiveInt
  count_NOT_EQUALS: positiveInt
  dayOfWeek_ALL_MATCH: TimingRepeatDayOfWeekChildFilterOption
  dayOfWeek_ANY_MATCH: TimingRepeatDayOfWeekChildFilterOption
  dayOfWeek_EQUALS: [code!]
  dayOfWeek_NONE_MATCH: TimingRepeatDayOfWeekChildFilterOption
  dayOfWeek_NOT_EQUALS: [code!]
  durationMax_EQUALS: Float
  durationMax_GREATER_THAN: Float
  durationMax_GREATER_THAN_OR_EQUALS: Float
  durationMax_LOWER_THAN: Float
  durationMax_LOWER_THAN_OR_EQUALS: Float
  durationMax_NOT_EQUALS: Float
  durationUnit_CONTAINS: code
  durationUnit_ENDS_WITH: code
  durationUnit_EQUALS: code
  durationUnit_GREATER_THAN: code
  durationUnit_GREATER_THAN_OR_EQUALS: code
  durationUnit_LOWER_THAN: code
  durationUnit_LOWER_THAN_OR_EQUALS: code
  durationUnit_NOT_EQUALS: code
  durationUnit_STARTS_WITH: code
  duration_EQUALS: Float
  duration_GREATER_THAN: Float
  duration_GREATER_THAN_OR_EQUALS: Float
  duration_LOWER_THAN: Float
  duration_LOWER_THAN_OR_EQUALS: Float
  duration_NOT_EQUALS: Float
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  frequencyMax_EQUALS: positiveInt
  frequencyMax_GREATER_THAN: positiveInt
  frequencyMax_GREATER_THAN_OR_EQUALS: positiveInt
  frequencyMax_LOWER_THAN: positiveInt
  frequencyMax_LOWER_THAN_OR_EQUALS: positiveInt
  frequencyMax_NOT_EQUALS: positiveInt
  frequency_EQUALS: positiveInt
  frequency_GREATER_THAN: positiveInt
  frequency_GREATER_THAN_OR_EQUALS: positiveInt
  frequency_LOWER_THAN: positiveInt
  frequency_LOWER_THAN_OR_EQUALS: positiveInt
  frequency_NOT_EQUALS: positiveInt
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  offset_EQUALS: unsignedInt
  offset_GREATER_THAN: unsignedInt
  offset_GREATER_THAN_OR_EQUALS: unsignedInt
  offset_LOWER_THAN: unsignedInt
  offset_LOWER_THAN_OR_EQUALS: unsignedInt
  offset_NOT_EQUALS: unsignedInt
  periodMax_EQUALS: Float
  periodMax_GREATER_THAN: Float
  periodMax_GREATER_THAN_OR_EQUALS: Float
  periodMax_LOWER_THAN: Float
  periodMax_LOWER_THAN_OR_EQUALS: Float
  periodMax_NOT_EQUALS: Float
  periodUnit_CONTAINS: code
  periodUnit_ENDS_WITH: code
  periodUnit_EQUALS: code
  periodUnit_GREATER_THAN: code
  periodUnit_GREATER_THAN_OR_EQUALS: code
  periodUnit_LOWER_THAN: code
  periodUnit_LOWER_THAN_OR_EQUALS: code
  periodUnit_NOT_EQUALS: code
  periodUnit_STARTS_WITH: code
  period_EQUALS: Float
  period_GREATER_THAN: Float
  period_GREATER_THAN_OR_EQUALS: Float
  period_LOWER_THAN: Float
  period_LOWER_THAN_OR_EQUALS: Float
  period_NOT_EQUALS: Float
  timeOfDay_ALL_MATCH: TimingRepeatTimeOfDayChildFilterOption
  timeOfDay_ANY_MATCH: TimingRepeatTimeOfDayChildFilterOption
  timeOfDay_EQUALS: [time!]
  timeOfDay_NONE_MATCH: TimingRepeatTimeOfDayChildFilterOption
  timeOfDay_NOT_EQUALS: [time!]
  when_ALL_MATCH: TimingRepeatWhenChildFilterOption
  when_ANY_MATCH: TimingRepeatWhenChildFilterOption
  when_EQUALS: [code!]
  when_NONE_MATCH: TimingRepeatWhenChildFilterOption
  when_NOT_EQUALS: [code!]
}

input TimingRepeatLogicalFilterOption {
  AND: [TimingRepeatLogicalFilterOption!]
  NOT: TimingRepeatLogicalFilterOption
  OR: [TimingRepeatLogicalFilterOption!]
  countMax_EQUALS: positiveInt
  countMax_GREATER_THAN: positiveInt
  countMax_GREATER_THAN_OR_EQUALS: positiveInt
  countMax_LOWER_THAN: positiveInt
  countMax_LOWER_THAN_OR_EQUALS: positiveInt
  countMax_NOT_EQUALS: positiveInt
  count_EQUALS: positiveInt
  count_GREATER_THAN: positiveInt
  count_GREATER_THAN_OR_EQUALS: positiveInt
  count_LOWER_THAN: positiveInt
  count_LOWER_THAN_OR_EQUALS: positiveInt
  count_NOT_EQUALS: positiveInt
  dayOfWeek_ALL_MATCH: TimingRepeatDayOfWeekChildFilterOption
  dayOfWeek_ANY_MATCH: TimingRepeatDayOfWeekChildFilterOption
  dayOfWeek_EQUALS: [code!]
  dayOfWeek_NONE_MATCH: TimingRepeatDayOfWeekChildFilterOption
  dayOfWeek_NOT_EQUALS: [code!]
  durationMax_EQUALS: Float
  durationMax_GREATER_THAN: Float
  durationMax_GREATER_THAN_OR_EQUALS: Float
  durationMax_LOWER_THAN: Float
  durationMax_LOWER_THAN_OR_EQUALS: Float
  durationMax_NOT_EQUALS: Float
  durationUnit_CONTAINS: code
  durationUnit_ENDS_WITH: code
  durationUnit_EQUALS: code
  durationUnit_GREATER_THAN: code
  durationUnit_GREATER_THAN_OR_EQUALS: code
  durationUnit_LOWER_THAN: code
  durationUnit_LOWER_THAN_OR_EQUALS: code
  durationUnit_NOT_EQUALS: code
  durationUnit_STARTS_WITH: code
  duration_EQUALS: Float
  duration_GREATER_THAN: Float
  duration_GREATER_THAN_OR_EQUALS: Float
  duration_LOWER_THAN: Float
  duration_LOWER_THAN_OR_EQUALS: Float
  duration_NOT_EQUALS: Float
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  frequencyMax_EQUALS: positiveInt
  frequencyMax_GREATER_THAN: positiveInt
  frequencyMax_GREATER_THAN_OR_EQUALS: positiveInt
  frequencyMax_LOWER_THAN: positiveInt
  frequencyMax_LOWER_THAN_OR_EQUALS: positiveInt
  frequencyMax_NOT_EQUALS: positiveInt
  frequency_EQUALS: positiveInt
  frequency_GREATER_THAN: positiveInt
  frequency_GREATER_THAN_OR_EQUALS: positiveInt
  frequency_LOWER_THAN: positiveInt
  frequency_LOWER_THAN_OR_EQUALS: positiveInt
  frequency_NOT_EQUALS: positiveInt
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  offset_EQUALS: unsignedInt
  offset_GREATER_THAN: unsignedInt
  offset_GREATER_THAN_OR_EQUALS: unsignedInt
  offset_LOWER_THAN: unsignedInt
  offset_LOWER_THAN_OR_EQUALS: unsignedInt
  offset_NOT_EQUALS: unsignedInt
  periodMax_EQUALS: Float
  periodMax_GREATER_THAN: Float
  periodMax_GREATER_THAN_OR_EQUALS: Float
  periodMax_LOWER_THAN: Float
  periodMax_LOWER_THAN_OR_EQUALS: Float
  periodMax_NOT_EQUALS: Float
  periodUnit_CONTAINS: code
  periodUnit_ENDS_WITH: code
  periodUnit_EQUALS: code
  periodUnit_GREATER_THAN: code
  periodUnit_GREATER_THAN_OR_EQUALS: code
  periodUnit_LOWER_THAN: code
  periodUnit_LOWER_THAN_OR_EQUALS: code
  periodUnit_NOT_EQUALS: code
  periodUnit_STARTS_WITH: code
  period_EQUALS: Float
  period_GREATER_THAN: Float
  period_GREATER_THAN_OR_EQUALS: Float
  period_LOWER_THAN: Float
  period_LOWER_THAN_OR_EQUALS: Float
  period_NOT_EQUALS: Float
  timeOfDay_ALL_MATCH: TimingRepeatTimeOfDayChildFilterOption
  timeOfDay_ANY_MATCH: TimingRepeatTimeOfDayChildFilterOption
  timeOfDay_EQUALS: [time!]
  timeOfDay_NONE_MATCH: TimingRepeatTimeOfDayChildFilterOption
  timeOfDay_NOT_EQUALS: [time!]
  when_ALL_MATCH: TimingRepeatWhenChildFilterOption
  when_ANY_MATCH: TimingRepeatWhenChildFilterOption
  when_EQUALS: [code!]
  when_NONE_MATCH: TimingRepeatWhenChildFilterOption
  when_NOT_EQUALS: [code!]
}

input TimingRepeatSortOption {
  count: SortDirection
  countMax: SortDirection
  dayOfWeek: SortDirection
  duration: SortDirection
  durationMax: SortDirection
  durationUnit: SortDirection
  extension: ExtensionSortOption
  frequency: SortDirection
  frequencyMax: SortDirection
  id: SortDirection
  offset: SortDirection
  period: SortDirection
  periodMax: SortDirection
  periodUnit: SortDirection
  timeOfDay: SortDirection
  when: SortDirection
}

input TimingRepeatTimeOfDayChildFilterOption {
  EQUALS: time
  GREATER_THAN: time
  GREATER_THAN_OR_EQUALS: time
  LOWER_THAN: time
  LOWER_THAN_OR_EQUALS: time
  NOT_EQUALS: time
}

input TimingRepeatWhenChildFilterOption {
  CONTAINS: code
  ENDS_WITH: code
  EQUALS: code
  GREATER_THAN: code
  GREATER_THAN_OR_EQUALS: code
  LOWER_THAN: code
  LOWER_THAN_OR_EQUALS: code
  NOT_EQUALS: code
  STARTS_WITH: code
}

input TimingSortOption {
  code: CodeableConceptSortOption
  event: SortDirection
  extension: ExtensionSortOption
  id: SortDirection
  modifierExtension: ExtensionSortOption
  repeat: TimingRepeatSortOption
}

input TriggerDefinitionCommandInput {
  condition: ExpressionCommandInput
  data: [DataRequirementCommandInput!]
  extension: [ExtensionCommandInput!]
  id: String
  name: String
  timing: TriggerDefinitionCommandInputTiming
  type: code!
}

"Generated Input Type, which works as a Union type. Only one field should be filled."
input TriggerDefinitionCommandInputTiming {
  Timing: TimingCommandInput
  date: date
  dateTime: dateTime
}

input TriggerDefinitionFilterOption {
  condition: ExpressionFilterOption
  data_ALL_MATCH: DataRequirementFilterOption
  data_ANY_MATCH: DataRequirementFilterOption
  data_NONE_MATCH: DataRequirementFilterOption
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  name_CONTAINS: String
  name_ENDS_WITH: String
  name_EQUALS: String
  name_GREATER_THAN: String
  name_GREATER_THAN_OR_EQUALS: String
  name_LOWER_THAN: String
  name_LOWER_THAN_OR_EQUALS: String
  name_NOT_EQUALS: String
  name_STARTS_WITH: String
  type_CONTAINS: code
  type_ENDS_WITH: code
  type_EQUALS: code
  type_GREATER_THAN: code
  type_GREATER_THAN_OR_EQUALS: code
  type_LOWER_THAN: code
  type_LOWER_THAN_OR_EQUALS: code
  type_NOT_EQUALS: code
  type_STARTS_WITH: code
}

input TriggerDefinitionLogicalFilterOption {
  AND: [TriggerDefinitionLogicalFilterOption!]
  NOT: TriggerDefinitionLogicalFilterOption
  OR: [TriggerDefinitionLogicalFilterOption!]
  condition: ExpressionFilterOption
  data_ALL_MATCH: DataRequirementFilterOption
  data_ANY_MATCH: DataRequirementFilterOption
  data_NONE_MATCH: DataRequirementFilterOption
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  name_CONTAINS: String
  name_ENDS_WITH: String
  name_EQUALS: String
  name_GREATER_THAN: String
  name_GREATER_THAN_OR_EQUALS: String
  name_LOWER_THAN: String
  name_LOWER_THAN_OR_EQUALS: String
  name_NOT_EQUALS: String
  name_STARTS_WITH: String
  type_CONTAINS: code
  type_ENDS_WITH: code
  type_EQUALS: code
  type_GREATER_THAN: code
  type_GREATER_THAN_OR_EQUALS: code
  type_LOWER_THAN: code
  type_LOWER_THAN_OR_EQUALS: code
  type_NOT_EQUALS: code
  type_STARTS_WITH: code
}

input TriggerDefinitionSortOption {
  condition: ExpressionSortOption
  data: DataRequirementSortOption
  extension: ExtensionSortOption
  id: SortDirection
  name: SortDirection
  type: SortDirection
}

input UsageContextCommandInput {
  code: CodingCommandInput!
  extension: [ExtensionCommandInput!]
  id: String
  value: UsageContextCommandInputValue!
}

"Generated Input Type, which works as a Union type. Only one field should be filled."
input UsageContextCommandInputValue {
  CodeableConcept: CodeableConceptCommandInput
  Quantity: QuantityCommandInput
  Range: RangeCommandInput
}

input UsageContextFilterOption {
  code: CodingFilterOption
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
}

input UsageContextLogicalFilterOption {
  AND: [UsageContextLogicalFilterOption!]
  NOT: UsageContextLogicalFilterOption
  OR: [UsageContextLogicalFilterOption!]
  code: CodingFilterOption
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
}

input UsageContextSortOption {
  code: CodingSortOption
  extension: ExtensionSortOption
  id: SortDirection
}

input ValueSetComposeCommandInput {
  exclude: [ValueSetComposeIncludeCommandInput!]
  extension: [ExtensionCommandInput!]
  id: String
  inactive: Boolean
  include: [ValueSetComposeIncludeCommandInput!]!
  lockedDate: date
  modifierExtension: [ExtensionCommandInput!]
}

input ValueSetComposeFilterOption {
  exclude_ALL_MATCH: ValueSetComposeIncludeFilterOption
  exclude_ANY_MATCH: ValueSetComposeIncludeFilterOption
  exclude_NONE_MATCH: ValueSetComposeIncludeFilterOption
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  inactive_EQUALS: Boolean
  inactive_NOT_EQUALS: Boolean
  include_ALL_MATCH: ValueSetComposeIncludeFilterOption
  include_ANY_MATCH: ValueSetComposeIncludeFilterOption
  include_NONE_MATCH: ValueSetComposeIncludeFilterOption
  lockedDate_EQUALS: date
  lockedDate_GREATER_THAN: date
  lockedDate_GREATER_THAN_OR_EQUALS: date
  lockedDate_LOWER_THAN: date
  lockedDate_LOWER_THAN_OR_EQUALS: date
  lockedDate_NOT_EQUALS: date
  modifierExtension_ALL_MATCH: ExtensionFilterOption
  modifierExtension_ANY_MATCH: ExtensionFilterOption
  modifierExtension_NONE_MATCH: ExtensionFilterOption
}

input ValueSetComposeIncludeCommandInput {
  concept: [ValueSetComposeIncludeConceptCommandInput!]
  extension: [ExtensionCommandInput!]
  filter: [ValueSetComposeIncludeFilterCommandInput!]
  id: String
  modifierExtension: [ExtensionCommandInput!]
  system: uri
  valueSet: [canonical!]
  version: String
}

input ValueSetComposeIncludeConceptCommandInput {
  code: code!
  designation: [ValueSetComposeIncludeConceptDesignationCommandInput!]
  display: String
  extension: [ExtensionCommandInput!]
  id: String
  modifierExtension: [ExtensionCommandInput!]
}

input ValueSetComposeIncludeConceptDesignationCommandInput {
  extension: [ExtensionCommandInput!]
  id: String
  language: code
  modifierExtension: [ExtensionCommandInput!]
  use: CodingCommandInput
  value: String!
}

input ValueSetComposeIncludeConceptDesignationFilterOption {
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  language_CONTAINS: code
  language_ENDS_WITH: code
  language_EQUALS: code
  language_GREATER_THAN: code
  language_GREATER_THAN_OR_EQUALS: code
  language_LOWER_THAN: code
  language_LOWER_THAN_OR_EQUALS: code
  language_NOT_EQUALS: code
  language_STARTS_WITH: code
  modifierExtension_ALL_MATCH: ExtensionFilterOption
  modifierExtension_ANY_MATCH: ExtensionFilterOption
  modifierExtension_NONE_MATCH: ExtensionFilterOption
  use: CodingFilterOption
  value_CONTAINS: String
  value_ENDS_WITH: String
  value_EQUALS: String
  value_GREATER_THAN: String
  value_GREATER_THAN_OR_EQUALS: String
  value_LOWER_THAN: String
  value_LOWER_THAN_OR_EQUALS: String
  value_NOT_EQUALS: String
  value_STARTS_WITH: String
}

input ValueSetComposeIncludeConceptDesignationLogicalFilterOption {
  AND: [ValueSetComposeIncludeConceptDesignationLogicalFilterOption!]
  NOT: ValueSetComposeIncludeConceptDesignationLogicalFilterOption
  OR: [ValueSetComposeIncludeConceptDesignationLogicalFilterOption!]
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  language_CONTAINS: code
  language_ENDS_WITH: code
  language_EQUALS: code
  language_GREATER_THAN: code
  language_GREATER_THAN_OR_EQUALS: code
  language_LOWER_THAN: code
  language_LOWER_THAN_OR_EQUALS: code
  language_NOT_EQUALS: code
  language_STARTS_WITH: code
  modifierExtension_ALL_MATCH: ExtensionFilterOption
  modifierExtension_ANY_MATCH: ExtensionFilterOption
  modifierExtension_NONE_MATCH: ExtensionFilterOption
  use: CodingFilterOption
  value_CONTAINS: String
  value_ENDS_WITH: String
  value_EQUALS: String
  value_GREATER_THAN: String
  value_GREATER_THAN_OR_EQUALS: String
  value_LOWER_THAN: String
  value_LOWER_THAN_OR_EQUALS: String
  value_NOT_EQUALS: String
  value_STARTS_WITH: String
}

input ValueSetComposeIncludeConceptDesignationSortOption {
  extension: ExtensionSortOption
  id: SortDirection
  language: SortDirection
  modifierExtension: ExtensionSortOption
  use: CodingSortOption
  value: SortDirection
}

input ValueSetComposeIncludeConceptFilterOption {
  code_CONTAINS: code
  code_ENDS_WITH: code
  code_EQUALS: code
  code_GREATER_THAN: code
  code_GREATER_THAN_OR_EQUALS: code
  code_LOWER_THAN: code
  code_LOWER_THAN_OR_EQUALS: code
  code_NOT_EQUALS: code
  code_STARTS_WITH: code
  designation_ALL_MATCH: ValueSetComposeIncludeConceptDesignationFilterOption
  designation_ANY_MATCH: ValueSetComposeIncludeConceptDesignationFilterOption
  designation_NONE_MATCH: ValueSetComposeIncludeConceptDesignationFilterOption
  display_CONTAINS: String
  display_ENDS_WITH: String
  display_EQUALS: String
  display_GREATER_THAN: String
  display_GREATER_THAN_OR_EQUALS: String
  display_LOWER_THAN: String
  display_LOWER_THAN_OR_EQUALS: String
  display_NOT_EQUALS: String
  display_STARTS_WITH: String
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  modifierExtension_ALL_MATCH: ExtensionFilterOption
  modifierExtension_ANY_MATCH: ExtensionFilterOption
  modifierExtension_NONE_MATCH: ExtensionFilterOption
}

input ValueSetComposeIncludeConceptLogicalFilterOption {
  AND: [ValueSetComposeIncludeConceptLogicalFilterOption!]
  NOT: ValueSetComposeIncludeConceptLogicalFilterOption
  OR: [ValueSetComposeIncludeConceptLogicalFilterOption!]
  code_CONTAINS: code
  code_ENDS_WITH: code
  code_EQUALS: code
  code_GREATER_THAN: code
  code_GREATER_THAN_OR_EQUALS: code
  code_LOWER_THAN: code
  code_LOWER_THAN_OR_EQUALS: code
  code_NOT_EQUALS: code
  code_STARTS_WITH: code
  designation_ALL_MATCH: ValueSetComposeIncludeConceptDesignationFilterOption
  designation_ANY_MATCH: ValueSetComposeIncludeConceptDesignationFilterOption
  designation_NONE_MATCH: ValueSetComposeIncludeConceptDesignationFilterOption
  display_CONTAINS: String
  display_ENDS_WITH: String
  display_EQUALS: String
  display_GREATER_THAN: String
  display_GREATER_THAN_OR_EQUALS: String
  display_LOWER_THAN: String
  display_LOWER_THAN_OR_EQUALS: String
  display_NOT_EQUALS: String
  display_STARTS_WITH: String
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  modifierExtension_ALL_MATCH: ExtensionFilterOption
  modifierExtension_ANY_MATCH: ExtensionFilterOption
  modifierExtension_NONE_MATCH: ExtensionFilterOption
}

input ValueSetComposeIncludeConceptSortOption {
  code: SortDirection
  designation: ValueSetComposeIncludeConceptDesignationSortOption
  display: SortDirection
  extension: ExtensionSortOption
  id: SortDirection
  modifierExtension: ExtensionSortOption
}

input ValueSetComposeIncludeFilterCommandInput {
  extension: [ExtensionCommandInput!]
  id: String
  modifierExtension: [ExtensionCommandInput!]
  op: code!
  property: code!
  value: String!
}

input ValueSetComposeIncludeFilterFilterOption {
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  modifierExtension_ALL_MATCH: ExtensionFilterOption
  modifierExtension_ANY_MATCH: ExtensionFilterOption
  modifierExtension_NONE_MATCH: ExtensionFilterOption
  op_CONTAINS: code
  op_ENDS_WITH: code
  op_EQUALS: code
  op_GREATER_THAN: code
  op_GREATER_THAN_OR_EQUALS: code
  op_LOWER_THAN: code
  op_LOWER_THAN_OR_EQUALS: code
  op_NOT_EQUALS: code
  op_STARTS_WITH: code
  property_CONTAINS: code
  property_ENDS_WITH: code
  property_EQUALS: code
  property_GREATER_THAN: code
  property_GREATER_THAN_OR_EQUALS: code
  property_LOWER_THAN: code
  property_LOWER_THAN_OR_EQUALS: code
  property_NOT_EQUALS: code
  property_STARTS_WITH: code
  value_CONTAINS: String
  value_ENDS_WITH: String
  value_EQUALS: String
  value_GREATER_THAN: String
  value_GREATER_THAN_OR_EQUALS: String
  value_LOWER_THAN: String
  value_LOWER_THAN_OR_EQUALS: String
  value_NOT_EQUALS: String
  value_STARTS_WITH: String
}

input ValueSetComposeIncludeFilterLogicalFilterOption {
  AND: [ValueSetComposeIncludeFilterLogicalFilterOption!]
  NOT: ValueSetComposeIncludeFilterLogicalFilterOption
  OR: [ValueSetComposeIncludeFilterLogicalFilterOption!]
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  modifierExtension_ALL_MATCH: ExtensionFilterOption
  modifierExtension_ANY_MATCH: ExtensionFilterOption
  modifierExtension_NONE_MATCH: ExtensionFilterOption
  op_CONTAINS: code
  op_ENDS_WITH: code
  op_EQUALS: code
  op_GREATER_THAN: code
  op_GREATER_THAN_OR_EQUALS: code
  op_LOWER_THAN: code
  op_LOWER_THAN_OR_EQUALS: code
  op_NOT_EQUALS: code
  op_STARTS_WITH: code
  property_CONTAINS: code
  property_ENDS_WITH: code
  property_EQUALS: code
  property_GREATER_THAN: code
  property_GREATER_THAN_OR_EQUALS: code
  property_LOWER_THAN: code
  property_LOWER_THAN_OR_EQUALS: code
  property_NOT_EQUALS: code
  property_STARTS_WITH: code
  value_CONTAINS: String
  value_ENDS_WITH: String
  value_EQUALS: String
  value_GREATER_THAN: String
  value_GREATER_THAN_OR_EQUALS: String
  value_LOWER_THAN: String
  value_LOWER_THAN_OR_EQUALS: String
  value_NOT_EQUALS: String
  value_STARTS_WITH: String
}

input ValueSetComposeIncludeFilterOption {
  concept_ALL_MATCH: ValueSetComposeIncludeConceptFilterOption
  concept_ANY_MATCH: ValueSetComposeIncludeConceptFilterOption
  concept_NONE_MATCH: ValueSetComposeIncludeConceptFilterOption
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  filter_ALL_MATCH: ValueSetComposeIncludeFilterFilterOption
  filter_ANY_MATCH: ValueSetComposeIncludeFilterFilterOption
  filter_NONE_MATCH: ValueSetComposeIncludeFilterFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  modifierExtension_ALL_MATCH: ExtensionFilterOption
  modifierExtension_ANY_MATCH: ExtensionFilterOption
  modifierExtension_NONE_MATCH: ExtensionFilterOption
  system_CONTAINS: uri
  system_ENDS_WITH: uri
  system_EQUALS: uri
  system_GREATER_THAN: uri
  system_GREATER_THAN_OR_EQUALS: uri
  system_LOWER_THAN: uri
  system_LOWER_THAN_OR_EQUALS: uri
  system_NOT_EQUALS: uri
  system_STARTS_WITH: uri
  valueSet_ALL_MATCH: ValueSetComposeIncludeValueSetChildFilterOption
  valueSet_ANY_MATCH: ValueSetComposeIncludeValueSetChildFilterOption
  valueSet_EQUALS: [canonical!]
  valueSet_NONE_MATCH: ValueSetComposeIncludeValueSetChildFilterOption
  valueSet_NOT_EQUALS: [canonical!]
  version_CONTAINS: String
  version_ENDS_WITH: String
  version_EQUALS: String
  version_GREATER_THAN: String
  version_GREATER_THAN_OR_EQUALS: String
  version_LOWER_THAN: String
  version_LOWER_THAN_OR_EQUALS: String
  version_NOT_EQUALS: String
  version_STARTS_WITH: String
}

input ValueSetComposeIncludeFilterSortOption {
  extension: ExtensionSortOption
  id: SortDirection
  modifierExtension: ExtensionSortOption
  op: SortDirection
  property: SortDirection
  value: SortDirection
}

input ValueSetComposeIncludeLogicalFilterOption {
  AND: [ValueSetComposeIncludeLogicalFilterOption!]
  NOT: ValueSetComposeIncludeLogicalFilterOption
  OR: [ValueSetComposeIncludeLogicalFilterOption!]
  concept_ALL_MATCH: ValueSetComposeIncludeConceptFilterOption
  concept_ANY_MATCH: ValueSetComposeIncludeConceptFilterOption
  concept_NONE_MATCH: ValueSetComposeIncludeConceptFilterOption
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  filter_ALL_MATCH: ValueSetComposeIncludeFilterFilterOption
  filter_ANY_MATCH: ValueSetComposeIncludeFilterFilterOption
  filter_NONE_MATCH: ValueSetComposeIncludeFilterFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  modifierExtension_ALL_MATCH: ExtensionFilterOption
  modifierExtension_ANY_MATCH: ExtensionFilterOption
  modifierExtension_NONE_MATCH: ExtensionFilterOption
  system_CONTAINS: uri
  system_ENDS_WITH: uri
  system_EQUALS: uri
  system_GREATER_THAN: uri
  system_GREATER_THAN_OR_EQUALS: uri
  system_LOWER_THAN: uri
  system_LOWER_THAN_OR_EQUALS: uri
  system_NOT_EQUALS: uri
  system_STARTS_WITH: uri
  valueSet_ALL_MATCH: ValueSetComposeIncludeValueSetChildFilterOption
  valueSet_ANY_MATCH: ValueSetComposeIncludeValueSetChildFilterOption
  valueSet_EQUALS: [canonical!]
  valueSet_NONE_MATCH: ValueSetComposeIncludeValueSetChildFilterOption
  valueSet_NOT_EQUALS: [canonical!]
  version_CONTAINS: String
  version_ENDS_WITH: String
  version_EQUALS: String
  version_GREATER_THAN: String
  version_GREATER_THAN_OR_EQUALS: String
  version_LOWER_THAN: String
  version_LOWER_THAN_OR_EQUALS: String
  version_NOT_EQUALS: String
  version_STARTS_WITH: String
}

input ValueSetComposeIncludeSortOption {
  concept: ValueSetComposeIncludeConceptSortOption
  extension: ExtensionSortOption
  filter: ValueSetComposeIncludeFilterSortOption
  id: SortDirection
  modifierExtension: ExtensionSortOption
  system: SortDirection
  valueSet: SortDirection
  version: SortDirection
}

input ValueSetComposeIncludeValueSetChildFilterOption {
  CONTAINS: canonical
  ENDS_WITH: canonical
  EQUALS: canonical
  GREATER_THAN: canonical
  GREATER_THAN_OR_EQUALS: canonical
  LOWER_THAN: canonical
  LOWER_THAN_OR_EQUALS: canonical
  NOT_EQUALS: canonical
  STARTS_WITH: canonical
}

input ValueSetComposeLogicalFilterOption {
  AND: [ValueSetComposeLogicalFilterOption!]
  NOT: ValueSetComposeLogicalFilterOption
  OR: [ValueSetComposeLogicalFilterOption!]
  exclude_ALL_MATCH: ValueSetComposeIncludeFilterOption
  exclude_ANY_MATCH: ValueSetComposeIncludeFilterOption
  exclude_NONE_MATCH: ValueSetComposeIncludeFilterOption
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  inactive_EQUALS: Boolean
  inactive_NOT_EQUALS: Boolean
  include_ALL_MATCH: ValueSetComposeIncludeFilterOption
  include_ANY_MATCH: ValueSetComposeIncludeFilterOption
  include_NONE_MATCH: ValueSetComposeIncludeFilterOption
  lockedDate_EQUALS: date
  lockedDate_GREATER_THAN: date
  lockedDate_GREATER_THAN_OR_EQUALS: date
  lockedDate_LOWER_THAN: date
  lockedDate_LOWER_THAN_OR_EQUALS: date
  lockedDate_NOT_EQUALS: date
  modifierExtension_ALL_MATCH: ExtensionFilterOption
  modifierExtension_ANY_MATCH: ExtensionFilterOption
  modifierExtension_NONE_MATCH: ExtensionFilterOption
}

input ValueSetComposeSortOption {
  exclude: ValueSetComposeIncludeSortOption
  extension: ExtensionSortOption
  id: SortDirection
  inactive: SortDirection
  include: ValueSetComposeIncludeSortOption
  lockedDate: SortDirection
  modifierExtension: ExtensionSortOption
}

input ValueSetExpansionCommandInput {
  contains: [ValueSetExpansionContainsCommandInput!]
  extension: [ExtensionCommandInput!]
  id: String
  identifier: uri
  modifierExtension: [ExtensionCommandInput!]
  offset: Int
  parameter: [ValueSetExpansionParameterCommandInput!]
  timestamp: dateTime!
  total: Int
}

input ValueSetExpansionContainsCommandInput {
  abstract: Boolean
  code: code
  contains: [ValueSetExpansionContainsCommandInput!]
  designation: [ValueSetComposeIncludeConceptDesignationCommandInput!]
  display: String
  extension: [ExtensionCommandInput!]
  id: String
  inactive: Boolean
  modifierExtension: [ExtensionCommandInput!]
  system: uri
  version: String
}

input ValueSetExpansionContainsFilterOption {
  abstract_EQUALS: Boolean
  abstract_NOT_EQUALS: Boolean
  code_CONTAINS: code
  code_ENDS_WITH: code
  code_EQUALS: code
  code_GREATER_THAN: code
  code_GREATER_THAN_OR_EQUALS: code
  code_LOWER_THAN: code
  code_LOWER_THAN_OR_EQUALS: code
  code_NOT_EQUALS: code
  code_STARTS_WITH: code
  contains_ALL_MATCH: ValueSetExpansionContainsFilterOption
  contains_ANY_MATCH: ValueSetExpansionContainsFilterOption
  contains_NONE_MATCH: ValueSetExpansionContainsFilterOption
  designation_ALL_MATCH: ValueSetComposeIncludeConceptDesignationFilterOption
  designation_ANY_MATCH: ValueSetComposeIncludeConceptDesignationFilterOption
  designation_NONE_MATCH: ValueSetComposeIncludeConceptDesignationFilterOption
  display_CONTAINS: String
  display_ENDS_WITH: String
  display_EQUALS: String
  display_GREATER_THAN: String
  display_GREATER_THAN_OR_EQUALS: String
  display_LOWER_THAN: String
  display_LOWER_THAN_OR_EQUALS: String
  display_NOT_EQUALS: String
  display_STARTS_WITH: String
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  inactive_EQUALS: Boolean
  inactive_NOT_EQUALS: Boolean
  modifierExtension_ALL_MATCH: ExtensionFilterOption
  modifierExtension_ANY_MATCH: ExtensionFilterOption
  modifierExtension_NONE_MATCH: ExtensionFilterOption
  system_CONTAINS: uri
  system_ENDS_WITH: uri
  system_EQUALS: uri
  system_GREATER_THAN: uri
  system_GREATER_THAN_OR_EQUALS: uri
  system_LOWER_THAN: uri
  system_LOWER_THAN_OR_EQUALS: uri
  system_NOT_EQUALS: uri
  system_STARTS_WITH: uri
  version_CONTAINS: String
  version_ENDS_WITH: String
  version_EQUALS: String
  version_GREATER_THAN: String
  version_GREATER_THAN_OR_EQUALS: String
  version_LOWER_THAN: String
  version_LOWER_THAN_OR_EQUALS: String
  version_NOT_EQUALS: String
  version_STARTS_WITH: String
}

input ValueSetExpansionContainsLogicalFilterOption {
  AND: [ValueSetExpansionContainsLogicalFilterOption!]
  NOT: ValueSetExpansionContainsLogicalFilterOption
  OR: [ValueSetExpansionContainsLogicalFilterOption!]
  abstract_EQUALS: Boolean
  abstract_NOT_EQUALS: Boolean
  code_CONTAINS: code
  code_ENDS_WITH: code
  code_EQUALS: code
  code_GREATER_THAN: code
  code_GREATER_THAN_OR_EQUALS: code
  code_LOWER_THAN: code
  code_LOWER_THAN_OR_EQUALS: code
  code_NOT_EQUALS: code
  code_STARTS_WITH: code
  contains_ALL_MATCH: ValueSetExpansionContainsFilterOption
  contains_ANY_MATCH: ValueSetExpansionContainsFilterOption
  contains_NONE_MATCH: ValueSetExpansionContainsFilterOption
  designation_ALL_MATCH: ValueSetComposeIncludeConceptDesignationFilterOption
  designation_ANY_MATCH: ValueSetComposeIncludeConceptDesignationFilterOption
  designation_NONE_MATCH: ValueSetComposeIncludeConceptDesignationFilterOption
  display_CONTAINS: String
  display_ENDS_WITH: String
  display_EQUALS: String
  display_GREATER_THAN: String
  display_GREATER_THAN_OR_EQUALS: String
  display_LOWER_THAN: String
  display_LOWER_THAN_OR_EQUALS: String
  display_NOT_EQUALS: String
  display_STARTS_WITH: String
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  inactive_EQUALS: Boolean
  inactive_NOT_EQUALS: Boolean
  modifierExtension_ALL_MATCH: ExtensionFilterOption
  modifierExtension_ANY_MATCH: ExtensionFilterOption
  modifierExtension_NONE_MATCH: ExtensionFilterOption
  system_CONTAINS: uri
  system_ENDS_WITH: uri
  system_EQUALS: uri
  system_GREATER_THAN: uri
  system_GREATER_THAN_OR_EQUALS: uri
  system_LOWER_THAN: uri
  system_LOWER_THAN_OR_EQUALS: uri
  system_NOT_EQUALS: uri
  system_STARTS_WITH: uri
  version_CONTAINS: String
  version_ENDS_WITH: String
  version_EQUALS: String
  version_GREATER_THAN: String
  version_GREATER_THAN_OR_EQUALS: String
  version_LOWER_THAN: String
  version_LOWER_THAN_OR_EQUALS: String
  version_NOT_EQUALS: String
  version_STARTS_WITH: String
}

input ValueSetExpansionContainsSortOption {
  abstract: SortDirection
  code: SortDirection
  contains: ValueSetExpansionContainsSortOption
  designation: ValueSetComposeIncludeConceptDesignationSortOption
  display: SortDirection
  extension: ExtensionSortOption
  id: SortDirection
  inactive: SortDirection
  modifierExtension: ExtensionSortOption
  system: SortDirection
  version: SortDirection
}

input ValueSetExpansionFilterOption {
  contains_ALL_MATCH: ValueSetExpansionContainsFilterOption
  contains_ANY_MATCH: ValueSetExpansionContainsFilterOption
  contains_NONE_MATCH: ValueSetExpansionContainsFilterOption
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  identifier_CONTAINS: uri
  identifier_ENDS_WITH: uri
  identifier_EQUALS: uri
  identifier_GREATER_THAN: uri
  identifier_GREATER_THAN_OR_EQUALS: uri
  identifier_LOWER_THAN: uri
  identifier_LOWER_THAN_OR_EQUALS: uri
  identifier_NOT_EQUALS: uri
  identifier_STARTS_WITH: uri
  modifierExtension_ALL_MATCH: ExtensionFilterOption
  modifierExtension_ANY_MATCH: ExtensionFilterOption
  modifierExtension_NONE_MATCH: ExtensionFilterOption
  offset_EQUALS: Int
  offset_GREATER_THAN: Int
  offset_GREATER_THAN_OR_EQUALS: Int
  offset_LOWER_THAN: Int
  offset_LOWER_THAN_OR_EQUALS: Int
  offset_NOT_EQUALS: Int
  parameter_ALL_MATCH: ValueSetExpansionParameterFilterOption
  parameter_ANY_MATCH: ValueSetExpansionParameterFilterOption
  parameter_NONE_MATCH: ValueSetExpansionParameterFilterOption
  timestamp_EQUALS: dateTime
  timestamp_GREATER_THAN: dateTime
  timestamp_GREATER_THAN_OR_EQUALS: dateTime
  timestamp_LOWER_THAN: dateTime
  timestamp_LOWER_THAN_OR_EQUALS: dateTime
  timestamp_NOT_EQUALS: dateTime
  total_EQUALS: Int
  total_GREATER_THAN: Int
  total_GREATER_THAN_OR_EQUALS: Int
  total_LOWER_THAN: Int
  total_LOWER_THAN_OR_EQUALS: Int
  total_NOT_EQUALS: Int
}

input ValueSetExpansionLogicalFilterOption {
  AND: [ValueSetExpansionLogicalFilterOption!]
  NOT: ValueSetExpansionLogicalFilterOption
  OR: [ValueSetExpansionLogicalFilterOption!]
  contains_ALL_MATCH: ValueSetExpansionContainsFilterOption
  contains_ANY_MATCH: ValueSetExpansionContainsFilterOption
  contains_NONE_MATCH: ValueSetExpansionContainsFilterOption
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  identifier_CONTAINS: uri
  identifier_ENDS_WITH: uri
  identifier_EQUALS: uri
  identifier_GREATER_THAN: uri
  identifier_GREATER_THAN_OR_EQUALS: uri
  identifier_LOWER_THAN: uri
  identifier_LOWER_THAN_OR_EQUALS: uri
  identifier_NOT_EQUALS: uri
  identifier_STARTS_WITH: uri
  modifierExtension_ALL_MATCH: ExtensionFilterOption
  modifierExtension_ANY_MATCH: ExtensionFilterOption
  modifierExtension_NONE_MATCH: ExtensionFilterOption
  offset_EQUALS: Int
  offset_GREATER_THAN: Int
  offset_GREATER_THAN_OR_EQUALS: Int
  offset_LOWER_THAN: Int
  offset_LOWER_THAN_OR_EQUALS: Int
  offset_NOT_EQUALS: Int
  parameter_ALL_MATCH: ValueSetExpansionParameterFilterOption
  parameter_ANY_MATCH: ValueSetExpansionParameterFilterOption
  parameter_NONE_MATCH: ValueSetExpansionParameterFilterOption
  timestamp_EQUALS: dateTime
  timestamp_GREATER_THAN: dateTime
  timestamp_GREATER_THAN_OR_EQUALS: dateTime
  timestamp_LOWER_THAN: dateTime
  timestamp_LOWER_THAN_OR_EQUALS: dateTime
  timestamp_NOT_EQUALS: dateTime
  total_EQUALS: Int
  total_GREATER_THAN: Int
  total_GREATER_THAN_OR_EQUALS: Int
  total_LOWER_THAN: Int
  total_LOWER_THAN_OR_EQUALS: Int
  total_NOT_EQUALS: Int
}

input ValueSetExpansionParameterCommandInput {
  extension: [ExtensionCommandInput!]
  id: String
  modifierExtension: [ExtensionCommandInput!]
  name: String!
  value: ValueSetExpansionParameterCommandInputValue
}

"Generated Input Type, which works as a Union type. Only one field should be filled."
input ValueSetExpansionParameterCommandInputValue {
  boolean: Boolean
  code: code
  dateTime: dateTime
  decimal: Float
  integer: Int
  string: String
  uri: uri
}

input ValueSetExpansionParameterFilterOption {
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  modifierExtension_ALL_MATCH: ExtensionFilterOption
  modifierExtension_ANY_MATCH: ExtensionFilterOption
  modifierExtension_NONE_MATCH: ExtensionFilterOption
  name_CONTAINS: String
  name_ENDS_WITH: String
  name_EQUALS: String
  name_GREATER_THAN: String
  name_GREATER_THAN_OR_EQUALS: String
  name_LOWER_THAN: String
  name_LOWER_THAN_OR_EQUALS: String
  name_NOT_EQUALS: String
  name_STARTS_WITH: String
}

input ValueSetExpansionParameterLogicalFilterOption {
  AND: [ValueSetExpansionParameterLogicalFilterOption!]
  NOT: ValueSetExpansionParameterLogicalFilterOption
  OR: [ValueSetExpansionParameterLogicalFilterOption!]
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  modifierExtension_ALL_MATCH: ExtensionFilterOption
  modifierExtension_ANY_MATCH: ExtensionFilterOption
  modifierExtension_NONE_MATCH: ExtensionFilterOption
  name_CONTAINS: String
  name_ENDS_WITH: String
  name_EQUALS: String
  name_GREATER_THAN: String
  name_GREATER_THAN_OR_EQUALS: String
  name_LOWER_THAN: String
  name_LOWER_THAN_OR_EQUALS: String
  name_NOT_EQUALS: String
  name_STARTS_WITH: String
}

input ValueSetExpansionParameterSortOption {
  extension: ExtensionSortOption
  id: SortDirection
  modifierExtension: ExtensionSortOption
  name: SortDirection
  value: SortDirection
}

input ValueSetExpansionSortOption {
  contains: ValueSetExpansionContainsSortOption
  extension: ExtensionSortOption
  id: SortDirection
  identifier: SortDirection
  modifierExtension: ExtensionSortOption
  offset: SortDirection
  parameter: ValueSetExpansionParameterSortOption
  timestamp: SortDirection
  total: SortDirection
}

input ValueSetFilterOption {
  compose: ValueSetComposeFilterOption
  contact_ALL_MATCH: ContactDetailFilterOption
  contact_ANY_MATCH: ContactDetailFilterOption
  contact_NONE_MATCH: ContactDetailFilterOption
  contained_ALL_MATCH: ResourceFilterOption
  contained_ANY_MATCH: ResourceFilterOption
  contained_NONE_MATCH: ResourceFilterOption
  copyright_CONTAINS: markdown
  copyright_ENDS_WITH: markdown
  copyright_EQUALS: markdown
  copyright_GREATER_THAN: markdown
  copyright_GREATER_THAN_OR_EQUALS: markdown
  copyright_LOWER_THAN: markdown
  copyright_LOWER_THAN_OR_EQUALS: markdown
  copyright_NOT_EQUALS: markdown
  copyright_STARTS_WITH: markdown
  date_EQUALS: dateTime
  date_GREATER_THAN: dateTime
  date_GREATER_THAN_OR_EQUALS: dateTime
  date_LOWER_THAN: dateTime
  date_LOWER_THAN_OR_EQUALS: dateTime
  date_NOT_EQUALS: dateTime
  description_CONTAINS: markdown
  description_ENDS_WITH: markdown
  description_EQUALS: markdown
  description_GREATER_THAN: markdown
  description_GREATER_THAN_OR_EQUALS: markdown
  description_LOWER_THAN: markdown
  description_LOWER_THAN_OR_EQUALS: markdown
  description_NOT_EQUALS: markdown
  description_STARTS_WITH: markdown
  expansion: ValueSetExpansionFilterOption
  experimental_EQUALS: Boolean
  experimental_NOT_EQUALS: Boolean
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  identifier_ALL_MATCH: IdentifierFilterOption
  identifier_ANY_MATCH: IdentifierFilterOption
  identifier_NONE_MATCH: IdentifierFilterOption
  immutable_EQUALS: Boolean
  immutable_NOT_EQUALS: Boolean
  implicitRules_CONTAINS: uri
  implicitRules_ENDS_WITH: uri
  implicitRules_EQUALS: uri
  implicitRules_GREATER_THAN: uri
  implicitRules_GREATER_THAN_OR_EQUALS: uri
  implicitRules_LOWER_THAN: uri
  implicitRules_LOWER_THAN_OR_EQUALS: uri
  implicitRules_NOT_EQUALS: uri
  implicitRules_STARTS_WITH: uri
  jurisdiction_ALL_MATCH: CodeableConceptFilterOption
  jurisdiction_ANY_MATCH: CodeableConceptFilterOption
  jurisdiction_NONE_MATCH: CodeableConceptFilterOption
  language_CONTAINS: code
  language_ENDS_WITH: code
  language_EQUALS: code
  language_GREATER_THAN: code
  language_GREATER_THAN_OR_EQUALS: code
  language_LOWER_THAN: code
  language_LOWER_THAN_OR_EQUALS: code
  language_NOT_EQUALS: code
  language_STARTS_WITH: code
  meta: MetaFilterOption
  modifierExtension_ALL_MATCH: ExtensionFilterOption
  modifierExtension_ANY_MATCH: ExtensionFilterOption
  modifierExtension_NONE_MATCH: ExtensionFilterOption
  name_CONTAINS: String
  name_ENDS_WITH: String
  name_EQUALS: String
  name_GREATER_THAN: String
  name_GREATER_THAN_OR_EQUALS: String
  name_LOWER_THAN: String
  name_LOWER_THAN_OR_EQUALS: String
  name_NOT_EQUALS: String
  name_STARTS_WITH: String
  publisher_CONTAINS: String
  publisher_ENDS_WITH: String
  publisher_EQUALS: String
  publisher_GREATER_THAN: String
  publisher_GREATER_THAN_OR_EQUALS: String
  publisher_LOWER_THAN: String
  publisher_LOWER_THAN_OR_EQUALS: String
  publisher_NOT_EQUALS: String
  publisher_STARTS_WITH: String
  purpose_CONTAINS: markdown
  purpose_ENDS_WITH: markdown
  purpose_EQUALS: markdown
  purpose_GREATER_THAN: markdown
  purpose_GREATER_THAN_OR_EQUALS: markdown
  purpose_LOWER_THAN: markdown
  purpose_LOWER_THAN_OR_EQUALS: markdown
  purpose_NOT_EQUALS: markdown
  purpose_STARTS_WITH: markdown
  status_CONTAINS: code
  status_ENDS_WITH: code
  status_EQUALS: code
  status_GREATER_THAN: code
  status_GREATER_THAN_OR_EQUALS: code
  status_LOWER_THAN: code
  status_LOWER_THAN_OR_EQUALS: code
  status_NOT_EQUALS: code
  status_STARTS_WITH: code
  text: NarrativeFilterOption
  title_CONTAINS: String
  title_ENDS_WITH: String
  title_EQUALS: String
  title_GREATER_THAN: String
  title_GREATER_THAN_OR_EQUALS: String
  title_LOWER_THAN: String
  title_LOWER_THAN_OR_EQUALS: String
  title_NOT_EQUALS: String
  title_STARTS_WITH: String
  url_CONTAINS: uri
  url_ENDS_WITH: uri
  url_EQUALS: uri
  url_GREATER_THAN: uri
  url_GREATER_THAN_OR_EQUALS: uri
  url_LOWER_THAN: uri
  url_LOWER_THAN_OR_EQUALS: uri
  url_NOT_EQUALS: uri
  url_STARTS_WITH: uri
  useContext_ALL_MATCH: UsageContextFilterOption
  useContext_ANY_MATCH: UsageContextFilterOption
  useContext_NONE_MATCH: UsageContextFilterOption
  version_CONTAINS: String
  version_ENDS_WITH: String
  version_EQUALS: String
  version_GREATER_THAN: String
  version_GREATER_THAN_OR_EQUALS: String
  version_LOWER_THAN: String
  version_LOWER_THAN_OR_EQUALS: String
  version_NOT_EQUALS: String
  version_STARTS_WITH: String
}

input ValueSetLogicalFilterOption {
  AND: [ValueSetLogicalFilterOption!]
  NOT: ValueSetLogicalFilterOption
  OR: [ValueSetLogicalFilterOption!]
  compose: ValueSetComposeFilterOption
  contact_ALL_MATCH: ContactDetailFilterOption
  contact_ANY_MATCH: ContactDetailFilterOption
  contact_NONE_MATCH: ContactDetailFilterOption
  contained_ALL_MATCH: ResourceFilterOption
  contained_ANY_MATCH: ResourceFilterOption
  contained_NONE_MATCH: ResourceFilterOption
  copyright_CONTAINS: markdown
  copyright_ENDS_WITH: markdown
  copyright_EQUALS: markdown
  copyright_GREATER_THAN: markdown
  copyright_GREATER_THAN_OR_EQUALS: markdown
  copyright_LOWER_THAN: markdown
  copyright_LOWER_THAN_OR_EQUALS: markdown
  copyright_NOT_EQUALS: markdown
  copyright_STARTS_WITH: markdown
  date_EQUALS: dateTime
  date_GREATER_THAN: dateTime
  date_GREATER_THAN_OR_EQUALS: dateTime
  date_LOWER_THAN: dateTime
  date_LOWER_THAN_OR_EQUALS: dateTime
  date_NOT_EQUALS: dateTime
  description_CONTAINS: markdown
  description_ENDS_WITH: markdown
  description_EQUALS: markdown
  description_GREATER_THAN: markdown
  description_GREATER_THAN_OR_EQUALS: markdown
  description_LOWER_THAN: markdown
  description_LOWER_THAN_OR_EQUALS: markdown
  description_NOT_EQUALS: markdown
  description_STARTS_WITH: markdown
  expansion: ValueSetExpansionFilterOption
  experimental_EQUALS: Boolean
  experimental_NOT_EQUALS: Boolean
  extension_ALL_MATCH: ExtensionFilterOption
  extension_ANY_MATCH: ExtensionFilterOption
  extension_NONE_MATCH: ExtensionFilterOption
  id_CONTAINS: String
  id_ENDS_WITH: String
  id_EQUALS: String
  id_GREATER_THAN: String
  id_GREATER_THAN_OR_EQUALS: String
  id_LOWER_THAN: String
  id_LOWER_THAN_OR_EQUALS: String
  id_NOT_EQUALS: String
  id_STARTS_WITH: String
  identifier_ALL_MATCH: IdentifierFilterOption
  identifier_ANY_MATCH: IdentifierFilterOption
  identifier_NONE_MATCH: IdentifierFilterOption
  immutable_EQUALS: Boolean
  immutable_NOT_EQUALS: Boolean
  implicitRules_CONTAINS: uri
  implicitRules_ENDS_WITH: uri
  implicitRules_EQUALS: uri
  implicitRules_GREATER_THAN: uri
  implicitRules_GREATER_THAN_OR_EQUALS: uri
  implicitRules_LOWER_THAN: uri
  implicitRules_LOWER_THAN_OR_EQUALS: uri
  implicitRules_NOT_EQUALS: uri
  implicitRules_STARTS_WITH: uri
  jurisdiction_ALL_MATCH: CodeableConceptFilterOption
  jurisdiction_ANY_MATCH: CodeableConceptFilterOption
  jurisdiction_NONE_MATCH: CodeableConceptFilterOption
  language_CONTAINS: code
  language_ENDS_WITH: code
  language_EQUALS: code
  language_GREATER_THAN: code
  language_GREATER_THAN_OR_EQUALS: code
  language_LOWER_THAN: code
  language_LOWER_THAN_OR_EQUALS: code
  language_NOT_EQUALS: code
  language_STARTS_WITH: code
  meta: MetaFilterOption
  modifierExtension_ALL_MATCH: ExtensionFilterOption
  modifierExtension_ANY_MATCH: ExtensionFilterOption
  modifierExtension_NONE_MATCH: ExtensionFilterOption
  name_CONTAINS: String
  name_ENDS_WITH: String
  name_EQUALS: String
  name_GREATER_THAN: String
  name_GREATER_THAN_OR_EQUALS: String
  name_LOWER_THAN: String
  name_LOWER_THAN_OR_EQUALS: String
  name_NOT_EQUALS: String
  name_STARTS_WITH: String
  publisher_CONTAINS: String
  publisher_ENDS_WITH: String
  publisher_EQUALS: String
  publisher_GREATER_THAN: String
  publisher_GREATER_THAN_OR_EQUALS: String
  publisher_LOWER_THAN: String
  publisher_LOWER_THAN_OR_EQUALS: String
  publisher_NOT_EQUALS: String
  publisher_STARTS_WITH: String
  purpose_CONTAINS: markdown
  purpose_ENDS_WITH: markdown
  purpose_EQUALS: markdown
  purpose_GREATER_THAN: markdown
  purpose_GREATER_THAN_OR_EQUALS: markdown
  purpose_LOWER_THAN: markdown
  purpose_LOWER_THAN_OR_EQUALS: markdown
  purpose_NOT_EQUALS: markdown
  purpose_STARTS_WITH: markdown
  status_CONTAINS: code
  status_ENDS_WITH: code
  status_EQUALS: code
  status_GREATER_THAN: code
  status_GREATER_THAN_OR_EQUALS: code
  status_LOWER_THAN: code
  status_LOWER_THAN_OR_EQUALS: code
  status_NOT_EQUALS: code
  status_STARTS_WITH: code
  text: NarrativeFilterOption
  title_CONTAINS: String
  title_ENDS_WITH: String
  title_EQUALS: String
  title_GREATER_THAN: String
  title_GREATER_THAN_OR_EQUALS: String
  title_LOWER_THAN: String
  title_LOWER_THAN_OR_EQUALS: String
  title_NOT_EQUALS: String
  title_STARTS_WITH: String
  url_CONTAINS: uri
  url_ENDS_WITH: uri
  url_EQUALS: uri
  url_GREATER_THAN: uri
  url_GREATER_THAN_OR_EQUALS: uri
  url_LOWER_THAN: uri
  url_LOWER_THAN_OR_EQUALS: uri
  url_NOT_EQUALS: uri
  url_STARTS_WITH: uri
  useContext_ALL_MATCH: UsageContextFilterOption
  useContext_ANY_MATCH: UsageContextFilterOption
  useContext_NONE_MATCH: UsageContextFilterOption
  version_CONTAINS: String
  version_ENDS_WITH: String
  version_EQUALS: String
  version_GREATER_THAN: String
  version_GREATER_THAN_OR_EQUALS: String
  version_LOWER_THAN: String
  version_LOWER_THAN_OR_EQUALS: String
  version_NOT_EQUALS: String
  version_STARTS_WITH: String
}

input ValueSetSortOption {
  compose: ValueSetComposeSortOption
  contact: ContactDetailSortOption
  contained: ResourceSortOption
  copyright: SortDirection
  date: SortDirection
  description: SortDirection
  expansion: ValueSetExpansionSortOption
  experimental: SortDirection
  extension: ExtensionSortOption
  id: SortDirection
  identifier: IdentifierSortOption
  immutable: SortDirection
  implicitRules: SortDirection
  jurisdiction: CodeableConceptSortOption
  language: SortDirection
  meta: MetaSortOption
  modifierExtension: ExtensionSortOption
  name: SortDirection
  publisher: SortDirection
  purpose: SortDirection
  status: SortDirection
  text: NarrativeSortOption
  title: SortDirection
  url: SortDirection
  useContext: UsageContextSortOption
  version: SortDirection
}
