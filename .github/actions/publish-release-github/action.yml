name: Post release to public
description: 'Create Release on Github Repository'

inputs:
  github_token:
    description: 'Github token'
    required: true
  release_version:
    description: 'Version to release'
    required: true
outputs:
  changelog:
    value: ${{ steps.modified.outputs.log }}
    description: "The changelog"
    
runs:
  using: "composite"
  steps:
    - name: Checkout updated master
      uses: actions/checkout@v3
      with:
        ref: master
    - name: Get reference to release commit
      id: release_commit
      shell: bash
      run: |
        REF=$(git log --grep='Release [0-9.]* \(.*\) \(.*\)' -n 1 --format=format:"%H")
        echo "Last release commit is: $REF"
        echo "ref=$REF" >> $GITHUB_ENV
        
    - name: Generate changelog
      id: changelog
      uses: metcalfc/changelog-generator@v0.4.4
      with:
        myToken: ${{ inputs.github_token }}
        head-ref: ${{ steps.release_commit.outputs.ref }}

    - name: Modify the changelog
      id: modified
      shell: bash
      run: |
        set -o noglob

        printf "Going to modify changelog\n"
        # Define patterns to filter out
        
        PATTERNS=(
        'Prepare new snapshot version .*SNAPSHOT for next development cycle'
        'Merge pull request .* from standard-api/snapshot/.*-SNAPSHOT'
        'Release [0-9.]* \(.*\) \(.*\)'
        )
        printf "Patterns are defined\n"
        # Join patterns with '|'
        
        JOINT_PATTERN=$(IFS='|'; echo "${PATTERNS[*]}")
        printf "Patterns are joined\n"
        # Store the original changelog
        ORIGINAL_CHANGELOG=$(echo "${{ steps.changelog.outputs.changelog }}")
        printf "Original changelog loaded\n"
        printf "Original changelog: %s\n" "$ORIGINAL_CHANGELOG"
        
        # Filter the changelog until the given commit hash
        FILTERED_UNTIL_COMMIT=$(echo "$ORIGINAL_CHANGELOG" | awk "/${{ steps.release_commit.outputs.ref }}/{exit} 1")
    
        # Filter out the undesired lines
        FILTERED_CHANGELOG=$(echo "$FILTERED_UNTIL_COMMIT" | grep -vE "$JOINT_PATTERN")
        printf "Filtered changelog: %s\n" "$FILTERED_CHANGELOG"
      
        # Sanitize the changelog for output
        SANITIZED_CHANGELOG=$(printf '%b' "$REVERSED_CHANGELOG")
        SANITIZED_CHANGELOG=${SANITIZED_CHANGELOG//$'\n'/'%0A'}
        SANITIZED_CHANGELOG=${SANITIZED_CHANGELOG//$'\r'/'%0D'}
        printf "Final changelog: %s\n" "$SANITIZED_CHANGELOG"
        echo "log=$(printf "%s\n" "$SANITIZED_CHANGELOG")" >> $GITHUB_OUTPUT
        
    - name: Create Release on Github Repository
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ inputs.github_token }}
      with:
        tag_name: ${{ inputs.release_version }}
        release_name: Release v${{ inputs.release_version }}
        body: |
          Grab the new version from Maven central https://repo1.maven.org/maven2/ai/stapi/graph-system/${{ inputs.release_version }}/ by using it in your deps:

          ```
          <dependencies>
              <dependency>
                  <groupId>ai.stapi</groupId>
                  <artifactId>graph-system</artifactId>
                  <version>${{ inputs.release_version }}</version>
              </dependency>
          </dependencies>
          ```

          ### Things that changed in this release
          ${{ steps.modified.outputs.log }}
        draft: false
        prerelease: false

